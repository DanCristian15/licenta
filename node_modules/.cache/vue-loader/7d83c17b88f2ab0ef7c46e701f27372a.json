{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/shared/components/search/SearchCityList.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/shared/components/search/SearchCityList.vue","mtime":1645805363970},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/css-loader/dist/cjs.js","mtime":1637061260154},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1637061260528},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/postcss-loader/src/index.js","mtime":1637061260465},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/sass-loader/dist/cjs.js","mtime":1637061279772},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiQHNjc3NWYXJpYWJsZXMiOwoKLnYtbGlzdC1pdGVtX190aXRsZSB7CiAgICBmb250LXNpemU6IGZvbnQtc2l6ZSggJ3MnICk7Cn0KCi5nc3Qtc2VhcmNoLWNpdHktbGlzdF9faXRlbS10aXRsZSBtYXJrIHsKICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OwogICAgZm9udC13ZWlnaHQ6IGZvbnQtd2VpZ2h0KCAnbWVkaXVtJyApOwp9CgouZ3N0LXNlYXJjaC1jaXR5LWxpc3RfX2l0ZW0tdGl0bGUgc3BhbiB7CiAgICBjb2xvcjogdGhlbWUtY29sb3IoICd0ZXJ0aWFyeScgKTsKfQoKLmdzdC1zZWFyY2gtY2l0eS1saXN0X19pdGVtLnNlbGVjdGVkIC52LWxpc3QtaXRlbV9fdGl0bGUsCi5nc3Qtc2VhcmNoLWNpdHktbGlzdF9faXRlbS5zZWxlY3RlZCBzcGFuIHsKICAgIGNvbG9yOiB0aGVtZS1jb2xvciggJ3ByaW1hcnknICk7Cn0K"},{"version":3,"sources":["SearchCityList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"SearchCityList.vue","sourceRoot":"src/core/shared/components/search","sourcesContent":["<template>\n    <div>\n        <v-list-item\n            v-for=\"(city, index) in sortedItems\"\n            :key=\"index\"\n            class=\"gst-search-city-list__item\"\n            :class=\"{ 'selected': isSelected( city ) }\"\n            @click=\"$emit('select', city )\">\n            <slot name=\"icon\"></slot>\n            <v-list-item-title>\n                <!-- eslint-disable-next-line vue/no-v-html -->\n                <div class=\"gst-search-city-list__item-title\" v-html=\"$options.filters.cityHTML( getHTMLCity( city ), { country: true } )\"></div>\n            </v-list-item-title>\n        </v-list-item>\n    </div>\n</template>\n\n<script>\n    import isEqual from 'lodash/isEqual';\n    import { sortCompare as sortCompareUtilsGeneralSort } from '@/core/utils/sortCompareUtils';\n\n    export default {\n        name: 'SeachCityList',\n        props: {\n            items: {\n                type: Array,\n                required: true\n            },\n            highlight: {\n                type: String,\n                required: false,\n                default: ''\n            },\n            selected: {\n                type: Object,\n                default: () => ( {} )\n            }\n        },\n        computed: {\n            sortedItems() {\n                return [ ...this.items ].sort( ( a, b ) => sortCompareUtilsGeneralSort( a.name, b.name, true ) );\n            }\n        },\n        methods: {\n            getHTMLCity( item ) {\n                const { highlight } = this;\n\n                if ( !highlight ) {\n                    return item;\n                }\n\n                const regex = new RegExp( `(${highlight })`, 'gi' );\n\n                return {\n                    ...item,\n                    name: item.name.replace( regex, '<mark>$1</mark>' )\n                };\n            },\n            isSelected( item ) {\n                return isEqual( item, this.selected );\n            }\n        },\n    };\n</script>\n\n<style lang=\"scss\">\n    @import \"@scssVariables\";\n\n    .v-list-item__title {\n        font-size: font-size( 's' );\n    }\n\n    .gst-search-city-list__item-title mark {\n        background-color: transparent;\n        font-weight: font-weight( 'medium' );\n    }\n\n    .gst-search-city-list__item-title span {\n        color: theme-color( 'tertiary' );\n    }\n\n    .gst-search-city-list__item.selected .v-list-item__title,\n    .gst-search-city-list__item.selected span {\n        color: theme-color( 'primary' );\n    }\n</style>\n"]}]}