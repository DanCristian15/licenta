{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/views/cart/TheCheckout/Fieldsets/PaymentFieldsetTicketsOnly.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/views/cart/TheCheckout/Fieldsets/PaymentFieldsetTicketsOnly.vue","mtime":1645805365983},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmltcG9ydCBCYXNlRm9ybUlucHV0IGZyb20gJ0B0ZW5hbnRzL3RpY2tldG1hc3Rlci9hcHAvY29tcG9uZW50cy9pbnB1dHMvQmFzZUZvcm1JbnB1dC52dWUnOwppbXBvcnQgQmFzZUZvcm1TZWxlY3QgZnJvbSAnQHRlbmFudHMvdGlja2V0bWFzdGVyL2FwcC9jb21wb25lbnRzL2lucHV0cy9CYXNlRm9ybVNlbGVjdC52dWUnOwppbXBvcnQgVGlja2V0bWFzdGVyTG9nbyBmcm9tICdAdGVuYW50cy90aWNrZXRtYXN0ZXIvYXBwL2Fzc2V0cy9sb2dvLTIuc3ZnJzsKaW1wb3J0IEFtZXJpY2FuRXhwcmVzc0xvZ28gZnJvbSAnQHRlbmFudHMvdGlja2V0bWFzdGVyL2FwcC9hc3NldHMvYW1lcmljYW4tZXhwcmVzcy1sb2dvLnN2Zyc7CmltcG9ydCBXYXJuaW5nSWNvbiBmcm9tICdAdGVuYW50cy90aWNrZXRtYXN0ZXIvYXBwL2Fzc2V0cy9pY29ucy93YXJuaW5nLnN2Zyc7CmltcG9ydCBQYXltZW50UHJvdmlkZXIgZnJvbSAnQC90ZW5hbnRzL3RpY2tldG1hc3Rlci9hcHAvdmlld3MvY2FydC9UaGVDaGVja291dC9QYXltZW50UHJvdmlkZXIudnVlJzsKaW1wb3J0IFByb3ZpZGVyc0xvZ29zIGZyb20gJ0B0ZW5hbnRzL3RpY2tldG1hc3Rlci9hcHAvYXNzZXRzL3Byb3ZpZGVycy1sb2dvcy5zdmcnOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1BheW1lbnRGaWVsZHNldEhvdGVsQW5kVGlja2V0cycsCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgQmFzZUZvcm1JbnB1dCwKICAgICAgICBCYXNlRm9ybVNlbGVjdCwKICAgICAgICBUaWNrZXRtYXN0ZXJMb2dvLAogICAgICAgIEFtZXJpY2FuRXhwcmVzc0xvZ28sCiAgICAgICAgV2FybmluZ0ljb24sCiAgICAgICAgUHJvdmlkZXJzTG9nb3MsCiAgICAgICAgUGF5bWVudFByb3ZpZGVyCiAgICB9LAogICAgaTE4bk9wdGlvbnM6IHsKICAgICAgICBuYW1lc3BhY2VzOiAnbWFpbicsCiAgICAgICAga2V5UHJlZml4OiAndmlld3MuY2FydC50aGVDaGVja291dC5fY29tcG9uZW50cy5maWVsZHNldHMucGF5bWVudEZpZWxkc2V0JwogICAgfSwKICAgIHRlc3RJZE9wdGlvbnM6IHsKICAgICAgICBrZXlQcmVmaXg6ICdjaGVja291dC5maWVsZHNldHMucGF5bWVudEZpZWxkc2V0JwogICAgfSwKICAgIHByb3BzOiB7CiAgICAgICAgcGF5bWVudENsaWVudE1vZGVsOiB7CiAgICAgICAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUKICAgICAgICB9LAogICAgICAgIGN1c3RvbWVyTW9kZWw6IHsKICAgICAgICAgICAgdHlwZTogT2JqZWN0LAogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICB9LAogICAgICAgIHZhbGlkYXRpb246IHsKICAgICAgICAgICAgdHlwZTogT2JqZWN0LAogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgZXh0cmFjdFZhbGlkYXRpb25zTWVzc2FnZXNGbjogewogICAgICAgICAgICB0eXBlOiBGdW5jdGlvbiwKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgfSwKICAgICAgICB1c2VQYXltZW50Q2xpZW50OiB7CiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICAgICAgfQogICAgfSwKICAgIGRhdGE6IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGNvdW50cnlDb2RlOiBudWxsLAogICAgICAgICAgICBzdGF0ZUNvZGU6IG51bGwsCiAgICAgICAgICAgIHN0YXRlczogW10KICAgICAgICB9OwogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgLi4ubWFwU3RhdGUoIHsKICAgICAgICAgICAgbGFuZ3VhZ2U6IHN0YXRlID0+IHN0YXRlLmFwcFN0YXRlLmxhbmd1YWdlLAogICAgICAgICAgICBjb3VudHJpZXM6IHN0YXRlID0+IHN0YXRlLmNvdW50cmllcy5saXN0CiAgICAgICAgfSApLAogICAgICAgIHN0YXRlU2VsZWN0b3JIYXNFcnJvcigpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMudmFsaWRhdGlvbi5jdXN0b21lck1vZGVsLnN0YXRlLiRtb2RlbCA/IHRoaXMudmFsaWRhdGlvbi5jdXN0b21lck1vZGVsLnN0YXRlLiRpbnZhbGlkIDogdGhpcy52YWxpZGF0aW9uLmN1c3RvbWVyTW9kZWwuc3RhdGUuJGRpcnR5OwogICAgICAgIH0sCiAgICAgICAgY291bnRyeVNlbGVjdG9ySGFzRXJyb3IoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLnZhbGlkYXRpb24uY3VzdG9tZXJNb2RlbC5jb3VudHJ5LiRtb2RlbCA/IHRoaXMudmFsaWRhdGlvbi5jdXN0b21lck1vZGVsLmNvdW50cnkuJGludmFsaWQgOiB0aGlzLnZhbGlkYXRpb24uY3VzdG9tZXJNb2RlbC5jb3VudHJ5LiRkaXJ0eTsKICAgICAgICB9LAogICAgICAgIGlzUGhvbmVSZXF1aXJlZCgpIHsKICAgICAgICAgICAgcmV0dXJuICEhdGhpcy5jdXN0b21lck1vZGVsLmhhc093blByb3BlcnR5KCAncGhvbmUnICk7CiAgICAgICAgfQogICAgfSwKICAgIHdhdGNoOiB7CiAgICAgICAgJ2N1c3RvbWVyTW9kZWwuY291bnRyeSc6IHsKICAgICAgICAgICAgaGFuZGxlcjogZnVuY3Rpb24oIHZhbHVlICkgewogICAgICAgICAgICAgICAgaWYgKCB2YWx1ZSApIHRoaXMubG9hZFN0YXRlcygpOwoKICAgICAgICAgICAgfSwKICAgICAgICAgICAgaW1tZWRpYXRlOiB0cnVlCiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBzdGF0ZUZpbHRlcnMoKSB7CiAgICAgICAgICAgIGlmICggdGhpcy5jdXN0b21lck1vZGVsLmNvdW50cnkgKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgIGNvZGU6IHRoaXMuY3VzdG9tZXJNb2RlbC5jb3VudHJ5CiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBudWxsOwogICAgICAgIH0sCiAgICAgICAgYXN5bmMgbG9hZFN0YXRlcygpIHsKICAgICAgICAgICAgY29uc3QgeyBzdWNjZXNzLCBkYXRhIH0gPSBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCggYHN0YXRlcy9nZXRSYXdgLCB7IGZpbHRlcjogdGhpcy5zdGF0ZUZpbHRlcnMoKSB9ICApOwogICAgICAgICAgICBpZiAoIHN1Y2Nlc3MgKSB7CiAgICAgICAgICAgICAgICB0aGlzLnN0YXRlcyA9IFsgLi4uZGF0YS5saXN0IF07CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLnN0YXRlcyA9IFsgXTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgb25VcGRhdGVQYXltZW50RmllbGRzVmFsaWRpdHlEbyggdmFsaWRQYXltZW50RmllbGRzICkgewogICAgICAgICAgICB0aGlzLiRlbWl0KCAndXBkYXRlUGF5bWVudEZpZWxkc1ZhbGlkaXR5JywgdmFsaWRQYXltZW50RmllbGRzICk7CiAgICAgICAgfSwKICAgICAgICBvbkluc3RhbmNlUGF5bWVudENsaWVudENvbXB1dGVkRG8oIGluc3RhbmNlUGF5bWVudENsaWVudCApIHsKICAgICAgICAgICAgdGhpcy4kZW1pdCggJ2luc3RhbmNlUGF5bWVudENsaWVudENvbXB1dGVkJywgaW5zdGFuY2VQYXltZW50Q2xpZW50ICk7CiAgICAgICAgfQogICAgfSwKICAgIGFzeW5jIG1vdW50ZWQoICkgewogICAgICAgIGF3YWl0IHRoaXMubG9hZFN0YXRlcygpOwogICAgfQp9Owo="},{"version":3,"sources":["PaymentFieldsetTicketsOnly.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"PaymentFieldsetTicketsOnly.vue","sourceRoot":"src/tenants/ticketmaster/app/views/cart/TheCheckout/Fieldsets","sourcesContent":["<template>\n    <div class=\"gst-payment-fieldset-tickets-only\">\n        <div class=\"header\">\n            <span class=\"title\">{{ $t('title') }}</span>\n            <div class=\"officials\">\n                <span>{{ $t('labels.officials') }}</span>\n                <TicketmasterLogo class=\"ticketmaster-logo\" />\n                <AmericanExpressLogo class=\"american-express-logo\" />\n            </div>\n        </div>\n        <ProvidersLogos class=\"providers-logos\" />\n        <div class=\"row\">\n            <PaymentProvider\n                v-if=\"usePaymentClient\"\n                class=\"col col-12 py-0\"\n                :payment-client-model=\"paymentClientModel\"\n                @updatePaymentFieldsValidity=\"onUpdatePaymentFieldsValidityDo\"\n                @instancePaymentClientComputed=\"onInstancePaymentClientComputedDo\" />\n            <BaseFormSelect\n                v-model=\"customerModel.country\"\n                :has-error=\"countrySelectorHasError\"\n                :options=\"countries\"\n                value-prop=\"code\"\n                :label=\"$t('labels.country')\"\n                :error-messages=\"extractValidationsMessagesFn( 'customerModel.country' )\"\n                class=\"col col-12 py-0 mt-1 mb-3\"\n                :data-test-id=\"$testId('select.country')\"\n                @focus=\"validation.customerModel.country.$touch()\"\n                @input=\"validation.customerModel.country.$touch()\"\n                @blur=\"validation.customerModel.country.$touch()\" />\n            <BaseFormInput\n                v-model=\"customerModel.address\"\n                :label=\"$t('labels.address')\"\n                :error-messages=\"extractValidationsMessagesFn( 'customerModel.address' )\"\n                :show-check-icon=\"validation.customerModel.address.$dirty\"\n                maxlength=\"100\"\n                class=\"col col-12 py-0 mt-1\"\n                :data-test-id=\"$testId('input.address')\"\n                @blur=\"validation.customerModel.address.$touch()\" />\n            <BaseFormInput\n                v-model=\"customerModel.city\"\n                :label=\"$t('labels.city')\"\n                :error-messages=\"extractValidationsMessagesFn( 'customerModel.city' )\"\n                :show-check-icon=\"validation.customerModel.city.$dirty\"\n                maxlength=\"100\"\n                class=\"col col-12 col-md-6 py-0 mt-1\"\n                :data-test-id=\"$testId('input.city')\"\n                @blur=\"validation.customerModel.city.$touch()\" />\n            <BaseFormSelect\n                v-model=\"customerModel.state\"\n                :has-error=\"stateSelectorHasError\"\n                :options=\"states\"\n                value-prop=\"code\"\n                :label=\"$t('labels.state')\"\n                class=\"col col-12 col-md-6 py-0 mt-1\"\n                :error-messages=\"extractValidationsMessagesFn( 'customerModel.state' )\"\n                :data-test-id=\"$testId('select.state')\"\n                :show-check-icon=\"validation.customerModel.state.$dirty\"\n                @blur=\"validation.customerModel.state.$touch()\" />\n            <BaseFormInput\n                v-model=\"customerModel.zip\"\n                :label=\"$t('labels.zip')\"\n                :error-messages=\"extractValidationsMessagesFn( 'customerModel.zip' )\"\n                :show-check-icon=\"validation.customerModel.zip.$dirty\"\n                :class=\"{\n                    'col-md-6': isPhoneRequired\n                }\"\n                class=\"col col-12 py-0 mt-1\"\n                maxlength=\"10\"\n                :data-test-id=\"$testId('input.zip')\"\n                @blur=\"validation.customerModel.zip.$touch()\" />\n            <BaseFormInput\n                v-if=\"isPhoneRequired\"\n                v-model=\"customerModel.phone\"\n                :label=\"$t('labels.phone')\"\n                :error-messages=\"extractValidationsMessagesFn( 'customerModel.phone' )\"\n                maxlength=\"20\"\n                class=\"col col-12 col-md-6 py-0 mt-1\"\n                :data-test-id=\"$testId('input.phone')\"\n                @blur=\"validation.customerModel.phone.$touch()\" />\n            <BaseFormInput\n                v-model=\"customerModel.email\"\n                :label=\"$t('labels.email')\"\n                :show-check-icon=\"validation.customerModel.email.$dirty\"\n                :error-messages=\"extractValidationsMessagesFn( 'customerModel.email' )\"\n                maxlength=\"255\"\n                class=\"col col-12 py-0 mt-1\"\n                :data-test-id=\"$testId('input.email')\"\n                @blur=\"validation.customerModel.email.$touch()\" />\n            <div class=\"warning-info-message col col-12 mt-1\">\n                <WarningIcon />\n                <span>{{ $t('warnings.email') }}</span>\n            </div>\n            <BaseFormInput\n                v-model=\"customerModel.firstName\"\n                :label=\"$t('labels.firstName')\"\n                :error-messages=\"extractValidationsMessagesFn( 'customerModel.firstName' )\"\n                :show-check-icon=\"validation.customerModel.firstName.$dirty\"\n                maxlength=\"30\"\n                class=\"col col-12 col-md-6 py-0 mt-1\"\n                :data-test-id=\"$testId('input.firstName')\"\n                @blur=\"validation.customerModel.firstName.$touch()\" />\n            <BaseFormInput\n                v-model=\"customerModel.lastName\"\n                :label=\"$t('labels.lastName')\"\n                :error-messages=\"extractValidationsMessagesFn( 'customerModel.lastName' )\"\n                :show-check-icon=\"validation.customerModel.lastName.$dirty\"\n                maxlength=\"30\"\n                class=\"col col-12 col-md-6 py-0 mt-1\"\n                :data-test-id=\"$testId('input.lastName')\"\n                @blur=\"validation.customerModel.lastName.$touch()\" />\n        </div>\n    </div>\n</template>\n\n<script>\n    import { mapState } from 'vuex';\n    import BaseFormInput from '@tenants/ticketmaster/app/components/inputs/BaseFormInput.vue';\n    import BaseFormSelect from '@tenants/ticketmaster/app/components/inputs/BaseFormSelect.vue';\n    import TicketmasterLogo from '@tenants/ticketmaster/app/assets/logo-2.svg';\n    import AmericanExpressLogo from '@tenants/ticketmaster/app/assets/american-express-logo.svg';\n    import WarningIcon from '@tenants/ticketmaster/app/assets/icons/warning.svg';\n    import PaymentProvider from '@/tenants/ticketmaster/app/views/cart/TheCheckout/PaymentProvider.vue';\n    import ProvidersLogos from '@tenants/ticketmaster/app/assets/providers-logos.svg';\n\n    export default {\n        name: 'PaymentFieldsetHotelAndTickets',\n        components: {\n            BaseFormInput,\n            BaseFormSelect,\n            TicketmasterLogo,\n            AmericanExpressLogo,\n            WarningIcon,\n            ProvidersLogos,\n            PaymentProvider\n        },\n        i18nOptions: {\n            namespaces: 'main',\n            keyPrefix: 'views.cart.theCheckout._components.fieldsets.paymentFieldset'\n        },\n        testIdOptions: {\n            keyPrefix: 'checkout.fieldsets.paymentFieldset'\n        },\n        props: {\n            paymentClientModel: {\n                type: Object,\n                required: true\n            },\n            customerModel: {\n                type: Object,\n                required: true,\n            },\n            validation: {\n                type: Object,\n                required: true\n            },\n            extractValidationsMessagesFn: {\n                type: Function,\n                required: true,\n            },\n            usePaymentClient: {\n                type: Boolean,\n                default: false\n            }\n        },\n        data: function() {\n            return {\n                countryCode: null,\n                stateCode: null,\n                states: []\n            };\n        },\n        computed: {\n            ...mapState( {\n                language: state => state.appState.language,\n                countries: state => state.countries.list\n            } ),\n            stateSelectorHasError() {\n                return this.validation.customerModel.state.$model ? this.validation.customerModel.state.$invalid : this.validation.customerModel.state.$dirty;\n            },\n            countrySelectorHasError() {\n                return this.validation.customerModel.country.$model ? this.validation.customerModel.country.$invalid : this.validation.customerModel.country.$dirty;\n            },\n            isPhoneRequired() {\n                return !!this.customerModel.hasOwnProperty( 'phone' );\n            }\n        },\n        watch: {\n            'customerModel.country': {\n                handler: function( value ) {\n                    if ( value ) this.loadStates();\n\n                },\n                immediate: true\n            }\n        },\n        methods: {\n            stateFilters() {\n                if ( this.customerModel.country ) {\n                    return {\n                        code: this.customerModel.country\n                    };\n                }\n                return null;\n            },\n            async loadStates() {\n                const { success, data } = await this.$store.dispatch( `states/getRaw`, { filter: this.stateFilters() }  );\n                if ( success ) {\n                    this.states = [ ...data.list ];\n                } else {\n                    this.states = [ ];\n                }\n            },\n            onUpdatePaymentFieldsValidityDo( validPaymentFields ) {\n                this.$emit( 'updatePaymentFieldsValidity', validPaymentFields );\n            },\n            onInstancePaymentClientComputedDo( instancePaymentClient ) {\n                this.$emit( 'instancePaymentClientComputed', instancePaymentClient );\n            }\n        },\n        async mounted( ) {\n            await this.loadStates();\n        }\n    };\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"@scssVariables\";\n    @import \"@scssMixins\";\n\n    #ticketsOnlyPaymentClient {\n        margin-top: theme-spacing( 'n3' );\n        margin-left: theme-spacing( 'n1' );\n    }\n\n    .gst-payment-fieldset-tickets-only {\n        @include border-radius ( 'xs' );\n\n        padding: theme-spacing( 4 ) theme-spacing( 6 );\n        border: 1px solid theme-color( 'septenary' );\n\n        .providers-logos {\n            margin: theme-spacing( 3 ) theme-spacing( 0 );\n\n            @include mobile-only {\n                height: 18px !important;\n                width: 151px !important;\n                margin-top: 0 !important;\n            }\n        }\n\n        .header {\n            display: flex;\n            padding: 0 theme-spacing( 1 );\n            margin-bottom: theme-spacing( 4 );\n            font-family: \"Averta Std\", sans-serif !important;\n            align-items: center;\n            justify-content: space-between;\n\n            .title {\n                line-height: line-height( 'xxxl' );\n                color: theme-color( 'quaternary' );\n                font-size: font-size( 'l' );\n                font-weight: font-weight( 'large' );\n                font-family: \"Averta Std\", sans-serif !important;\n            }\n\n            .officials {\n                span {\n                    line-height: line-height( 'xxs' );\n                    color: theme-color( 'tertiary' );\n                    font-size: font-size( 'xxxxs' );\n                    font-weight: font-weight( 'regular' );\n                    text-transform: uppercase;\n                }\n\n                .ticketmaster-logo {\n                    position: relative;\n                    top: 2px;\n                    margin: 0 theme-spacing( 2 );\n                }\n\n                .american-express-logo {\n                    position: relative;\n                    top: 6px;\n                }\n            }\n        }\n\n        .warning-info-message {\n            display: flex;\n            margin-bottom: theme-spacing( 3 );\n            align-items: center;\n\n            span {\n                line-height: line-height( 's' );\n                color: theme-color( 'quaternary' );\n                font-size: font-size( 'xxs' );\n                font-weight: normal;\n            }\n\n            svg {\n                position: relative;\n                bottom: 2px;\n                margin-right: theme-spacing( 1 );\n            }\n        }\n\n        @include mobile-only {\n            margin-top: theme-spacing( 4 );\n\n            .header {\n                display: flex;\n                padding: 0 theme-spacing( 1 ) !important;\n                margin-bottom: theme-spacing( 6 ) !important;\n                align-items: center;\n                justify-content: space-between;\n\n                .title {\n                    line-height: line-height( 'xxxl' ) !important;\n                    font-size: font-size( 'l' ) !important;\n                }\n            }\n\n            .officials {\n                display: flex;\n                align-items: center;\n\n                span {\n                    position: relative !important;\n                    top: 1px !important;\n                    width: 100% !important;\n                    line-height: line-height( 'xxxs' ) !important;\n                    font-size: font-size( 'xxxxxs' ) !important;\n                    text-align: right !important;\n                }\n\n                .american-express-logo {\n                    top: 3px !important;\n                }\n            }\n\n            .warning-info-message {\n                span {\n                    position: relative !important;\n                    right: theme-spacing( 2 ) !important;\n                }\n\n                svg {\n                    margin-right: 0 !important;\n                    min-width: 36px;\n                }\n            }\n        }\n    }\n</style>\n"]}]}