{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/modals/LoginModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/modals/LoginModal.vue","mtime":1648506475594},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHJlcXVpcmVkLCBlbWFpbCB9IGZyb20gJ3Z1ZWxpZGF0ZS9saWIvdmFsaWRhdG9ycyc7CmltcG9ydCB7IG1hcEFjdGlvbnMsIG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IEhlYWRlclZhcmlhbnQxIGZyb20gJ0Bjb3JlL3NoYXJlZC9jb21wb25lbnRzL21vZGFscy9sYXlvdXQvSGVhZGVyVmFyaWFudDEudnVlJzsKaW1wb3J0IENsb3NlTW9kYWxPblJvdXRlQ2hhbmdlTWl4aW4gZnJvbSAnQGNvcmUvbWl4aW5zL21vZGFscy9DbG9zZU1vZGFsT25Sb3V0ZUNoYW5nZSc7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnTG9naW5Nb2RhbCcsCiAgICB0ZXN0SWRPcHRpb25zOiB7CiAgICAgICAga2V5UHJlZml4OiAnc2hhcmVkLmNvbXBvbmVudHMubW9kYWxzLmxvZ2luTW9kYWwnCiAgICB9LAogICAgaTE4bk9wdGlvbnM6IHsKICAgICAgICBuYW1lc3BhY2VzOiAnc2hhcmVkJywKICAgICAgICBrZXlQcmVmaXg6ICdjb21wb25lbnRzLm1vZGFscy5sb2dpbicsCiAgICB9LAogICAgY29tcG9uZW50czogewogICAgICAgIEhlYWRlclZhcmlhbnQxCiAgICB9LAogICAgbWl4aW5zOiBbIENsb3NlTW9kYWxPblJvdXRlQ2hhbmdlTWl4aW4gXSwKICAgIGRhdGE6IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGVtYWlsOiAnJywKICAgICAgICAgICAgc2VydmVyRXJyb3I6ICcnCiAgICAgICAgfTsKICAgIH0sCiAgICB2YWxpZGF0aW9ucygpIHsKICAgICAgICBjb25zdCByZXQgPSB7CiAgICAgICAgICAgIGVtYWlsOiB7CiAgICAgICAgICAgICAgICByZXF1aXJlZCwKICAgICAgICAgICAgICAgIGVtYWlsLAogICAgICAgICAgICAgICAgc2VydmVyRmFpbGVkIDogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICF0aGlzLnNlcnZlckVycm9yLmxlbmd0aDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICB9OwoKICAgICAgICByZXR1cm4gcmV0OwogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgLi4ubWFwR2V0dGVycyggewogICAgICAgICAgICBsb2FkaW5nUHJvZmlsZTogJ3VzZXIvcHJvZmlsZS9sb2FkaW5nJywKICAgICAgICAgICAgZ2V0UHJvZmlsZUhhc0Vycm9yOiAndXNlci9wcm9maWxlL2hhc0Vycm9yJwogICAgICAgIH0gKQogICAgfSwKICAgIHdhdGNoOiB7CiAgICAgICAgJ2VtYWlsJzogZnVuY3Rpb24gKCApIHsKICAgICAgICAgICAgdGhpcy5zZXJ2ZXJFcnJvciA9ICcnOwogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgLi4ubWFwQWN0aW9ucyggewogICAgICAgICAgICB1c2VyTG9naW4gICAgICAgICAgICAgICAgICAgOiAndXNlci9sb2dpbicsCiAgICAgICAgICAgIHNob3dMb2FkaW5nT3ZlcmxheSAgICAgICAgICA6ICdhcHBTdGF0ZS9zZXRMb2FkaW5nJywKICAgICAgICB9ICksCiAgICAgICAgZ29Ub1NpZ25VcFBhZ2UoKSB7CiAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCB7IG5hbWU6ICdzaWduVXAnIH0gKTsKICAgICAgICB9LAogICAgICAgIHJlcXVpcmVkRXJyb3IoIHsgZmllbGQgfSApIHsKICAgICAgICAgICAgbGV0IGVycm9ycyA9IFtdOwogICAgICAgICAgICBpZiAoICF0aGlzLiR2W2Ake2ZpZWxkfWBdLiRkaXJ0eSApIHJldHVybiBlcnJvcnM7CiAgICAgICAgICAgICF0aGlzLiR2W2Ake2ZpZWxkfWBdLnJlcXVpcmVkICAgJiYgZXJyb3JzLnB1c2ggKCB0aGlzLiR0KCAnX2NvbW1vbjpmb3JtRXJyb3JzLnJlcXVpcmVkRmllbGQnLCB7IGZpZWxkOiB0aGlzLiR0KCBgX2NvbW1vbjpmb3JtLmxhYmVscy4ke2ZpZWxkfWAgKSwgaW50ZXJwb2xhdGlvbiA6IHsgZXNjYXBlVmFsdWU6IGZhbHNlIH0gfSApICk7CiAgICAgICAgICAgIHJldHVybiBlcnJvcnM7CiAgICAgICAgfSwKICAgICAgICBlbWFpbEVycm9yKCB7IGZpZWxkIH0gKSB7CiAgICAgICAgICAgIGxldCBlcnJvcnMgPSBbXTsKICAgICAgICAgICAgaWYgKCAhdGhpcy4kdltgJHtmaWVsZH1gXS4kZGlydHkgKSByZXR1cm4gZXJyb3JzOwogICAgICAgICAgICAhdGhpcy4kdltgJHtmaWVsZH1gXS5lbWFpbCAgJiYgZXJyb3JzLnB1c2goIHRoaXMuJHQoICdfY29tbW9uOmZvcm1FcnJvcnMuZW1haWwnLCB7IGZpZWxkOiB0aGlzLiR0KCBgX2NvbW1vbjpmb3JtLmxhYmVscy4ke2ZpZWxkfWAgKSwgaW50ZXJwb2xhdGlvbjogeyBlc2NhcGVWYWx1ZTogZmFsc2UgfSB9ICkgKTsKICAgICAgICAgICAgcmV0dXJuIGVycm9yczsKICAgICAgICB9LAogICAgICAgIGVtYWlsU2VydmVyRXJyb3IoICkgewogICAgICAgICAgICBsZXQgZXJyb3JzID0gW107CiAgICAgICAgICAgIGlmICggdGhpcy5zZXJ2ZXJFcnJvci5sZW5ndGggKSB7CiAgICAgICAgICAgICAgICBlcnJvcnMucHVzaCggdGhpcy5zZXJ2ZXJFcnJvciApOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBlcnJvcnM7CiAgICAgICAgfSwKICAgICAgICB2YWxpZGF0ZSggKSB7CiAgICAgICAgICAgIHRoaXMuJHYuJHRvdWNoKCk7CiAgICAgICAgICAgIHJldHVybiAhdGhpcy4kdi4kaW52YWxpZDsKICAgICAgICB9LAogICAgICAgIGFzeW5jIG9uTG9naW5TdWJtaXQoIGV2ZW50ICkgewogICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oICk7CiAgICAgICAgICAgIGlmICggdGhpcy52YWxpZGF0ZSgpICkgewogICAgICAgICAgICAgICAgdGhpcy5zaG93TG9hZGluZ092ZXJsYXkgKCB0cnVlICk7CiAgICAgICAgICAgICAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLnVzZXJMb2dpbiggdGhpcy5lbWFpbCApOwoKICAgICAgICAgICAgICAgIGlmICggcmVzcG9uc2UgKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXJ2ZXJFcnJvcj0nJzsKICAgICAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIuZ28oIHRoaXMuJHJvdXRlci5jdXJyZW50Um91dGUgKTsKICAgICAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCAnY2xvc2UnICk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd0xvYWRpbmdPdmVybGF5ICggZmFsc2UgKTsKICAgICAgICAgICAgICAgICAgICB0aGlzLiR2LiRyZXNldCgpOwogICAgICAgICAgICAgICAgICAgIHRoaXMuc2VydmVyRXJyb3IgPSB0aGlzLiR0KCAnbWVzc2FnZXMubm9FbWFpbCcgKTsKICAgICAgICAgICAgICAgICAgICB0aGlzLiR2LiR0b3VjaCgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgIH0KfTsK"},{"version":3,"sources":["LoginModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LoginModal.vue","sourceRoot":"src/core/shared/components/modals","sourcesContent":["<template>\n    <v-card class=\"gst-login-modal d-flex flex-column\" color=\"text\">\n        <!-- TODO:  This is a test modal to test out login\n            This modal will be updated in another task\n         -->\n        <HeaderVariant1 class=\"mb-3\" title=\"Login\" @close=\"$emit('close')\" />\n        <div class=\"d-flex align-center ml-6 mb-2\">\n            <div>\n                If you don't have an account please sign up!\n            </div>\n\n            <button class=\"sign-up-button ml-2\" @click=\"goToSignUpPage\">\n                Sign up\n            </button>\n        </div>\n        <v-card-text class=\"flex-grow-0 content-max-width px-4 pb-2\" :style=\"{ color:'inherit'}\">\n            <form>\n                <v-text-field\n                    v-model=\"email\"\n                    :data-test-id=\"$testId('input.email')\"\n                    color=\"black\"\n                    class=\"gst-input--secondary gst-input\"\n                    :label=\"$t('_common:form.labels.email')\"\n                    :error-messages=\"[\n                        ...requiredError({ field: 'email'}),\n                        ...emailError({ field: 'email'}),\n                        ...emailServerError()\n                    ]\"\n                    required\n                    outlined />\n                <v-btn\n                    center\n                    text\n                    outlined\n                    :data-test-id=\"$testId('button.submit')\"\n                    class=\"text-capitalize gst-login-btn float-right\"\n                    color=\"#ADACAC\"\n                    type=\"submit\"\n                    v-bind=\"$attrs\"\n                    @click.native=\"onLoginSubmit\">\n                    {{ $t('_common:buttons.login') }}\n                </v-btn>\n            </form>\n        </v-card-text>\n    </v-card>\n</template>\n<script>\n    import { required, email } from 'vuelidate/lib/validators';\n    import { mapActions, mapGetters } from 'vuex';\n    import HeaderVariant1 from '@core/shared/components/modals/layout/HeaderVariant1.vue';\n    import CloseModalOnRouteChangeMixin from '@core/mixins/modals/CloseModalOnRouteChange';\n\n    export default {\n        name: 'LoginModal',\n        testIdOptions: {\n            keyPrefix: 'shared.components.modals.loginModal'\n        },\n        i18nOptions: {\n            namespaces: 'shared',\n            keyPrefix: 'components.modals.login',\n        },\n        components: {\n            HeaderVariant1\n        },\n        mixins: [ CloseModalOnRouteChangeMixin ],\n        data: function() {\n            return {\n                email: '',\n                serverError: ''\n            };\n        },\n        validations() {\n            const ret = {\n                email: {\n                    required,\n                    email,\n                    serverFailed : function() {\n                        return !this.serverError.length;\n                    }\n                },\n            };\n\n            return ret;\n        },\n        computed: {\n            ...mapGetters( {\n                loadingProfile: 'user/profile/loading',\n                getProfileHasError: 'user/profile/hasError'\n            } )\n        },\n        watch: {\n            'email': function ( ) {\n                this.serverError = '';\n            }\n        },\n        methods: {\n            ...mapActions( {\n                userLogin                   : 'user/login',\n                showLoadingOverlay          : 'appState/setLoading',\n            } ),\n            goToSignUpPage() {\n                this.$router.push( { name: 'signUp' } );\n            },\n            requiredError( { field } ) {\n                let errors = [];\n                if ( !this.$v[`${field}`].$dirty ) return errors;\n                !this.$v[`${field}`].required   && errors.push ( this.$t( '_common:formErrors.requiredField', { field: this.$t( `_common:form.labels.${field}` ), interpolation : { escapeValue: false } } ) );\n                return errors;\n            },\n            emailError( { field } ) {\n                let errors = [];\n                if ( !this.$v[`${field}`].$dirty ) return errors;\n                !this.$v[`${field}`].email  && errors.push( this.$t( '_common:formErrors.email', { field: this.$t( `_common:form.labels.${field}` ), interpolation: { escapeValue: false } } ) );\n                return errors;\n            },\n            emailServerError( ) {\n                let errors = [];\n                if ( this.serverError.length ) {\n                    errors.push( this.serverError );\n                }\n                return errors;\n            },\n            validate( ) {\n                this.$v.$touch();\n                return !this.$v.$invalid;\n            },\n            async onLoginSubmit( event ) {\n                event.preventDefault();\n                event.stopPropagation( );\n                if ( this.validate() ) {\n                    this.showLoadingOverlay ( true );\n                    let response = await this.userLogin( this.email );\n\n                    if ( response ) {\n                        this.serverError='';\n                        this.$router.go( this.$router.currentRoute );\n                        this.$emit( 'close' );\n                    } else {\n                        this.showLoadingOverlay ( false );\n                        this.$v.$reset();\n                        this.serverError = this.$t( 'messages.noEmail' );\n                        this.$v.$touch();\n                    }\n                }\n            },\n        }\n    };\n</script>\n<style lang=\"scss\" scoped>\n    @import \"@scssVariables\";\n\n    .gst-login-modal__toolbar {\n        border-bottom: 1px solid theme-color( 'quinary' );\n    }\n\n    .gst-login-modal__title {\n        font-weight: font-weight( 'medium' );\n    }\n\n    .gst-login-btn.v-btn.v-btn--outlined {\n        font-weight: font-weight( 'medium' );\n        border-radius: border-radius( 'm' ) !important;\n        min-height: 44px;\n\n        &.v-btn--disabled {\n            color: theme-color( 'primary' ) !important;\n            border-color: theme-color( 'primary' );\n            opacity: 0.4;\n        }\n    }\n\n    .gst-login-btn.v-btn.v-btn--outlined:not([disabled]) {\n        border-color: #ADACAC;\n    }\n\n    .sign-up-button {\n        height: 30px;\n        width: 70px;\n        background-color: #ADACAC;\n        border-radius: border-radius( 'm' ) !important;\n    }\n</style>\n\n<style lang=\"scss\">\n    @import \"@scssVariables\";\n\n    .gst-login-modal__icon-close .gst-svg-icon {\n        fill: theme-color( 'tertiary' );\n    }\n\n    .gst-login-modal__header .v-toolbar__content {\n        justify-content: end;\n    }\n\n    .gst-login-modal {\n        .gst-login-modal__close.v-btn {\n            min-width: auto;\n        }\n    }\n</style>\n"]}]}