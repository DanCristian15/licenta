{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/components/BaseImage.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/components/BaseImage.vue","mtime":1645805365920},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/css-loader/dist/cjs.js","mtime":1637061260154},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1637061260528},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/postcss-loader/src/index.js","mtime":1637061260465},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/sass-loader/dist/cjs.js","mtime":1637061279772},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICJAc2Nzc1ZhcmlhYmxlcyI7CkBpbXBvcnQgIkBzY3NzTWl4aW5zIjsKCi5mYWxsYmFjay1pbWFnZSB7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICB3aWR0aDogMTAwJTsKICAgIGJhY2tncm91bmQ6IHVybCggJ35AdGVuYW50cy90aWNrZXRtYXN0ZXIvYXBwL2Fzc2V0cy9pY29ucy9pbWFnZS5wbmcnICkgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXIsIHJnYmEoIHRoZW1lLWNvbG9yLWhleCggJ3F1YXRlcm5hcnknICksIDAuMiApOwp9Cgo="},{"version":3,"sources":["BaseImage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"BaseImage.vue","sourceRoot":"src/tenants/ticketmaster/app/components","sourcesContent":["<template>\n    <v-img v-if=\"!errorImage\"\n        ref=\"image\"\n        :src=\"imageSrc\"\n        class=\"white--text\"\n        :gradient=\"gradient\"\n        v-bind=\"$attrs\"\n        @load=\"onLoad\"\n        @error=\"onError\">\n        <template v-if=\"hasPlaceholder\" v-slot:placeholder>\n            <v-row\n                class=\"fill-height ma-0\"\n                align=\"center\"\n                justify=\"center\">\n                <DataLoading />\n            </v-row>\n        </template>\n        <slot name=\"content\"></slot>\n    </v-img>\n    <div v-else-if=\"errorImage && $slots.fallback\">\n        <slot name=\"fallback\"></slot>\n    </div>\n    <v-img v-else class=\"fallback-image\" v-bind=\"$attrs\" />\n</template>\n<script>\n    import {\n        hasIncorrectContentSize as imageUtilsHasIncorrectContentSize\n    } from '@core/utils/imageUtils';\n    import DataLoading from '@core/shared/components/loading/DataLoading.vue';\n\n    export default {\n        name: 'BaseImage',\n        inheritsAttribute: true,\n        components: {\n            DataLoading\n        },\n        props: {\n            src: {\n                type: String,\n                default: null\n            },\n            fallbackSrc: {\n                type: String,\n                default: null\n            },\n            gradient: {\n                type: String,\n                default: null\n            },\n            hasPlaceholder: {\n                type: Boolean,\n                default: false\n            },\n            text: {\n                type: String,\n                default: null\n            },\n            validateSrcContentSize: {\n                type: Boolean,\n                default: false\n            }\n        },\n        data: () => ( {\n            errorImage: false\n        } ),\n        computed: {\n            imageSrc( ) {\n                const { src, fallbackSrc, errorImage } = this;\n\n                if ( !src && !fallbackSrc ) {\n                    this.onError( );\n                    return;\n                }\n                return ( errorImage || !src ) ? fallbackSrc : src;\n            },\n            hasSlotFallback( ) {\n                return !!this.$slots.fallback;\n            }\n        },\n        watch: {\n            'src': function ( newValue ) {\n                this.errorImage = newValue && this.fallbackSrc;\n            }\n        },\n        methods: {\n            onError() {\n                this.errorImage = true;\n                this.$emit( 'error' );\n            },\n            onLoad() {\n                if ( this.validateSrcContentSize ) {\n                    if ( this.src === this.imageSrc ) {\n                        this.errorImage = imageUtilsHasIncorrectContentSize( this.$refs.image.image );\n                    }\n                } else {\n                    this.errorImage = false;\n                }\n                this.$emit( 'load' );\n            }\n        }\n    };\n</script>\n\n<style lang=\"scss\">\n@import \"@scssVariables\";\n@import \"@scssMixins\";\n\n.fallback-image {\n    height: 100%;\n    width: 100%;\n    background: url( '~@tenants/ticketmaster/app/assets/icons/image.png' ) no-repeat center center, rgba( theme-color-hex( 'quaternary' ), 0.2 );\n}\n\n</style>\n"]}]}