{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/core/views/event/TheEvent/EventAttractionList.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/views/event/TheEvent/EventAttractionList.vue","mtime":1645805364022},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/css-loader/dist/cjs.js","mtime":1637061260154},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1637061260528},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/postcss-loader/src/index.js","mtime":1637061260465},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/sass-loader/dist/cjs.js","mtime":1637061279772},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiQHNjc3NWYXJpYWJsZXMiOwpAaW1wb3J0ICJAc2Nzc01peGlucyI7CgouZ3N0LWV2ZW50IHsKICAgIC5nc3QtZXZlbnQtYXRyYWN0aW9uLWxpc3RfX2hlYWRlciB7CiAgICAgICAgZm9udC1zaXplOiBmb250LXNpemUoICdzJyApOwogICAgICAgIGZvbnQtd2VpZ2h0OiBmb250LXdlaWdodCggJ21lZGl1bScgKTsKICAgICAgICBsZXR0ZXItc3BhY2luZzogLTAuNDFweDsKICAgIH0KCiAgICAuZ3N0LWV2ZW50LWF0cmFjdGlvbi1saXN0X19saXN0LWl0ZW0gewogICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB0aGVtZS1jb2xvciggJ3F1aW5hcnknICk7CgogICAgICAgIGEgPiBkaXYgewogICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogOHB4OwogICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDhweDsKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["EventAttractionList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"EventAttractionList.vue","sourceRoot":"src/core/views/event/TheEvent","sourcesContent":["<template>\n    <InfiniteCardList\n        :data=\"itemsView\"\n        :config=\"eventAtractionCardConfig\"\n        :loading=\"loading\"\n        :all-data-loaded=\"items.length <= itemsView.length\"\n        :has-load-button=\"true\"\n        :prefill=\"true\"\n        item-classes=\"gst-event-atraction-list__list-item px-0 ml-n2 mr-2\"\n        class=\"u-height-100 u-width-100 pl-4\"\n        @load-more=\"loadPage\">\n        <template slot=\"loading\">\n            <DataLoading v-if=\"loading\" class=\"mt-5 mb-5 pt-5 pb-5\" />\n        </template>\n        <template slot=\"inner-scroll-header\">\n            <EventNotificationContainer :event=\"event\" class=\"mt-4 mr-3\" />\n            <h5 v-if=\"items.length\" class=\"gst-event-atraction-list__header mt-4\">\n                {{ $t('title') }}\n            </h5>\n        </template>\n    </InfiniteCardList>\n</template>\n\n<script>\n    import { mapActions } from 'vuex';\n    import AttractionCardVariant8 from '@shared/components/attraction/AttractionCardVariant8';\n    import InfiniteCardList from '@core/shared/components/lists/InfiniteCardList';\n    import DataLoading from '@core/shared/components/loading/DataLoading';\n    import EventNotificationContainer from './components/EventNotificationContainer';\n\n    export default {\n        name: 'EventAttractionList',\n        components: {\n            DataLoading,\n            InfiniteCardList,\n            // eslint-disable-next-line vue/no-unused-components\n            AttractionCardVariant8,\n            EventNotificationContainer\n        },\n        props: {\n            event: {\n                type: Object,\n                required: true\n            }\n        },\n        i18nOptions: {\n            namespaces: 'main',\n            keyPrefix: 'views.event.theEvent._components.eventAttractionList'\n        },\n        data( ) {\n            return {\n                items: [ ],\n                itemsView: [ ],\n                loading: true,\n            };\n        },\n        computed: {\n            eventAtractionCardConfig( ) {\n                return { \n                    card: AttractionCardVariant8,\n                    cardClasses: 'u-width-100 u-background-transparent pt-2 pb-1',\n                    propsToBind: ( item ) => {\n                        return {\n                            item: item, \n                            withTo: true\n                        };\n                    }\n                };\n            }\n        },\n        methods: {\n            ...mapActions( 'attractions', {\n                searchByEvent: 'searchByEvent'\n            } ),\n            async load( ) {\n                this.loading = true;\n                const response = await this.searchByEvent( {\n                    eventId: this.event.id, \n                } );\n                if ( response.success ) {\n                    this.items = [ ...response.data.list ];\n                    this.loadPage( );\n                }\n                this.loading = false;\n\n            }, \n            loadPage( ) {\n                const itemsToAppend = [ ...this.items ].splice( this.itemsView.length, 8 );\n\n                this.itemsView = [\n                    ...this.itemsView,\n                    ...itemsToAppend\n                ];\n            }\n        },\n        mounted( ) {\n            this.load( );\n        }\n    };\n</script>\n\n<style lang=\"scss\">\n    @import \"@scssVariables\";\n    @import \"@scssMixins\";\n\n    .gst-event {\n        .gst-event-atraction-list__header {\n            font-size: font-size( 's' );\n            font-weight: font-weight( 'medium' );\n            letter-spacing: -0.41px;\n        }\n\n        .gst-event-atraction-list__list-item {\n            border-bottom: 1px solid theme-color( 'quinary' );\n\n            a > div {\n                padding-bottom: 8px;\n                padding-left: 8px;\n            }\n        }\n    }\n</style>"]}]}