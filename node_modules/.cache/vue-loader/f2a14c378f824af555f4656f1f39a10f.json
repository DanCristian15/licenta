{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/views/search/TheSearch/SearchResultTabsAll/SearchResultTabsAllSectionHeader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/views/search/TheSearch/SearchResultTabsAll/SearchResultTabsAllSectionHeader.vue","mtime":1645805364035},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js","mtime":1637061222406},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBJY29uRHJvcERvd25BcnJvdyBmcm9tICdAY29yZS9zaGFyZWQvYXNzZXRzL2ljb25zL2Ryb3Bkb3duX2Fycm93LnN2Zyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnU2VhcmNoUmVzdWx0VGFic0FsbFNlY3Rpb24nLAogICAgaTE4bk9wdGlvbnM6IHsKICAgICAgICBuYW1lc3BhY2VzOiAnbWFpbicsCiAgICAgICAga2V5UHJlZml4OiAndmlld3Muc2VhcmNoLnRoZVNlYXJjaC5fY29tcG9uZW50cy5zZWFyY2hSZXN1bHRUYWJzJwogICAgfSwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBJY29uRHJvcERvd25BcnJvdwogICAgfSwKICAgIHByb3BzOiB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICBkZWZhdWx0OiAnJwogICAgICAgIH0sCiAgICAgICAgdG86IHsKICAgICAgICAgICAgdHlwZTogT2JqZWN0LAogICAgICAgICAgICBkZWZhdWx0OiAoKSA9PiAoIHt9ICkKICAgICAgICB9LAogICAgICAgIHRleHRCdXR0b246IHsKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICBkZWZhdWx0OiAnJwogICAgICAgIH0sCiAgICAgICAgc2hvd0J1dHRvbjogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiB0cnVlCiAgICAgICAgfQogICAgfQp9Owo="},{"version":3,"sources":["SearchResultTabsAllSectionHeader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SearchResultTabsAllSectionHeader.vue","sourceRoot":"src/core/views/search/TheSearch/SearchResultTabsAll","sourcesContent":["<template>\n    <v-flex class=\"d-flex flex-column\">\n        <v-flex class=\"gst-search-result-tabs-all-section-header d-flex align-center justify-space-between pt-4 pb-2\">\n            <h4>\n                {{ title }}\n            </h4>\n            <router-link\n                v-if=\"showButton\"\n                class=\"d-flex align-center gst-btn--see-all\"\n                :to=\"to\">\n                <span>{{ textButton }}</span>\n                <i class=\"gst-icon-svg u-rotate-90-n\">\n                    <IconDropDownArrow />\n                </i>\n            </router-link>\n        </v-flex>\n    </v-flex>\n</template>\n<script>\n    import IconDropDownArrow from '@core/shared/assets/icons/dropdown_arrow.svg';\n\n    export default {\n        name: 'SearchResultTabsAllSection',\n        i18nOptions: {\n            namespaces: 'main',\n            keyPrefix: 'views.search.theSearch._components.searchResultTabs'\n        },\n        components: {\n            IconDropDownArrow\n        },\n        props: {\n            title: {\n                type: String,\n                default: ''\n            },\n            to: {\n                type: Object,\n                default: () => ( {} )\n            },\n            textButton: {\n                type: String,\n                default: ''\n            },\n            showButton: {\n                type: Boolean,\n                default: true\n            }\n        }\n    };\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"@scssVariables\";\n    @import \"@scssMixins\";\n\n    .gst-search-result-tabs-all-section-header {\n        h4 {\n            line-height: line-height( 'xxxxl' );\n            color: theme-color( 'quaternary' );\n            font-weight: font-weight( 'medium' );\n        }\n\n        .gst-btn--see-all {\n            .gst-icon-svg {\n                .gst-svg-icon {\n                    fill: theme-color( 'primary' ) !important;\n                }\n            }\n        }\n    }\n</style>\n"]}]}