{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/input/CitySearchStoreDropDown.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/input/CitySearchStoreDropDown.vue","mtime":1645805363958},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/css-loader/dist/cjs.js","mtime":1637061260154},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1637061260528},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/postcss-loader/src/index.js","mtime":1637061260465},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/sass-loader/dist/cjs.js","mtime":1637061279772},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiQHNjc3NWYXJpYWJsZXMiOwoKLmdzdC1jaXR5LXNlYXJjaC1zdG9yZS1kcm9wZG93bl9fbWVudSB7CiAgICBtYXJnaW4tdG9wOiA4cHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0aGVtZS1jb2xvciggJ3doaXRlJyApOwogICAgYm9yZGVyLXJhZGl1czogYm9yZGVyLXJhZGl1cyggJ20nICkgIWltcG9ydGFudDsKfQoKLmdzdC1jaXR5LXNlYXJjaC1zdG9yZS1kcm9wZG93bl9fdGFyZ2V0IHsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIGxpbmUtaGVpZ2h0OiAwLjg1OwogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGN1cnJlbnRDb2xvcjsKfQoKLmdzdC1jaXR5LXNlYXJjaC1zdG9yZS1kcm9wZG93bl9fY2xlYXIgewogICAgcGFkZGluZy10b3A6IDhweDsKICAgIHBhZGRpbmctYm90dG9tOiA4cHg7CiAgICBmb250LXNpemU6IGZvbnQtc2l6ZSggJ2wnICk7CiAgICBtaW4taGVpZ2h0OiAxNnB4Owp9CgouZ3N0LXNlYXJjaC1jaXR5LW1lbnVfX2N1cnJlbnQtbG9jYXRpb24gewogICAgcGFkZGluZy10b3A6IDhweDsKICAgIHBhZGRpbmctYm90dG9tOiA4cHg7CiAgICBtaW4taGVpZ2h0OiAxNnB4OwoKICAgIC52LWxpc3QtaXRlbV9faWNvbiB7CiAgICAgICAgbWFyZ2luLXRvcDogMDsKICAgICAgICBtYXJnaW4tYm90dG9tOiAwOwogICAgICAgIG1hcmdpbi1yaWdodDogOHB4ICFpbXBvcnRhbnQ7CgogICAgICAgIC5nc3Qtc3ZnLWljb24gewogICAgICAgICAgICBmaWxsOiB0aGVtZS1jb2xvciggJ3ByaW1hcnknICk7CiAgICAgICAgfQogICAgfQp9CgouZ3N0LWNpdHktc2VhcmNoLXN0b3JlLWRyb3Bkb3duX19saXN0IC52LWxpc3QtaXRlbSB7CiAgICBwYWRkaW5nLXRvcDogOHB4OwogICAgcGFkZGluZy1ib3R0b206IDhweDsKICAgIGZvbnQtc2l6ZTogZm9udC1zaXplKCAnbCcgKTsKICAgIG1pbi1oZWlnaHQ6IDE2cHg7Cn0KCi5nc3QtY2l0eS1zZWFyY2gtc3RvcmUtZHJvcGRvd25fX2xpc3QgLnYtbGlzdC1pdGVtIGRpdiBtYXJrIHsKICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OwogICAgZm9udC13ZWlnaHQ6IGZvbnQtd2VpZ2h0KCAnbWVkaXVtJyApOwp9CgouZ3N0LWNpdHktc2VhcmNoLXN0b3JlLWRyb3Bkb3duX19uby1kYXRhIHsKICAgIHBhZGRpbmc6IDE2cHg7CiAgICBjb2xvcjogdGhlbWUtY29sb3IoICdlcnJvcicgKTsKICAgIGZvbnQtc2l6ZTogZm9udC1zaXplKCAneHh4cycgKTsKICAgIGZvbnQtd2VpZ2h0OiBmb250LXdlaWdodCggJ21lZGl1bScgKTsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKfQo="},{"version":3,"sources":["CitySearchStoreDropDown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwNA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CitySearchStoreDropDown.vue","sourceRoot":"src/core/shared/components/input","sourcesContent":["<template>\n    <v-menu\n        v-model=\"menuOpened\"\n        offset-y\n        content-class=\"gst-city-search-store-dropdown__menu\"\n        :close-on-content-click=\"false\"\n        :disabled=\"disabled\">\n        <template v-slot:activator=\"{ on }\">\n            <span\n                class=\"gst-city-search-store-dropdown__target primary--text u-mouse-pointer\"\n                :data-test-id=\"$attrs['data-test-id']\"\n                v-on=\"on\">\n                {{ selectValueLabel }}\n            </span>\n            <i\n                :class=\"{'u-rotate-180': menuOpened }\"\n                class=\"u-mouse-pointer gst-icon-svg\"\n                v-on=\"on\">\n                <IconDropDownArrow class=\"gst-dropdown-icon-svg\" />\n            </i>\n        </template>\n        <v-list>\n            <v-list-item>\n                <v-text-field\n                    ref=\"inputSearch\"\n                    v-model=\"searchValue\"\n                    :placeholder=\"$t('inputPlaceholder')\"\n                    color=\"primary\"\n                    class=\"gst-search-input pt-0\"\n                    hide-details=\"\"\n                    data-hj-allow>\n                    <template slot=\"prepend-inner\" class=\"text-primary\">\n                        <IconSearch class=\"gst-search-icon-svg\" />\n                    </template>\n                </v-text-field>\n            </v-list-item>\n            <v-list-item v-if=\"canFindMyLocation && hasCurrentLocationOption\" key=\"gps\" class=\"gst-search-city-menu__current-location\" @click=\"findMyLocation\">\n                <v-list-item-icon>\n                    <IconGPS />\n                </v-list-item-icon>\n                <v-list-item-title>\n                    <v-flex class=\"d-flex flex-row justify-center\">\n                        {{ $t('_common:terms.useMyCurrentLocation') }}\n                        <data-loading v-if=\"loadingCurrentLocation\" :width=\"2\" :size=\"20\" class=\"ml-1\" />\n                    </v-flex>\n                </v-list-item-title>\n            </v-list-item>\n            <v-list-item v-if=\"clearable\" class=\"gst-city-search-store-dropdown__clear\" @click=\"select( { } )\">\n                <v-list-item-title>\n                    <div>{{ $t('labels.clear') }}</div>\n                </v-list-item-title>\n            </v-list-item>\n            <DataLoading v-if=\"loading\" :width=\"2\" />\n            <template v-else>\n                <p v-if=\"!cities.length\" class=\"gst-city-search-store-dropdown__no-data\">\n                    {{ $t('messages.noData') }}\n                </p>\n                <SearchCityList class=\"gst-city-search-store-dropdown__list\" :items=\"cities\" :highlight=\"searchValue\" @select=\"select\" />\n            </template>\n        </v-list>\n    </v-menu>\n</template>\n\n<script>\n    import { mapActions, mapState } from 'vuex';\n    import debounce from 'lodash/debounce';\n    import listConstants from '@core/utils/constants/list';\n    import {\n        hasLocation as cityObjectUtilsHasLocation,\n        hasCurrentLocation as cityObjectUtilsHasCurrentLocation\n    } from '@utils/cityObjectUtils';\n    import IconSearch from '@core/shared/assets/icons/search.svg';\n    import IconGPS from '@core/shared/assets/icons/gps.svg';\n    import IconDropDownArrow from '@core/shared/assets/icons/dropdown_arrow.svg';\n    import DataLoading from '@core/shared/components/loading/DataLoading.vue';\n    import SearchCityList from '@core/shared/components/search/SearchCityList.vue';\n\n    const STORE_NAME = 'cities';\n    const CONFIG = {\n        MAX_RESULTS: 5\n    };\n\n    export default {\n        name: 'CitySearchStoreDropDown',\n        inheritsAttribute: true,\n        components: {\n            IconGPS,\n            IconSearch,\n            IconDropDownArrow,\n            DataLoading,\n            SearchCityList\n        },\n        i18nOptions: {\n            namespaces: 'shared',\n            keyPrefix: 'components.input._common.cityDropDown',\n        },\n        props: {\n            value: {\n                type: Object,\n                default: ( ) => { return { name: '' }; }\n            },\n            showIcon: {\n                type: Boolean,\n                default: false\n            },\n            clearable: {\n                type: Boolean,\n                default: true\n            },\n            hasCurrentLocationOption: {\n                type: Boolean,\n                default: false\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            }\n        },\n        data( ) {\n            return {\n                loadingCurrentLocation: false,\n                menuOpened: false,\n                searchValue: ''\n            };\n        },\n        computed: {\n            ...mapState( {\n                cities:     state => state[STORE_NAME].list,\n                loading:    state => state[STORE_NAME].loading\n            } ),\n            canFindMyLocation( ) {\n                return !!navigator.geolocation;\n            },\n            selectValueLabel( ) {\n                const { value } = this;\n                const cityLabel = this.$options.filters.city( value, { country: true } );\n\n                if ( cityLabel ) {\n                    return cityLabel;\n                }\n\n                if ( cityObjectUtilsHasLocation ( value ) ) {\n                    if ( cityObjectUtilsHasCurrentLocation( value ) ) {\n                        return this.$t( '_common:terms.myCurrentLocation' );\n                    } else {\n                        return this.$t( '_common:terms.location' );\n                    }\n                }\n                return this.$t( 'placeholder' );\n            }\n        },\n        watch: {\n            'menuOpened': function ( newValue ) {\n                if ( newValue ) {\n                    this.unwatchSearchValProp = this.$watch( 'searchValue', (  ) => {\n                        this.loadDataDebouced( );\n                    } );\n                    setTimeout( ( ) => {\n                        !this.$refs.inputSearch || this.$refs.inputSearch.focus( );\n                    }, 100 );\n                    this.$emit( 'open' );\n                } else {\n                    !this.unwatchSearchValPropAfterValueChange || this.unwatchSearchValPropAfterValueChange( );\n                }\n            }\n        },\n        methods: {\n            ...mapActions( {\n                loadCities: `${STORE_NAME}/get`,\n                getCurrentLocation: 'user/location/getCurrentLocation',\n            } ),\n            getHTMLCity( item ) {\n                const regex = new RegExp( `(${this.searchValue })`, 'gi' );\n\n                return {\n                    ...item,\n                    name: item.name.replace( regex, '<mark>$1</mark>' )\n                };\n            },\n            select( value ) {\n                this.$emit( 'input', value );\n                this.menuOpened = false;\n            },\n            loadDataDebouced: debounce( function ( ) {\n                this.loadCities( { refresh: true, search: { keyword: this.searchValue, limit: CONFIG.MAX_RESULTS, offset: 0 } } );\n            }, listConstants.DEBOUNCE_DELAY ),\n            async findMyLocation( ) {\n                if ( !this.loadingCurrentLocation ) {\n                    this.loadingCurrentLocation = true;\n                    const location = await this.getCurrentLocation( { showMessage: false, refresh: true } );\n\n                    if ( location && location.position ) {\n                        this.select( {\n                            ...location.city,\n                            location: {\n                                current: true,\n                                ...location.position\n                            }\n                        } );\n                    }\n                    this.loadingCurrentLocation = false;\n                }\n            }\n        },\n        mounted( ) {\n            this.unwatchSearchValPropOnStart =  this.$watch( 'menuOpened', ( newValue ) => {\n                if ( newValue ) {\n                    this.loadCities( { refresh: true, search: { keyword: this.searchValue, limit: CONFIG.MAX_RESULTS, offset: 0 } } );\n                    this.unwatchSearchValPropOnStart( );\n                }\n            } );\n        }\n    };\n</script>\n\n<style lang=\"scss\">\n    @import \"@scssVariables\";\n\n    .gst-city-search-store-dropdown__menu {\n        margin-top: 8px;\n        background-color: theme-color( 'white' );\n        border-radius: border-radius( 'm' ) !important;\n    }\n\n    .gst-city-search-store-dropdown__target {\n        display: inline-block;\n        line-height: 0.85;\n        border-bottom: 1px solid currentColor;\n    }\n\n    .gst-city-search-store-dropdown__clear {\n        padding-top: 8px;\n        padding-bottom: 8px;\n        font-size: font-size( 'l' );\n        min-height: 16px;\n    }\n\n    .gst-search-city-menu__current-location {\n        padding-top: 8px;\n        padding-bottom: 8px;\n        min-height: 16px;\n\n        .v-list-item__icon {\n            margin-top: 0;\n            margin-bottom: 0;\n            margin-right: 8px !important;\n\n            .gst-svg-icon {\n                fill: theme-color( 'primary' );\n            }\n        }\n    }\n\n    .gst-city-search-store-dropdown__list .v-list-item {\n        padding-top: 8px;\n        padding-bottom: 8px;\n        font-size: font-size( 'l' );\n        min-height: 16px;\n    }\n\n    .gst-city-search-store-dropdown__list .v-list-item div mark {\n        background-color: transparent;\n        font-weight: font-weight( 'medium' );\n    }\n\n    .gst-city-search-store-dropdown__no-data {\n        padding: 16px;\n        color: theme-color( 'error' );\n        font-size: font-size( 'xxxs' );\n        font-weight: font-weight( 'medium' );\n        text-align: center;\n    }\n</style>\n"]}]}