{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/shared/components/input/CityDropDown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/shared/components/input/CityDropDown.vue","mtime":1645805363957},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js","mtime":1637061222406},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBEYXRhTG9hZGluZyBmcm9tICdAY29yZS9zaGFyZWQvY29tcG9uZW50cy9sb2FkaW5nL0RhdGFMb2FkaW5nLnZ1ZSc7CmltcG9ydCBTZWFyY2hDaXR5TGlzdCBmcm9tICdAY29yZS9zaGFyZWQvY29tcG9uZW50cy9zZWFyY2gvU2VhcmNoQ2l0eUxpc3QudnVlJzsKaW1wb3J0IEljb25Ecm9wRG93bkFycm93IGZyb20gJ0Bjb3JlL3NoYXJlZC9hc3NldHMvaWNvbnMvZHJvcGRvd25fYXJyb3cuc3ZnJzsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdDaXR5RHJvcERvd24nLAogICAgaW5oZXJpdHNBdHRyaWJ1dGU6IHRydWUsCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgRGF0YUxvYWRpbmcsCiAgICAgICAgU2VhcmNoQ2l0eUxpc3QsCiAgICAgICAgSWNvbkRyb3BEb3duQXJyb3cKICAgIH0sCiAgICBpMThuT3B0aW9uczogewogICAgICAgIG5hbWVzcGFjZXM6ICdzaGFyZWQnLAogICAgICAgIGtleVByZWZpeDogJ2NvbXBvbmVudHMuaW5wdXQuX2NvbW1vbi5jaXR5RHJvcERvd24nLAogICAgfSwKICAgIHByb3BzOiB7CiAgICAgICAgdmFsdWU6IHsKICAgICAgICAgICAgdHlwZTogT2JqZWN0LAogICAgICAgICAgICBkZWZhdWx0OiAoICkgPT4geyByZXR1cm4geyBuYW1lOiAnJyB9OyB9CiAgICAgICAgfSwKICAgICAgICBpdGVtczogewogICAgICAgICAgICB0eXBlOiBBcnJheSwKICAgICAgICAgICAgZGVmYXVsdDogbnVsbAogICAgICAgIH0sCiAgICAgICAgc2hvd0ljb246IHsKICAgICAgICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgICAgICAgZGVmYXVsdDogZmFsc2UKICAgICAgICB9LAogICAgICAgIGNsZWFyYWJsZTogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiB0cnVlCiAgICAgICAgfSwKICAgICAgICBsb2FkaW5nOiB7CiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICBkaXNhYmxlZDogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiBmYWxzZQogICAgICAgIH0KICAgIH0sCiAgICBkYXRhKCApIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBtZW51T3BlbmVkOiBmYWxzZSwKICAgICAgICB9OwogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBzZWxlY3QoIHZhbHVlICkgewogICAgICAgICAgICB0aGlzLiRlbWl0KCAnaW5wdXQnLCB2YWx1ZSApOwogICAgICAgICAgICB0aGlzLm1lbnVPcGVuZWQgPSBmYWxzZTsKICAgICAgICB9LAogICAgICAgIG9uQ2xpY2tEbyggKSB7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoICdjbGljaycgKTsKICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCggKSB7CiAgICAgICAgdGhpcy51bndhdGNoTWVudU9wZW5lZCA9IHRoaXMuJHdhdGNoKCAnbWVudU9wZW5lZCcsICggdmFsdWUgKSA9PiB7CiAgICAgICAgICAgIGlmICggdmFsdWUgKSB7CiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCAnbWVudS1vcGVuZWQnICk7CiAgICAgICAgICAgIH0KICAgICAgICB9ICk7CiAgICB9LAogICAgdW5tb3VudGVkKCApIHsKICAgICAgICB0aGlzLnVud2F0Y2hNZW51T3BlbmVkKCApOwogICAgfQp9Owo="},{"version":3,"sources":["CityDropDown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CityDropDown.vue","sourceRoot":"src/core/shared/components/input","sourcesContent":["<template>\n    <v-menu\n        v-model=\"menuOpened\"\n        offset-y\n        content-class=\"gst-city-dropdown__menu\"\n        :close-on-content-click=\"false\"\n        :disabled=\"disabled\">\n        <template v-slot:activator=\"{ on }\">\n            <div class=\"gst-city-dropdown d-inline-block\" v-on=\"on\" @click=\"onClickDo\">\n                <span\n                    class=\"u-mouse-pointer gst-city-dropdown__target d-inline-block\"\n                    :class=\"{\n                        'tertiary--text': !menuOpened,\n                        'primary--text': menuOpened\n                    }\"\n                    :data-test-id=\"$attrs['data-test-id']\">\n                    {{ value && value.name ? $options.filters.city( value, { country: true } ) : $t('placeholder') }}\n                </span>\n                <i\n                    class=\"u-mouse-pointer gst-icon-svg\"\n                    :class=\"{\n                        'gst-icon-svg--active u-rotate-180': menuOpened\n                    }\">\n                    <IconDropDownArrow class=\"gst-dropdown-icon-svg\" />\n                </i>\n            </div>\n        </template>\n        <v-list class=\"gst-city-dropdown__list\">\n            <v-list-item v-if=\"clearable\" class=\"gst-city-dropdown__list-item gst-city-dropdown__reset\" :disabled=\"!value\" :ripple=\"false\" @click=\"select( null )\">\n                <v-list-item-title>\n                    <div>{{ $t('_common:terms.reset') }}</div>\n                </v-list-item-title>\n            </v-list-item>\n            <v-divider v-if=\"clearable\" />\n            <v-list-item-group>\n                <v-list-item\n                    v-if=\"clearable\"\n                    class=\"gst-city-dropdown__list-item\"\n                    :class=\"{ 'selected': !value }\"\n                    @click=\"select( null )\">\n                    <v-list-item-title>\n                        <div>{{ $t('labels.clear') }}</div>\n                    </v-list-item-title>\n                </v-list-item>\n                <DataLoading v-if=\"loading\" class=\"mt-1 mb-2\" :width=\"2\" />\n                <template v-else>\n                    <p v-if=\"!items.length\" class=\"gst-city-dropdown__no-data\">\n                        {{ $t('messages.noData') }}\n                    </p>\n                    <SearchCityList class=\"gst-city-dropdown__search-list\" :items=\"items\" :selected=\"value\" @select=\"select\" />\n                </template>\n            </v-list-item-group>\n        </v-list>\n    </v-menu>\n</template>\n\n<script>\n    import DataLoading from '@core/shared/components/loading/DataLoading.vue';\n    import SearchCityList from '@core/shared/components/search/SearchCityList.vue';\n    import IconDropDownArrow from '@core/shared/assets/icons/dropdown_arrow.svg';\n\n    export default {\n        name: 'CityDropDown',\n        inheritsAttribute: true,\n        components: {\n            DataLoading,\n            SearchCityList,\n            IconDropDownArrow\n        },\n        i18nOptions: {\n            namespaces: 'shared',\n            keyPrefix: 'components.input._common.cityDropDown',\n        },\n        props: {\n            value: {\n                type: Object,\n                default: ( ) => { return { name: '' }; }\n            },\n            items: {\n                type: Array,\n                default: null\n            },\n            showIcon: {\n                type: Boolean,\n                default: false\n            },\n            clearable: {\n                type: Boolean,\n                default: true\n            },\n            loading: {\n                type: Boolean,\n                default: false\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            }\n        },\n        data( ) {\n            return {\n                menuOpened: false,\n            };\n        },\n        methods: {\n            select( value ) {\n                this.$emit( 'input', value );\n                this.menuOpened = false;\n            },\n            onClickDo( ) {\n                this.$emit( 'click' );\n            }\n        },\n        mounted( ) {\n            this.unwatchMenuOpened = this.$watch( 'menuOpened', ( value ) => {\n                if ( value ) {\n                    this.$emit( 'menu-opened' );\n                }\n            } );\n        },\n        unmounted( ) {\n            this.unwatchMenuOpened( );\n        }\n    };\n</script>\n\n<style lang=\"scss\">\n    @import \"@scssVariables\";\n\n    .gst-city-dropdown__menu {\n        margin-top: 8px;\n        background-color: theme-color( 'white' );\n        border-radius: border-radius( 'm' ) !important;\n    }\n\n    .gst-city-dropdown {\n        span {\n            font-size: font-size( 's' );\n            font-weight: font-weight( 'regular' );\n            text-decoration: underline;\n        }\n\n        .gst-icon-svg {\n            .gst-dropdown-icon-svg .gst-svg-icon {\n                fill: theme-color( 'tertiary' );\n            }\n        }\n\n        .gst-icon-svg--active {\n            .gst-dropdown-icon-svg .gst-svg-icon {\n                fill: theme-color( 'primary' );\n            }\n        }\n    }\n\n    .gst-city-dropdown__list {\n        min-width: 180px;\n    }\n\n    .gst-city-dropdown__list .v-list-item-group {\n        max-height: 195px;\n        overflow: auto;\n    }\n\n    .gst-city-dropdown__list .v-list-item {\n        padding-top: 8px;\n        padding-bottom: 8px;\n        font-size: font-size( 'l' );\n        min-height: 16px;\n    }\n\n    .gst-city-dropdown__list .v-list-item-group .v-list-item.v-list-item--active::before {\n        opacity: 0;\n    }\n\n    .gst-city-dropdown__list .v-list-item-group .v-list-item.v-list-item--active:hover::before {\n        opacity: 0.04;\n    }\n\n    .gst-city-dropdown__reset::before {\n        opacity: 0 !important;\n    }\n\n    .gst-city-dropdown__reset.v-list-item--disabled,\n    .gst-city-dropdown__reset.v-list-item:not(.v-list-item--active):not(.v-list-item--disabled) {\n        color: theme-color( 'primary' ) !important;\n    }\n\n    .gst-city-dropdown__reset.v-list-item--disabled {\n        opacity: 0.4;\n    }\n\n    .gst-city-dropdown__no-data {\n        padding: 16px;\n        color: theme-color( 'error' );\n        font-size: font-size( 'xxxs' );\n        font-weight: font-weight( 'medium' );\n        text-align: center;\n    }\n</style>\n"]}]}