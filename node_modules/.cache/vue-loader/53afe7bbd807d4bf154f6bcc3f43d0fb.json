{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/core/views/search/TheSearch/SearchResultTabsAttractions.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/views/search/TheSearch/SearchResultTabsAttractions.vue","mtime":1645805364036},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMsIG1hcFN0YXRlLCBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCBpc0VxdWFsIGZyb20gJ2xvZGFzaC9pc0VxdWFsJzsKaW1wb3J0IGVudGl0eUNvbnN0YW50cyBmcm9tICdAY29yZS91dGlscy9jb25zdGFudHMvZW50aXR5JzsKaW1wb3J0IFNlZU1vcmVCdXR0b24gZnJvbSAnQGNvcmUvc2hhcmVkL2NvbXBvbmVudHMvYnV0dG9ucy9TZWVNb3JlQnV0dG9uLnZ1ZSc7CmltcG9ydCBEYXRhTG9hZGluZyBmcm9tICdAY29yZS9zaGFyZWQvY29tcG9uZW50cy9sb2FkaW5nL0RhdGFMb2FkaW5nLnZ1ZSc7CmltcG9ydCBTZWFyY2hSZXN1bHRNaXhpbiBmcm9tICcuL1NlYXJjaFJlc3VsdE1peGluJzsKaW1wb3J0IFNlYXJjaFJlc3VsdFRhYnNOb0RhdGEgZnJvbSAnLi9TZWFyY2hSZXN1bHRUYWJzTm9EYXRhLnZ1ZSc7CmltcG9ydCB7IFNlYXJjaFJlc3VsdFRhYnNBdHRyYWN0aW9uc0xpc3QgfSBmcm9tICcuL1NlYXJjaFJlc3VsdFRhYnNBdHRyYWN0aW9ucy9pbmRleCc7Cgpjb25zdCBTVE9SRV9BVFRSQUNUSU9OUyA9ICdhdHRyYWN0aW9ucyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnU2VhcmNoUmVzdWx0VGFic0F0dHJhY3Rpb25zJywKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBTZWFyY2hSZXN1bHRUYWJzTm9EYXRhLAogICAgICAgIFNlZU1vcmVCdXR0b24sCiAgICAgICAgU2VhcmNoUmVzdWx0VGFic0F0dHJhY3Rpb25zTGlzdCwKICAgICAgICBEYXRhTG9hZGluZwogICAgfSwKICAgIG1peGluczogWyBTZWFyY2hSZXN1bHRNaXhpbiBdLAogICAgaTE4bk9wdGlvbnM6IHsKICAgICAgICBuYW1lc3BhY2VzOiAnbWFpbicsCiAgICAgICAga2V5UHJlZml4OiAndmlld3Muc2VhcmNoLnRoZVNlYXJjaC5fY29tcG9uZW50cy5zZWFyY2hSZXN1bHRUYWJzLmF0dHJhY3Rpb25zJwogICAgfSwKICAgIHRlc3RJZE9wdGlvbnM6IHsKICAgICAgICBrZXlQcmVmaXg6ICdzZWFyY2guYXRyYWN0aW9uc1RhYicKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIC4uLm1hcFN0YXRlKCB7CiAgICAgICAgICAgIGxvYWRpbmc6ICAgICAgICAgICAgICAgIHN0YXRlID0+IHN0YXRlW1NUT1JFX0FUVFJBQ1RJT05TXS5sb2FkaW5nLAogICAgICAgICAgICBhdHRyYWN0aW9uczogICAgICAgICAgICBzdGF0ZSA9PiBzdGF0ZVtTVE9SRV9BVFRSQUNUSU9OU10ubGlzdCwKICAgICAgICAgICAgZmlsdGVyOiAgICAgICAgICAgICAgICAgc3RhdGUgPT4gc3RhdGVbU1RPUkVfQVRUUkFDVElPTlNdLmZpbHRlcgogICAgICAgIH0gKSwKICAgICAgICAuLi5tYXBHZXR0ZXJzKCB7CiAgICAgICAgICAgIGlzQWxsSXRlbXNMb2FkZWQ6ICBgJHsgU1RPUkVfQVRUUkFDVElPTlMgfS9pc0FsbEl0ZW1zTG9hZGVkYAogICAgICAgIH0gKSwKICAgICAgICBub0RhdGEoICkgewogICAgICAgICAgICByZXR1cm4gIXRoaXMudG90YWwgJiYgIXRoaXMuYXR0cmFjdGlvbnMubGVuZ3RoICYmICF0aGlzLmxvYWRpbmc7CiAgICAgICAgfSwKICAgICAgICBlbnRpdHlUeXBlKCApIHsKICAgICAgICAgICAgcmV0dXJuIGVudGl0eUNvbnN0YW50cy5UWVBFUy5BVFRSQUNUSU9OOwogICAgICAgIH0sCiAgICAgICAgc2hvd0xvYWRpbmcoICkgewogICAgICAgICAgICByZXR1cm4gIXRoaXMuYXR0cmFjdGlvbnMubGVuZ3RoICYmIHRoaXMubG9hZGluZzsKICAgICAgICB9LAogICAgICAgIGhhc0l0ZW1zKCApIHsKICAgICAgICAgICAgcmV0dXJuICEhdGhpcy5hdHRyYWN0aW9ucy5sZW5ndGg7CiAgICAgICAgfQogICAgfSwKICAgIHdhdGNoOiB7CiAgICAgICAgJ2ZpbHRlcic6IHsKICAgICAgICAgICAgaGFuZGxlcjogZnVuY3Rpb24gKCBuZXdWYWx1ZSwgb2xkVmFsdWUgKSB7CiAgICAgICAgICAgICAgICBpc0VxdWFsKCBuZXdWYWx1ZSwgb2xkVmFsdWUgKSB8fCB0aGlzLmxvYWREYXRhKCApOwogICAgICAgICAgICB9LAogICAgICAgICAgICBkZWVwOiB0cnVlCiAgICAgICAgfSwKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgLi4ubWFwQWN0aW9ucyggewogICAgICAgICAgICBnZXQ6ICAgICAgICAgICAgYCR7IFNUT1JFX0FUVFJBQ1RJT05TIH0vZ2V0YCwKICAgICAgICB9ICksCiAgICAgICAgbG9hZE5leHRQYWdlICggKSB7CiAgICAgICAgICAgIHRoaXMuZ2V0KCB7IHJlZnJlc2g6IGZhbHNlLCBsb2FkTmV4dFBhZ2U6IHRydWUsIHNlYXJjaDogdGhpcy5zZWFyY2hQYXJhbXMsIHVzZXJBbmFseXRpY3M6IHRydWUgfSApOwogICAgICAgIH0sCiAgICAgICAgYXN5bmMgbG9hZERhdGEoICkgewogICAgICAgICAgICBjb25zdCBwYXJhbXMgPSB7CiAgICAgICAgICAgICAgICBvZmZzZXQ6IDAsCiAgICAgICAgICAgICAgICBjb3VudDogdHJ1ZSwKICAgICAgICAgICAgICAgIC4uLnRoaXMuc2VhcmNoUGFyYW1zCiAgICAgICAgICAgIH07CgogICAgICAgICAgICBhd2FpdCB0aGlzLmdldCggeyByZWZyZXNoOiB0cnVlLCBzZWFyY2ggOiBwYXJhbXMsIGZpcnN0TG9hZDogZmFsc2UgfSApOwogICAgICAgIH0KICAgIH0sCiAgICBtb3VudGVkKCApIHsKICAgICAgICB0aGlzLnVwZGF0ZUZpbHRlciggeyBmaWx0ZXI6IHRoaXMuZmlsdGVyU2VhcmNoUGFyYW1zLCBlbnRpdHlUeXBlOiB0aGlzLmVudGl0eVR5cGUgfSApOwogICAgfQp9Owo="},{"version":3,"sources":["SearchResultTabsAttractions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SearchResultTabsAttractions.vue","sourceRoot":"src/core/views/search/TheSearch","sourcesContent":["<template>\n    <div class=\"gst-tabs__attractions gst-tabs-content-narrow\">\n        <div v-if=\"!noData\">\n            <DataLoading v-if=\"showLoading\" class=\"mt-5 mb-5 pt-5 pb-5\" />\n            <template v-else-if=\"hasItems\">\n                <SearchResultTabsAttractionsList :items=\"attractions\" />\n                <SeeMoreButton\n                    v-if=\"!isAllItemsLoaded\"\n                    :data-test-id=\"$testId('buttons.seeMore')\"\n                    class=\"mx-auto d-flex mt-4\"\n                    :loading=\"loading\"\n                    @click=\"loadNextPage()\" />\n            </template>\n        </div>\n        <SearchResultTabsNoData\n            v-else\n            class=\"mt-6\"\n            :title=\"$t('messages.noData.title')\"\n            :content=\"$t('messages.noData.content')\"\n            :type=\"entityType\" />\n    </div>\n</template>\n<script>\n    import { mapActions, mapState, mapGetters } from 'vuex';\n    import isEqual from 'lodash/isEqual';\n    import entityConstants from '@core/utils/constants/entity';\n    import SeeMoreButton from '@core/shared/components/buttons/SeeMoreButton.vue';\n    import DataLoading from '@core/shared/components/loading/DataLoading.vue';\n    import SearchResultMixin from './SearchResultMixin';\n    import SearchResultTabsNoData from './SearchResultTabsNoData.vue';\n    import { SearchResultTabsAttractionsList } from './SearchResultTabsAttractions/index';\n\n    const STORE_ATTRACTIONS = 'attractions';\n\n    export default {\n        name: 'SearchResultTabsAttractions',\n        components: {\n            SearchResultTabsNoData,\n            SeeMoreButton,\n            SearchResultTabsAttractionsList,\n            DataLoading\n        },\n        mixins: [ SearchResultMixin ],\n        i18nOptions: {\n            namespaces: 'main',\n            keyPrefix: 'views.search.theSearch._components.searchResultTabs.attractions'\n        },\n        testIdOptions: {\n            keyPrefix: 'search.atractionsTab'\n        },\n        computed: {\n            ...mapState( {\n                loading:                state => state[STORE_ATTRACTIONS].loading,\n                attractions:            state => state[STORE_ATTRACTIONS].list,\n                filter:                 state => state[STORE_ATTRACTIONS].filter\n            } ),\n            ...mapGetters( {\n                isAllItemsLoaded:  `${ STORE_ATTRACTIONS }/isAllItemsLoaded`\n            } ),\n            noData( ) {\n                return !this.total && !this.attractions.length && !this.loading;\n            },\n            entityType( ) {\n                return entityConstants.TYPES.ATTRACTION;\n            },\n            showLoading( ) {\n                return !this.attractions.length && this.loading;\n            },\n            hasItems( ) {\n                return !!this.attractions.length;\n            }\n        },\n        watch: {\n            'filter': {\n                handler: function ( newValue, oldValue ) {\n                    isEqual( newValue, oldValue ) || this.loadData( );\n                },\n                deep: true\n            },\n        },\n        methods: {\n            ...mapActions( {\n                get:            `${ STORE_ATTRACTIONS }/get`,\n            } ),\n            loadNextPage ( ) {\n                this.get( { refresh: false, loadNextPage: true, search: this.searchParams, userAnalytics: true } );\n            },\n            async loadData( ) {\n                const params = {\n                    offset: 0,\n                    count: true,\n                    ...this.searchParams\n                };\n\n                await this.get( { refresh: true, search : params, firstLoad: false } );\n            }\n        },\n        mounted( ) {\n            this.updateFilter( { filter: this.filterSearchParams, entityType: this.entityType } );\n        }\n    };\n</script>\n"]}]}