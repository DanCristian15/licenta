{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/search/SearchCityList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/search/SearchCityList.vue","mtime":1645805363970},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBpc0VxdWFsIGZyb20gJ2xvZGFzaC9pc0VxdWFsJzsKaW1wb3J0IHsgc29ydENvbXBhcmUgYXMgc29ydENvbXBhcmVVdGlsc0dlbmVyYWxTb3J0IH0gZnJvbSAnQC9jb3JlL3V0aWxzL3NvcnRDb21wYXJlVXRpbHMnOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1NlYWNoQ2l0eUxpc3QnLAogICAgcHJvcHM6IHsKICAgICAgICBpdGVtczogewogICAgICAgICAgICB0eXBlOiBBcnJheSwKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUKICAgICAgICB9LAogICAgICAgIGhpZ2hsaWdodDogewogICAgICAgICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgICAgICAgZGVmYXVsdDogJycKICAgICAgICB9LAogICAgICAgIHNlbGVjdGVkOiB7CiAgICAgICAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgICAgICAgZGVmYXVsdDogKCkgPT4gKCB7fSApCiAgICAgICAgfQogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgc29ydGVkSXRlbXMoKSB7CiAgICAgICAgICAgIHJldHVybiBbIC4uLnRoaXMuaXRlbXMgXS5zb3J0KCAoIGEsIGIgKSA9PiBzb3J0Q29tcGFyZVV0aWxzR2VuZXJhbFNvcnQoIGEubmFtZSwgYi5uYW1lLCB0cnVlICkgKTsKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGdldEhUTUxDaXR5KCBpdGVtICkgewogICAgICAgICAgICBjb25zdCB7IGhpZ2hsaWdodCB9ID0gdGhpczsKCiAgICAgICAgICAgIGlmICggIWhpZ2hsaWdodCApIHsKICAgICAgICAgICAgICAgIHJldHVybiBpdGVtOwogICAgICAgICAgICB9CgogICAgICAgICAgICBjb25zdCByZWdleCA9IG5ldyBSZWdFeHAoIGAoJHtoaWdobGlnaHQgfSlgLCAnZ2knICk7CgogICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgLi4uaXRlbSwKICAgICAgICAgICAgICAgIG5hbWU6IGl0ZW0ubmFtZS5yZXBsYWNlKCByZWdleCwgJzxtYXJrPiQxPC9tYXJrPicgKQogICAgICAgICAgICB9OwogICAgICAgIH0sCiAgICAgICAgaXNTZWxlY3RlZCggaXRlbSApIHsKICAgICAgICAgICAgcmV0dXJuIGlzRXF1YWwoIGl0ZW0sIHRoaXMuc2VsZWN0ZWQgKTsKICAgICAgICB9CiAgICB9LAp9Owo="},{"version":3,"sources":["SearchCityList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SearchCityList.vue","sourceRoot":"src/core/shared/components/search","sourcesContent":["<template>\n    <div>\n        <v-list-item\n            v-for=\"(city, index) in sortedItems\"\n            :key=\"index\"\n            class=\"gst-search-city-list__item\"\n            :class=\"{ 'selected': isSelected( city ) }\"\n            @click=\"$emit('select', city )\">\n            <slot name=\"icon\"></slot>\n            <v-list-item-title>\n                <!-- eslint-disable-next-line vue/no-v-html -->\n                <div class=\"gst-search-city-list__item-title\" v-html=\"$options.filters.cityHTML( getHTMLCity( city ), { country: true } )\"></div>\n            </v-list-item-title>\n        </v-list-item>\n    </div>\n</template>\n\n<script>\n    import isEqual from 'lodash/isEqual';\n    import { sortCompare as sortCompareUtilsGeneralSort } from '@/core/utils/sortCompareUtils';\n\n    export default {\n        name: 'SeachCityList',\n        props: {\n            items: {\n                type: Array,\n                required: true\n            },\n            highlight: {\n                type: String,\n                required: false,\n                default: ''\n            },\n            selected: {\n                type: Object,\n                default: () => ( {} )\n            }\n        },\n        computed: {\n            sortedItems() {\n                return [ ...this.items ].sort( ( a, b ) => sortCompareUtilsGeneralSort( a.name, b.name, true ) );\n            }\n        },\n        methods: {\n            getHTMLCity( item ) {\n                const { highlight } = this;\n\n                if ( !highlight ) {\n                    return item;\n                }\n\n                const regex = new RegExp( `(${highlight })`, 'gi' );\n\n                return {\n                    ...item,\n                    name: item.name.replace( regex, '<mark>$1</mark>' )\n                };\n            },\n            isSelected( item ) {\n                return isEqual( item, this.selected );\n            }\n        },\n    };\n</script>\n\n<style lang=\"scss\">\n    @import \"@scssVariables\";\n\n    .v-list-item__title {\n        font-size: font-size( 's' );\n    }\n\n    .gst-search-city-list__item-title mark {\n        background-color: transparent;\n        font-weight: font-weight( 'medium' );\n    }\n\n    .gst-search-city-list__item-title span {\n        color: theme-color( 'tertiary' );\n    }\n\n    .gst-search-city-list__item.selected .v-list-item__title,\n    .gst-search-city-list__item.selected span {\n        color: theme-color( 'primary' );\n    }\n</style>\n"]}]}