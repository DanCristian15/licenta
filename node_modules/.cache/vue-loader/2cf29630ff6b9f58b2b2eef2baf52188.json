{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/core/views/search/TheSearch/SearchResultTabsEvents.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/views/search/TheSearch/SearchResultTabsEvents.vue","mtime":1645805364037},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMsIG1hcFN0YXRlLCBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCBpc0VxdWFsIGZyb20gJ2xvZGFzaC9pc0VxdWFsJzsKaW1wb3J0IGVudGl0eUNvbnN0YW50cyBmcm9tICdAY29yZS91dGlscy9jb25zdGFudHMvZW50aXR5JzsKaW1wb3J0IFNlZU1vcmVCdXR0b24gZnJvbSAnQGNvcmUvc2hhcmVkL2NvbXBvbmVudHMvYnV0dG9ucy9TZWVNb3JlQnV0dG9uLnZ1ZSc7CmltcG9ydCBEYXRhTG9hZGluZyBmcm9tICdAY29yZS9zaGFyZWQvY29tcG9uZW50cy9sb2FkaW5nL0RhdGFMb2FkaW5nLnZ1ZSc7CmltcG9ydCBTZWFyY2hSZXN1bHRUYWJzTm9EYXRhIGZyb20gJy4vU2VhcmNoUmVzdWx0VGFic05vRGF0YS52dWUnOwppbXBvcnQgU2VhcmNoUmVzdWx0TWl4aW4gZnJvbSAnLi9TZWFyY2hSZXN1bHRNaXhpbic7CmltcG9ydCB7IFNlYXJjaFJlc3VsdFRhYnNFdmVudHNMaXN0LCBTZWFyY2hSZXN1bHRUYWJzRXZlbnRzRmlsdGVyIH0gZnJvbSAnLi9TZWFyY2hSZXN1bHRUYWJzRXZlbnRzL2luZGV4JzsKCmNvbnN0IFNUT1JFX0VWRU5UUyA9ICdldmVudHMnOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1NlYXJjaFJlc3VsdFRhYnNFdmVudHMnLAogICAgY29tcG9uZW50czogewogICAgICAgIFNlYXJjaFJlc3VsdFRhYnNOb0RhdGEsCiAgICAgICAgU2VlTW9yZUJ1dHRvbiwKICAgICAgICBTZWFyY2hSZXN1bHRUYWJzRXZlbnRzTGlzdCwKICAgICAgICBTZWFyY2hSZXN1bHRUYWJzRXZlbnRzRmlsdGVyLAogICAgICAgIERhdGFMb2FkaW5nCiAgICB9LAogICAgbWl4aW5zOiBbIFNlYXJjaFJlc3VsdE1peGluIF0sCiAgICBpMThuT3B0aW9uczogewogICAgICAgIG5hbWVzcGFjZXM6ICdtYWluJywKICAgICAgICBrZXlQcmVmaXg6ICd2aWV3cy5zZWFyY2gudGhlU2VhcmNoLl9jb21wb25lbnRzLnNlYXJjaFJlc3VsdFRhYnMuZXZlbnRzJwogICAgfSwKICAgIHRlc3RJZE9wdGlvbnM6IHsKICAgICAgICBrZXlQcmVmaXg6ICdzZWFyY2guZXZlbnRzVGFiJwogICAgfSwKICAgIGRhdGEoICkgewogICAgICAgIGNvbnN0IHNvcnRPcHRpb25zID0gWwogICAgICAgICAgICB7IHZhbHVlOiAnZGF0ZScsICdkaXNwbGF5JzogdGhpcy4kdCggJ19jb21tb246dGVybXMuc29ydEJ5RGF0ZScgKSB9LAogICAgICAgICAgICB7IHZhbHVlOiAncHJpY2UnLCAnZGlzcGxheSc6IHRoaXMuJHQoICdfY29tbW9uOnRlcm1zLnNvcnRCeVByaWNlJyApIH0sCiAgICAgICAgICAgIHsgdmFsdWU6ICdhc2MnLCAnZGlzcGxheSc6IHRoaXMuJHQoICdfY29tbW9uOnRlcm1zLnNvcnRBbHBoYWJldGljYWxfYWJ2JyApIH0sCiAgICAgICAgICAgIHsgdmFsdWU6ICdkZXNjJywgJ2Rpc3BsYXknOiB0aGlzLiR0KCAnX2NvbW1vbjp0ZXJtcy5zb3J0QWxwaGFiZXRpY2FsRGVzY19hYnYnICkgfQogICAgICAgIF07CiAgICAgICAgY29uc3QgZGVmYXVsdFNvcnQgPSBzb3J0T3B0aW9ucy5maW5kKCBvcHRpb24gPT4gb3B0aW9uLnZhbHVlID09PSAnZGF0ZScgKTsKCiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgc29ydDogewogICAgICAgICAgICAgICAgdmFsdWU6IGRlZmF1bHRTb3J0LAogICAgICAgICAgICAgICAgb3B0aW9uczogc29ydE9wdGlvbnMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgaXNRdWVyeVNvcnQ6IGZhbHNlLAogICAgICAgIH07CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICAuLi5tYXBTdGF0ZSggewogICAgICAgICAgICBldmVudHM6ICAgICAgICAgICAgICAgICBzdGF0ZSA9PiBzdGF0ZVtTVE9SRV9FVkVOVFNdLmxpc3QsCiAgICAgICAgICAgIGxvYWRpbmc6ICAgICAgICAgICAgICAgIHN0YXRlID0+IHN0YXRlW1NUT1JFX0VWRU5UU10ubG9hZGluZywKICAgICAgICAgICAgdG90YWw6ICAgICAgICAgICAgICAgICAgc3RhdGUgPT4gc3RhdGVbU1RPUkVfRVZFTlRTXS50b3RhbENvdW50LAogICAgICAgICAgICBmaWx0ZXI6ICAgICAgICAgICAgICAgICBzdGF0ZSA9PiBzdGF0ZVtTVE9SRV9FVkVOVFNdLmZpbHRlcgogICAgICAgIH0gKSwKICAgICAgICAuLi5tYXBHZXR0ZXJzKCB7CiAgICAgICAgICAgIGlzQWxsSXRlbXNMb2FkZWQ6ICBgJHsgU1RPUkVfRVZFTlRTIH0vaXNBbGxJdGVtc0xvYWRlZGAsCiAgICAgICAgfSApLAogICAgICAgIG5vRGF0YSggKSB7CiAgICAgICAgICAgIHJldHVybiAhdGhpcy50b3RhbCAmJiAhdGhpcy5ldmVudHMubGVuZ3RoICYmICF0aGlzLmxvYWRpbmc7CiAgICAgICAgfSwKICAgICAgICBlbnRpdHlUeXBlKCApIHsKICAgICAgICAgICAgcmV0dXJuIGVudGl0eUNvbnN0YW50cy5UWVBFUy5FVkVOVDsKICAgICAgICB9LAogICAgICAgIHNob3dMb2FkaW5nKCApIHsKICAgICAgICAgICAgcmV0dXJuICF0aGlzLmV2ZW50cy5sZW5ndGggJiYgdGhpcy5sb2FkaW5nOwogICAgICAgIH0sCiAgICAgICAgaGFzSXRlbXMoICkgewogICAgICAgICAgICByZXR1cm4gISF0aGlzLmV2ZW50cy5sZW5ndGg7CiAgICAgICAgfSwKICAgICAgICBzaG93RmlsdGVyKCApIHsKICAgICAgICAgICAgaWYgKCAhdGhpcy5ub0RhdGEgKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyggdGhpcy5maWx0ZXIgKS5zb21lKCB2YWx1ZSA9PiB2YWx1ZSApOwogICAgICAgIH0KICAgIH0sCiAgICB3YXRjaDogewogICAgICAgICdmaWx0ZXInOiB7CiAgICAgICAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uICggbmV3VmFsdWUsIG9sZFZhbHVlICkgewogICAgICAgICAgICAgICAgaXNFcXVhbCggbmV3VmFsdWUsIG9sZFZhbHVlICkgfHwgdGhpcy5sb2FkRGF0YSggKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGVlcDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgJ3NvcnQudmFsdWUnOiB7CiAgICAgICAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uICggbmV3VmFsdWUsIG9sZFZhbHVlICkgewogICAgICAgICAgICAgICAgaWYgKCBuZXdWYWx1ZSAhPT0gb2xkVmFsdWUgKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCAhdGhpcy5pc1F1ZXJ5U29ydCApIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGFuZ2VSb3V0ZVF1ZXJ5KCB7IHF1ZXJ5UGFyYW1zOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi50aGlzLnNlYXJjaFBhcmFtcywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvcnQ6IHRoaXMuc29ydC52YWx1ZS52YWx1ZQogICAgICAgICAgICAgICAgICAgICAgICB9IH0gKTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2FkRGF0YSgpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB0aGlzLmlzUXVlcnlTb3J0ID0gZmFsc2U7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRlZXA6IHRydWUKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIC4uLm1hcEFjdGlvbnMoIHsKICAgICAgICAgICAgZ2V0OiBgJHsgU1RPUkVfRVZFTlRTIH0vZ2V0YCwKICAgICAgICB9ICksCiAgICAgICAgbG9hZE5leHRQYWdlICggKSB7CiAgICAgICAgICAgIHRoaXMuZ2V0KCB7IHJlZnJlc2g6IGZhbHNlLCBsb2FkTmV4dFBhZ2U6IHRydWUsIHNlYXJjaDogdGhpcy5zZWFyY2hQYXJhbXMsIHVzZXJBbmFseXRpY3M6IHRydWUgfSApOwogICAgICAgIH0sCiAgICAgICAgYXN5bmMgbG9hZERhdGEoICkgewogICAgICAgICAgICBjb25zdCBwYXJhbXMgPSB7CiAgICAgICAgICAgICAgICBvZmZzZXQ6IDAsCiAgICAgICAgICAgICAgICBjb3VudDogdHJ1ZSwKICAgICAgICAgICAgICAgIC4uLnRoaXMuc2VhcmNoUGFyYW1zLAogICAgICAgICAgICAgICAgc29ydDogdGhpcy5zb3J0LnZhbHVlLnZhbHVlLAogICAgICAgICAgICB9OwoKICAgICAgICAgICAgYXdhaXQgdGhpcy5nZXQoIHsgcmVmcmVzaDogdHJ1ZSwgc2VhcmNoIDogcGFyYW1zLCB1c2VyQW5hbHl0aWNzOiB0cnVlLCBmaXJzdExvYWQ6IGZhbHNlIH0gKTsKICAgICAgICB9LAogICAgICAgIGFzeW5jIG9uSW5wdXRGaWx0ZXJEbyggdmFsdWUgKSB7CiAgICAgICAgICAgIGNvbnN0IG5ld0ZpbHRlciA9IHsgLi4udGhpcy5maWx0ZXIsIC4uLnZhbHVlIH07CiAgICAgICAgICAgIGF3YWl0IHRoaXMuY2hhbmdlUm91dGVRdWVyeSggeyBxdWVyeVBhcmFtczogbmV3RmlsdGVyIH0gKTsKICAgICAgICAgICAgdGhpcy51cGRhdGVGaWx0ZXIoIHsgZmlsdGVyOiBuZXdGaWx0ZXIsIGVudGl0eVR5cGU6IHRoaXMuZW50aXR5VHlwZSB9ICk7CiAgICAgICAgfSwKICAgICAgICB1cGRhdGVRdWVyeVNvcnQoKSB7CiAgICAgICAgICAgIGlmICggdGhpcy4kcm91dGUucXVlcnkuc29ydCApIHsKICAgICAgICAgICAgICAgIHRoaXMuaXNRdWVyeVNvcnQgPSB0cnVlOwogICAgICAgICAgICAgICAgY29uc3Qgc29ydCA9IHRoaXMuc29ydC5vcHRpb25zLmZpbmQoIG9wdGlvbiA9PiBvcHRpb24udmFsdWUgPT09IHRoaXMuJHJvdXRlLnF1ZXJ5LnNvcnQudG9Mb3dlckNhc2UoKSApOwogICAgICAgICAgICAgICAgaWYgKCB0aGlzLnNvcnQgJiYgdGhpcy5zb3J0LnZhbHVlICkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuc29ydC52YWx1ZSA9IHNvcnQ7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCggKSB7CiAgICAgICAgdGhpcy51cGRhdGVGaWx0ZXIoIHsgZmlsdGVyOiB0aGlzLmZpbHRlclNlYXJjaFBhcmFtcywgZW50aXR5VHlwZTogdGhpcy5lbnRpdHlUeXBlIH0gKTsKICAgICAgICB0aGlzLnVwZGF0ZVF1ZXJ5U29ydCgpOwogICAgfQp9Owo="},{"version":3,"sources":["SearchResultTabsEvents.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SearchResultTabsEvents.vue","sourceRoot":"src/core/views/search/TheSearch","sourcesContent":["<template>\n    <div class=\"gst-tabs__attractions gst-tabs-content-narrow\">\n        <SearchResultTabsEventsFilter\n            v-if=\"showFilter\"\n            class=\"my-4\"\n            :sort=\"sort\"\n            @input=\"onInputFilterDo\" />\n        <div v-if=\"!noData\">\n            <DataLoading v-if=\"showLoading\" class=\"mt-5 mb-5 pt-5 pb-5\" />\n            <template v-else-if=\"hasItems\">\n                <SearchResultTabsEventsList :items=\"events\" />\n                <SeeMoreButton\n                    v-if=\"!isAllItemsLoaded\"\n                    :data-test-id=\"$testId('buttons.seeMore')\"\n                    class=\"mx-auto d-flex mt-4\"\n                    :loading=\"loading\"\n                    @click=\"loadNextPage()\" />\n            </template>\n        </div>\n        <SearchResultTabsNoData\n            v-else\n            class=\"mt-6\"\n            :title=\"$t('messages.noData.title')\"\n            :content=\"$t('messages.noData.content')\"\n            :type=\"entityType\" />\n    </div>\n</template>\n<script>\n    import { mapActions, mapState, mapGetters } from 'vuex';\n    import isEqual from 'lodash/isEqual';\n    import entityConstants from '@core/utils/constants/entity';\n    import SeeMoreButton from '@core/shared/components/buttons/SeeMoreButton.vue';\n    import DataLoading from '@core/shared/components/loading/DataLoading.vue';\n    import SearchResultTabsNoData from './SearchResultTabsNoData.vue';\n    import SearchResultMixin from './SearchResultMixin';\n    import { SearchResultTabsEventsList, SearchResultTabsEventsFilter } from './SearchResultTabsEvents/index';\n\n    const STORE_EVENTS = 'events';\n\n    export default {\n        name: 'SearchResultTabsEvents',\n        components: {\n            SearchResultTabsNoData,\n            SeeMoreButton,\n            SearchResultTabsEventsList,\n            SearchResultTabsEventsFilter,\n            DataLoading\n        },\n        mixins: [ SearchResultMixin ],\n        i18nOptions: {\n            namespaces: 'main',\n            keyPrefix: 'views.search.theSearch._components.searchResultTabs.events'\n        },\n        testIdOptions: {\n            keyPrefix: 'search.eventsTab'\n        },\n        data( ) {\n            const sortOptions = [\n                { value: 'date', 'display': this.$t( '_common:terms.sortByDate' ) },\n                { value: 'price', 'display': this.$t( '_common:terms.sortByPrice' ) },\n                { value: 'asc', 'display': this.$t( '_common:terms.sortAlphabetical_abv' ) },\n                { value: 'desc', 'display': this.$t( '_common:terms.sortAlphabeticalDesc_abv' ) }\n            ];\n            const defaultSort = sortOptions.find( option => option.value === 'date' );\n\n            return {\n                sort: {\n                    value: defaultSort,\n                    options: sortOptions\n                },\n                isQuerySort: false,\n            };\n        },\n        computed: {\n            ...mapState( {\n                events:                 state => state[STORE_EVENTS].list,\n                loading:                state => state[STORE_EVENTS].loading,\n                total:                  state => state[STORE_EVENTS].totalCount,\n                filter:                 state => state[STORE_EVENTS].filter\n            } ),\n            ...mapGetters( {\n                isAllItemsLoaded:  `${ STORE_EVENTS }/isAllItemsLoaded`,\n            } ),\n            noData( ) {\n                return !this.total && !this.events.length && !this.loading;\n            },\n            entityType( ) {\n                return entityConstants.TYPES.EVENT;\n            },\n            showLoading( ) {\n                return !this.events.length && this.loading;\n            },\n            hasItems( ) {\n                return !!this.events.length;\n            },\n            showFilter( ) {\n                if ( !this.noData ) {\n                    return true;\n                }\n                return Object.values( this.filter ).some( value => value );\n            }\n        },\n        watch: {\n            'filter': {\n                handler: function ( newValue, oldValue ) {\n                    isEqual( newValue, oldValue ) || this.loadData( );\n                },\n                deep: true\n            },\n            'sort.value': {\n                handler: function ( newValue, oldValue ) {\n                    if ( newValue !== oldValue ) {\n                        if ( !this.isQuerySort ) {\n                            this.changeRouteQuery( { queryParams: {\n                                ...this.searchParams,\n                                sort: this.sort.value.value\n                            } } );\n                            this.loadData();\n                        }\n                        this.isQuerySort = false;\n                    }\n                },\n                deep: true\n            }\n        },\n        methods: {\n            ...mapActions( {\n                get: `${ STORE_EVENTS }/get`,\n            } ),\n            loadNextPage ( ) {\n                this.get( { refresh: false, loadNextPage: true, search: this.searchParams, userAnalytics: true } );\n            },\n            async loadData( ) {\n                const params = {\n                    offset: 0,\n                    count: true,\n                    ...this.searchParams,\n                    sort: this.sort.value.value,\n                };\n\n                await this.get( { refresh: true, search : params, userAnalytics: true, firstLoad: false } );\n            },\n            async onInputFilterDo( value ) {\n                const newFilter = { ...this.filter, ...value };\n                await this.changeRouteQuery( { queryParams: newFilter } );\n                this.updateFilter( { filter: newFilter, entityType: this.entityType } );\n            },\n            updateQuerySort() {\n                if ( this.$route.query.sort ) {\n                    this.isQuerySort = true;\n                    const sort = this.sort.options.find( option => option.value === this.$route.query.sort.toLowerCase() );\n                    if ( this.sort && this.sort.value ) {\n                        this.sort.value = sort;\n                    }\n                }\n            }\n        },\n        mounted( ) {\n            this.updateFilter( { filter: this.filterSearchParams, entityType: this.entityType } );\n            this.updateQuerySort();\n        }\n    };\n</script>\n"]}]}