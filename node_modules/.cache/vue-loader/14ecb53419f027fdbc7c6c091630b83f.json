{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/views/event/TheEvent/EventNotAvailable/EventStateOnSaleDateFutureWarning.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/views/event/TheEvent/EventNotAvailable/EventStateOnSaleDateFutureWarning.vue","mtime":1645805365990},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/css-loader/dist/cjs.js","mtime":1637061260154},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1637061260528},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/postcss-loader/src/index.js","mtime":1637061260465},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/sass-loader/dist/cjs.js","mtime":1637061279772},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiRjb2xvckNhcmQ6ICMyMTk5QTA7CgouZ3N0LWV2ZW50LXN0YXRlLW9uLXNhbGUtZGF0ZS1mdXR1cmUtd2FybmluZy1jYXJkLmdzdC1ub3RpZmljYXRpb24td2FybmluZy1jYXJkIHsKICAgIGJvcmRlci1sZWZ0OiA0cHggc29saWQgJGNvbG9yQ2FyZDsKCiAgICBzdmcgLmdzdC1zdmctaWNvbiB7CiAgICAgICAgZmlsbDogJGNvbG9yQ2FyZDsKICAgIH0KfQo="},{"version":3,"sources":["EventStateOnSaleDateFutureWarning.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"EventStateOnSaleDateFutureWarning.vue","sourceRoot":"src/tenants/ticketmaster/app/views/event/TheEvent/EventNotAvailable","sourcesContent":["<template>\n    <div>\n        <h5 class=\"gst-event-not-available__title\">\n            {{ $t( 'title' ) }}\n        </h5>\n        <div class=\"gst-event-not-available__content\">\n            <p>{{ message }}</p>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {\n        isSameDay as dateUtilsIsSameDay,\n        differenceInSeconds as dateUtilsDifferenceInSeconds\n    } from '@core/utils/dateUtils';\n\n    export default {\n        name: 'EventStateOnSaleDateFutureWarningCard',\n        i18nOptions: {\n            namespaces: '_common',\n            keyPrefix: 'messages.eventState.onSaleDateFuture'\n        },\n        props: {\n            event: {\n                type: Object,\n                default: null\n            }\n        },\n        computed: {\n            message( ) {\n                const { onSaleStartDateTimeAt } = this.event;\n                const now = new Date( );\n\n                if ( !dateUtilsIsSameDay( now, onSaleStartDateTimeAt ) ) {\n                    return this.$t( 'messageWithDate', { \n                        date: this.$options.filters.date( onSaleStartDateTimeAt, 'MMM dd, yyyy HH:mm:ss' ) \n                    } );\n                }\n\n                return this.$t( 'messageWithTime', { \n                    time:  this.$options.filters.date( \n                        new Date( 0, 0, 0, 0, 0, dateUtilsDifferenceInSeconds( onSaleStartDateTimeAt, now ) ),\n                        'HH:mm:ss'\n                    )\n                } );\n            }\n        }\n    };\n</script>\n\n<style lang=\"scss\">\n    $colorCard: #2199A0;\n\n    .gst-event-state-on-sale-date-future-warning-card.gst-notification-warning-card {\n        border-left: 4px solid $colorCard;\n\n        svg .gst-svg-icon {\n            fill: $colorCard;\n        }\n    }\n</style>"]}]}