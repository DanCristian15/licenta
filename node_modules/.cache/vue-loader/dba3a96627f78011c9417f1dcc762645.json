{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/bonusPoints/BonusPointsChip.vue?vue&type=style&index=0&id=2088dc9b&lang=scss&scoped=true&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/bonusPoints/BonusPointsChip.vue","mtime":1645805363940},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/css-loader/dist/cjs.js","mtime":1637061260154},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1637061260528},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/postcss-loader/src/index.js","mtime":1637061260465},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/sass-loader/dist/cjs.js","mtime":1637061279772},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiQHNjc3NWYXJpYWJsZXMiOwoKLmdzdC1icC1jaGlwIHsKICAgIGRpc3BsYXk6IGlubGluZS1mbGV4OwogICAgcGFkZGluZy10b3A6IDJweDsKICAgIHBhZGRpbmctYm90dG9tOiAycHg7CiAgICBiYWNrZ3JvdW5kOiB0aGVtZS1jb2xvciggJ2JvbnVzLXBvaW50cy1jaGlwLWJnLWNvbG9yJyApOwogICAgY29sb3I6IHRoZW1lLWNvbG9yKCAnYm9udXMtcG9pbnRzLWNoaXAtY29sb3InICk7CiAgICBmb250LXNpemU6IGZvbnQtc2l6ZSggJ3h4eHMnICk7CiAgICBmb250LXdlaWdodDogZm9udC13ZWlnaHQoICdibGFjaycgKTsKICAgIG1pbi1oZWlnaHQ6IDIwcHg7CiAgICBib3JkZXItcmFkaXVzOiAxNnB4OwogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsKCiAgICBwIHsKICAgICAgICBsaW5lLWhlaWdodDogMTJweDsKICAgICAgICBwYWRkaW5nOiAwIDEycHg7CiAgICAgICAgbWFyZ2luLXRvcDogYXV0bzsKICAgICAgICBtYXJnaW4tYm90dG9tOiBhdXRvOwogICAgICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207CiAgICB9Cn0K"},{"version":3,"sources":["BonusPointsChip.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BonusPointsChip.vue","sourceRoot":"src/core/shared/components/bonusPoints","sourcesContent":["<template>\n    <component\n        :is=\"tag\"\n        v-if=\"isLoyaltyTypeAllowEarn\"\n        class=\"gst-bp-chip\">\n        <!-- eslint-disable-next-line vue/no-v-html  -->\n        <p v-html=\"contentHTML\"></p>\n    </component>\n</template>\n<script>\n    import { mapGetters } from 'vuex';\n    import { getSymbol as currencyUtilsGetSymbol } from '@core/utils/currencyUtils';\n\n    export default {\n        name: 'BonusPointsChip',\n        i18nOptions: {\n            namespaces: 'shared',\n            keyPrefix: 'components.bonusPoints.bonusPointsChip',\n        },\n        props: {\n            points: {\n                type: Number,\n                required: true,\n                default: 0\n            },\n            currency: {\n                type: String,\n                required: true,\n                default: ''\n            },\n            isLoyaltyCurrencyTypeMoney: {\n                type: Boolean,\n                default: false\n            },\n            content: {\n                type: String,\n                default: ''\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            }\n        },\n        computed: {\n            ...mapGetters ( 'appTenant', {\n                'isLoyaltyTypeAllowEarn': 'isLoyaltyTypeAllowEarn'\n            } ),\n            contentHTML( ) {\n                const { content } = this;\n                if ( content ) {\n                    return content;\n                }\n\n                return this.$t( \n                    this.isLoyaltyCurrencyTypeMoney ? 'titleMoney' : 'title', \n                    { \n                        count: this.points, \n                        points: this.pointsFormated, \n                        currencySymbol: currencyUtilsGetSymbol( this.currency ),\n                        interpolation: { escapeValue: false },\n                        context: `${this.points}`\n                    } \n                );\n            },\n            pointsFormated( ) {\n                if ( this.isLoyaltyCurrencyTypeMoney ) {\n                    return this.$options.filters.currencyFull( this.points, this.currency );\n                }\n\n                return this.$options.filters.bonusPoints( this.points );\n            }\n        }\n    };\n</script>\n<style lang=\"scss\" scoped>\n@import \"@scssVariables\";\n\n.gst-bp-chip {\n    display: inline-flex;\n    padding-top: 2px;\n    padding-bottom: 2px;\n    background: theme-color( 'bonus-points-chip-bg-color' );\n    color: theme-color( 'bonus-points-chip-color' );\n    font-size: font-size( 'xxxs' );\n    font-weight: font-weight( 'black' );\n    min-height: 20px;\n    border-radius: 16px;\n    text-align: center;\n    text-transform: uppercase;\n\n    p {\n        line-height: 12px;\n        padding: 0 12px;\n        margin-top: auto;\n        margin-bottom: auto;\n        vertical-align: bottom;\n    }\n}\n</style>\n"]}]}