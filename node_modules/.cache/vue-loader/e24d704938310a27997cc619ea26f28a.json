{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/images/ImageMagnifier.vue?vue&type=style&index=0&id=4e4e8014&lang=scss&scoped=true&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/images/ImageMagnifier.vue","mtime":1645805363955},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/css-loader/dist/cjs.js","mtime":1637061260154},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1637061260528},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/postcss-loader/src/index.js","mtime":1637061260465},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/sass-loader/dist/cjs.js","mtime":1637061279772},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIkBzY3NzVmFyaWFibGVzIjsKQGltcG9ydCAiQHNjc3NNaXhpbnMiOwoKLmdzdC1pbWFnZS1tYWduaWZpZXIgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgdG9wOiAwOwogICAgbGVmdDogMDsKICAgIGhlaWdodDogMTAwJTsKICAgIHdpZHRoOiAxMDAlOwoKICAgIC5nc3QtaW1hZ2UtbWFnbmlmaWVyX19jb250YWluZXIgewogICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgICAgICBjdXJzb3I6IGNyb3NzaGFpcjsKICAgICAgICBtYXgtd2lkdGg6IDEwMCU7CgogICAgICAgIC5nc3QtaW1hZ2UtbWFnbmlmaWVyX19jb250YWluZXItaW1hZ2UgewogICAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgICAgb3BhY2l0eTogMDsKICAgICAgICAgICAgbWF4LWhlaWdodDogMTAwJTsKICAgICAgICAgICAgb2JqZWN0LWZpdDogY29udGFpbjsKICAgICAgICAgICAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7CiAgICAgICAgfQoKICAgICAgICAuZ3N0LWltYWdlLW1hZ25pZmllcl9fY29udGFpbmVyLWdsYXNzIHsKICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICAgICAgICBib3JkZXI6IDVweCBzb2xpZCB0aGVtZS1jb2xvciggJ3ByaW1hcnknICk7CiAgICAgICAgICAgIGJhY2tncm91bmQ6IHRoZW1lLWNvbG9yKCAnd2hpdGUnICkgbm8tcmVwZWF0OwogICAgICAgICAgICBvcGFjaXR5OiAwOwogICAgICAgICAgICBib3JkZXItcmFkaXVzOiBib3JkZXItcmFkaXVzKCAnY2lyY2xlJyApOwogICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTsKICAgICAgICAgICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDQwcHggMnB4IHJnYmEoIHRoZW1lLWNvbG9yLWhleCggJ2JsYWNrJyApLCAwLjI1ICk7CiAgICAgICAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4xNXMgZWFzZS1pbjsKICAgICAgICB9CiAgICB9Cn0KCi5nc3QtaW1hZ2UtbWFnbmlmaWVyIC5nc3QtaW1hZ2UtbWFnbmlmaWVyX19jb250YWluZXI6aG92ZXIgewogICAgLmdzdC1pbWFnZS1tYWduaWZpZXJfX2NvbnRhaW5lci1nbGFzcyB7CiAgICAgICAgb3BhY2l0eTogMTsKICAgIH0KfQo="},{"version":3,"sources":["ImageMagnifier.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6JA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ImageMagnifier.vue","sourceRoot":"src/core/shared/components/images","sourcesContent":["<template>\n    <div\n        ref=\"magnifier\"\n        v-resize=\"calcContainerSize\"\n        class=\"gst-image-magnifier d-flex justify-center align-center u-height-100\">\n        <div\n            class=\"gst-image-magnifier__container d-flex align-center\"\n            :class=\"{\n                'u-width-100': hasMagnifierBiggerSizeThanImage && $vuetify.breakpoint.lgOnly\n            }\"\n            :style=\"containerStyle\"\n            @mousemove=\"onMouseMoveDo\">\n            <img\n                ref=\"image\"\n                class=\"gst-image-magnifier__container-image\"\n                :class=\"{\n                    'u-height-100': $vuetify.breakpoint.xlOnly\n                }\"\n                :src=\"src\" />\n            <span\n                class=\"gst-image-magnifier__container-glass\"\n                :style=\"glassStyle\"></span>\n        </div>\n    </div>\n</template>\n\n<script>\n    import debounce from 'lodash/debounce';\n\n    export default {\n        name: 'ImageMagnifier',\n        props: {\n            src: {\n                type: String,\n                default: null\n            },\n            glassWidth: {\n                type: Number,\n                default: 150\n            },\n            glassHeight: {\n                type: Number,\n                default: 150\n            },\n            zoom: {\n                type: String,\n                default: '200%'\n            }\n        },\n        data() {\n            return {\n                imageBounds: null,\n                cursorX: 0,\n                cursorY: 0,\n                containerHeight: '100%',\n                hasMagnifierBiggerSizeThanImage:  false\n            };\n        },\n        computed: {\n            glassStyle( ) {\n                return {\n                    backgroundImage: `url(${this.src})`,\n                    backgroundPosition: this.backgroundPosition,\n                    backgroundSize: this.backgroundSize,\n                    left: `${this.cursorX}px`,\n                    top: `${this.cursorY}px`,\n                    width: `${this.glassWidth}px`,\n                    height: `${this.glassHeight}px`,\n                    transform: `translate( ${this.translateValue}px, ${this.translateValue}px )`\n                };\n            },\n            containerStyle( ) {\n                return {\n                    height: `${this.containerHeight}`\n                };\n            },\n            zoomRatio( ) {\n                return parseInt( this.zoom ) / 100;\n            },\n            backgroundPosition( ) {\n                const posX = -1 * ( ( this.cursorX * this.zoomRatio ) - ( this.glassWidth / 2 ) + 3 );\n                const posY = -1 * ( ( this.cursorY * this.zoomRatio ) - ( this.glassHeight / 2 ) + 3 );\n\n                return `${posX}px ${posY}px`;\n            },\n            backgroundSize( ) {\n                if ( this.imageBounds ) {\n                    const sizeWidth = ( this.imageBounds.width * this.zoomRatio );\n                    const sizeHeight = ( this.imageBounds.height * this.zoomRatio );\n\n                    return `${sizeWidth}px ${sizeHeight}px`;\n                }\n                return '0 0';\n            },\n            translateValue( ) {\n                return ( -1 * this.glassWidth / 2 );\n            }\n        },\n        methods: {\n            getCursorPosition( e ) {\n                e = e || window.event;\n                this.cursorX = this.imageBounds ? e.pageX - this.imageBounds.left : this.cursorX;\n                this.cursorY = this.imageBounds ? e.pageY - this.imageBounds.top : this.cursorY;\n                this.cursorX = this.cursorX - window.pageXOffset;\n                this.cursorY = this.cursorY - window.pageYOffset;\n\n            },\n            getImageBounds( ) {\n                if ( this.$refs.image ) {\n                    let imgElement = this.$refs.image;\n                    this.imageBounds = imgElement.getBoundingClientRect();\n                }\n            },\n            onMouseMoveDo( e ) {\n                e.preventDefault();\n                this.getImageBounds();\n                this.getCursorPosition( e );\n\n                if ( this.imageBounds ) {\n                    if ( this.cursorX > this.imageBounds.width - ( ( this.glassWidth / 2 ) / this.zoomRatio ) ) {\n                        this.cursorX = this.imageBounds.width - ( ( this.glassWidth / 2 ) / this.zoomRatio );\n                    }\n                    if ( this.cursorX < ( this.glassWidth / 2 ) / this.zoomRatio ) {\n                        this.cursorX = ( this.glassWidth / 2 ) / this.zoomRatio;\n                    }\n                    if ( this.cursorY > this.imageBounds.height - ( ( this.glassHeight / 2 ) / this.zoomRatio ) ) {\n                        this.cursorY = this.imageBounds.height - ( ( this.glassHeight / 2 ) / this.zoomRatio );\n                    }\n                    if ( this.cursorY < ( this.glassHeight / 2 ) / this.zoomRatio ) {\n                        this.cursorY = ( this.glassHeight / 2 ) / this.zoomRatio;\n                    }\n                }\n            },\n            calcContainerSize: debounce( function( ) {\n                this.containerHeight = '100%';\n                setTimeout( ( ) => {\n                    if ( this.$refs.magnifier && this.$refs.image ) {\n                        const magnifierBounds = this.$refs.magnifier.getBoundingClientRect();\n                        this.hasMagnifierBiggerSizeThanImage = magnifierBounds.width > this.$refs.image.naturalWidth && magnifierBounds.height > this.$refs.image.naturalHeight;\n\n                        if ( this.hasMagnifierBiggerSizeThanImage && this.$vuetify.breakpoint.xlOnly ) {\n                            this.containerHeight = `${magnifierBounds.height}px`;\n                        }\n                        this.containerHeight = `${this.$refs.image.height}px`;\n                    }\n                }, 50 );\n            }, 250 )\n        },\n        mounted( ) {\n            this.getCursorPosition();\n            this.calcContainerSize();\n        }\n    };\n</script>\n\n\n<style lang=\"scss\" scoped>\n@import \"@scssVariables\";\n@import \"@scssMixins\";\n\n.gst-image-magnifier {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n\n    .gst-image-magnifier__container {\n        position: relative;\n        cursor: crosshair;\n        max-width: 100%;\n\n        .gst-image-magnifier__container-image {\n            width: 100%;\n            opacity: 0;\n            max-height: 100%;\n            object-fit: contain;\n            object-position: center;\n        }\n\n        .gst-image-magnifier__container-glass {\n            position: absolute;\n            border: 5px solid theme-color( 'primary' );\n            background: theme-color( 'white' ) no-repeat;\n            opacity: 0;\n            border-radius: border-radius( 'circle' );\n            pointer-events: none;\n            box-shadow: inset 0 0 40px 2px rgba( theme-color-hex( 'black' ), 0.25 );\n            transition: opacity 0.15s ease-in;\n        }\n    }\n}\n\n.gst-image-magnifier .gst-image-magnifier__container:hover {\n    .gst-image-magnifier__container-glass {\n        opacity: 1;\n    }\n}\n</style>"]}]}