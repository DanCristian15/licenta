{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/static/TermsAgreement/TermsAgreement_en.vue?vue&type=template&id=4f58c3c3&","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/static/TermsAgreement/TermsAgreement_en.vue","mtime":1645805363987},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1637061260528},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9ImNvbnRlbnQtbWF4LXdpZHRoIj4KICAgIDxoNSBjbGFzcz0ibWItMiI+CiAgICAgICAgQWdyZWVtZW50IGJldHdlZW4gVXNlciBhbmQgTGlmZXN0eWxlCiAgICA8L2g1PgogICAgPGg2IGNsYXNzPSJ0ZXJ0aWFyeS0tdGV4dCBtYi0yIj4KICAgICAgICBMYXN0IHVwZGF0ZWQgb24gTWFyY2ggMTYsIDIwMjAKICAgIDwvaDY+CiAgICA8cD4KICAgICAgICBXZWxjb21lISBUaGUgZm9sbG93aW5nIGFyZSB0aGUgdGVybXMgb2YgdXNlICgiVGVybXMiKSB0aGF0IGdvdmVybiB5b3VyIHVzZSBvZiBMaXZlIE5hdGlvbiBhbmQKICAgICAgICBUaWNrZXRtYXN0ZXIncyBzaXRlcyBhbmQgbW9iaWxlIGFwcGxpY2F0aW9ucyAtIGluY2x1ZGluZyBidXQgbm90IGxpbWl0ZWQgdG8gd3d3LmxpdmVuYXRpb24uY29tLAogICAgICAgIHd3dy50aWNrZXRtYXN0ZXIuY29tLCB3d3cudGlja2V0c25vdy5jb20sIGFuZCB3d3cudGlja2V0ZXhjaGFuZ2VieXRpY2tldG1hc3Rlci5jb20KICAgICAgICAtIChjb2xsZWN0aXZlbHksIHRoZSAiU2l0ZSIpLCBhbmQgeW91ciBwdXJjaGFzZSwgcG9zc2Vzc2lvbiwgb3IgdXNlIG9mIGFueSBMaXZlIE5hdGlvbiBvciBUaWNrZXRtYXN0ZXIgdGlja2V0cywKICAgICAgICBwcm9kdWN0cywgb3Igc2VydmljZXMuCiAgICA8L3A+CiAgICA8cD4KICAgICAgICBPdXIgUHJpdmFjeSBQb2xpY3ksIFB1cmNoYXNlIFBvbGljeSwgYW5kIGFueSBvdGhlciBwb2xpY2llcywgcnVsZXMgb3IgZ3VpZGVsaW5lcyB0aGF0IG1heSBiZQogICAgICAgIGFwcGxpY2FibGUgdG8gcGFydGljdWxhciBvZmZlcnMgb3IgZmVhdHVyZXMgb24gdGhlCiAgICAgICAgU2l0ZSBhcmUgYWxzbyBpbmNvcnBvcmF0ZWQgaW50byB0aGVzZSBUZXJtcy4KICAgICAgICBCeSB2aXNpdGluZyBvciB1c2luZyB0aGUgU2l0ZSwgeW91IGV4cHJlc3NseSBhZ3JlZSB0byB0aGVzZSBUZXJtcywgYXMgdXBkYXRlZCBmcm9tIHRpbWUgdG8gdGltZS4KICAgIDwvcD4KICAgIDxoNiBjbGFzcz0ibWItMiI+CiAgICAgICAgTk9USUNFIFJFR0FSRElORyBGVVRVUkUgQ0hBTkdFUyBUTyBURVJNUzoKICAgIDwvaDY+CiAgICA8cD4KICAgICAgICBXZSBtYXkgbWFrZSBjaGFuZ2VzIHRvIHRoZXNlIFRlcm1zIGF0IGFueSB0aW1lLgogICAgICAgIEFueSBjaGFuZ2VzIHdlIG1ha2Ugd2lsbCBiZSBlZmZlY3RpdmUgaW1tZWRpYXRlbHkgd2hlbiB3ZSBwb3N0IGEgcmV2aXNlZAogICAgICAgIHZlcnNpb24gb2YgdGhlc2UgVGVybXMgb24gdGhlIFNpdGUuCiAgICAgICAgVGhlICJMYXN0IFVwZGF0ZWQiIGRhdGUgYWJvdmUgd2lsbCB0ZWxsIHlvdSB3aGVuIHRoZXNlIFRlcm1zIHdlcmUgbGFzdCByZXZpc2VkLgogICAgICAgIEJ5IGNvbnRpbnVpbmcgdG8gdXNlIHRoaXMgU2l0ZSBhZnRlciB0aGF0IGRhdGUsIHlvdSBhZ3JlZSB0byB0aGUgY2hhbmdlcy4KICAgIDwvcD4KICAgIDxoNiBjbGFzcz0ibWItMiI+CiAgICAgICAgTk9USUNFIFJFR0FSRElORyBBUkJJVFJBVElPTiBBTkQgQ0xBU1MgQUNUSU9OIFdBSVZFUjoKICAgIDwvaDY+CiAgICA8cD4KICAgICAgICBUaGVzZSBUZXJtcyBjb250YWluIGFuIGFyYml0cmF0aW9uIGFncmVlbWVudCBhbmQgY2xhc3MgYWN0aW9uIHdhaXZlciwKICAgICAgICB3aGVyZWJ5IHlvdSBhZ3JlZSB0aGF0IGFueSBkaXNwdXRlIG9yIGNsYWltIHJlbGF0aW5nIGluIGFueSB3YXkgdG8geW91ciB1c2Ugb2YKICAgICAgICB0aGUgU2l0ZSwgb3IgdG8gcHJvZHVjdHMgb3Igc2VydmljZXMgc29sZCwgZGlzdHJpYnV0ZWQsIGlzc3VlZCwgb3Igc2VydmljZWQgYnkgdXMgb3IKICAgICAgICB0aHJvdWdoIHVzLCB3aWxsIGJlIHJlc29sdmVkIGJ5IGJpbmRpbmcsIGluZGl2aWR1YWwgYXJiaXRyYXRpb24sIHJhdGhlciB0aGFuIGluCiAgICAgICAgY291cnQsIGFuZCB5b3Ugd2FpdmUgeW91ciByaWdodCB0byBwYXJ0aWNpcGF0ZSBpbiBhCiAgICAgICAgY2xhc3MgYWN0aW9uIGxhd3N1aXQgb3IgY2xhc3Mtd2lkZSBhcmJpdHJhdGlvbi4gV2UgZXhwbGFpbiB0aGlzIGFncmVlbWVudCBhbmQKICAgICAgICB3YWl2ZXIsIGFsb25nIHdpdGggc29tZSBsaW1pdGVkIGV4Y2VwdGlvbnMsIGluIFNlY3Rpb24gMTcsIGJlbG93LgogICAgPC9wPgogICAgPHA+CiAgICAgICAgUGxlYXNlIG5vdGUgdGhhdCB3aGlsZSBzb21lIG9mIHRoZSBldmVudHMgbGlzdGVkIG9uIHRoZSBTaXRlIG1heSBhcHBlYWwKICAgICAgICB0byBjaGlsZHJlbiwgdGhlIFNpdGUgaXMgbm90IHRhcmdldGVkIGF0CiAgICAgICAgY2hpbGRyZW4gdW5kZXIgdGhlIGFnZSBvZiAxMywgYW5kIHRoZXkgYXJlIG5vdCBwZXJtaXR0ZWQgdG8gdXNlIHRoZSBTaXRlLgogICAgICAgIFdlIHN0cm9uZ2x5IGVuY291cmFnZSBhbGwgcGFyZW50cyBhbmQgZ3VhcmRpYW5zIHRvIG1vbml0b3IgdGhlIEludGVybmV0IHVzZQogICAgICAgIGJ5IHRoZWlyIGNoaWxkcmVuLiBJZiB5b3UgdXNlIHRoZSBTaXRlLCB5b3UgYWZmaXJtIHlvdSBhcmUgYXQgbGVhc3QgMTMgeWVhcnMgb2xkLgogICAgPC9wPgogICAgPGg2IGNsYXNzPSJtYi0yIj4KICAgICAgICAxLiBBY2NvdW50IFJlZ2lzdHJhdGlvbgogICAgPC9oNj4KICAgIDxwPgogICAgICAgIFlvdSBtYXkgYnJvd3NlIHRoZSBTaXRlIHdpdGhvdXQgcmVnaXN0ZXJpbmcgZm9yIGFuIGFjY291bnQuCiAgICAgICAgWW91IHdpbGwgYmUgcmVxdWlyZWQgdG8gcmVnaXN0ZXIgZm9yIGFuIGFjY291bnQgdG8gdXNlIGNlcnRhaW4gZmVhdHVyZXMgb2YgdGhlCiAgICAgICAgU2l0ZSwgc3VjaCBhcyByZXNlcnZpbmcgb3IgcHVyY2hhc2luZyBhIHRpY2tldC4gWW91ciBhY2NvdW50IHVzZXJuYW1lIG1heQogICAgICAgIG5vdCBpbmNsdWRlIHRoZSBuYW1lIG9mIGFub3RoZXIgcGVyc29uIHdpdGggdGhlIGludGVudCB0byBpbXBlcnNvbmF0ZSB0aGF0CiAgICAgICAgcGVyc29uLCBvciBiZSBvZmZlbnNpdmUsIHZ1bGdhciBvciBvYnNjZW5lLiBZb3VyIGFjY291bnQgdXNlcm5hbWUgYW5kCiAgICAgICAgcGFzc3dvcmQgYXJlIHBlcnNvbmFsIHRvIHlvdS4gWW91IHdpbGwgYmUgcmVzcG9uc2libGUgZm9yIHRoZSBjb25maWRlbnRpYWxpdHkKICAgICAgICBhbmQgdXNlIG9mIHlvdXIgdXNlcm5hbWUgYW5kIHBhc3N3b3JkLCBhbmQgZm9yIGFsbCBhY3Rpdml0aWVzCiAgICAgICAgKGluY2x1ZGluZyBwdXJjaGFzZXMpIHRoYXQgYXJlIGNvbmR1Y3RlZCB0aHJvdWdoIHlvdXIgYWNjb3VudC4KICAgICAgICBZb3UgbWF5IG5vdCB0cmFuc2ZlciBvciBzZWxsIGFjY2VzcyB0byB5b3VyIGFjY291bnQuIFdlIHdpbGwgbm90IGJlIGxpYWJsZSBmb3IgYW55CiAgICAgICAgaGFybSByZWxhdGVkIHRvIGRpc2Nsb3N1cmUgb2YgeW91ciB1c2VybmFtZSBvciBwYXNzd29yZCBvciB0aGUgdXNlIGJ5IGFueW9uZQogICAgICAgIGVsc2Ugb2YgeW91ciB1c2VybmFtZSBvciBwYXNzd29yZC4gWW91IG1heSBub3QgdXNlIGFub3RoZXIgdXNlcidzIGFjY291bnQKICAgICAgICB3aXRob3V0IHRoYXQgdXNlcidzIHBlcm1pc3Npb24uIFlvdSB3aWxsIGltbWVkaWF0ZWx5IG5vdGlmeSB1cyBpbiB3cml0aW5nIGlmIHlvdQogICAgICAgIGRpc2NvdmVyIGFueSB1bmF1dGhvcml6ZWQgdXNlIG9mIHlvdXIgYWNjb3VudCBvciBvdGhlciBhY2NvdW50LXJlbGF0ZWQgc2VjdXJpdHkKICAgICAgICBicmVhY2guIFdlIG1heSByZXF1aXJlIHlvdSB0byBjaGFuZ2UgeW91ciB1c2VybmFtZSBhbmQvb3IgcGFzc3dvcmQgaWYgd2UKICAgICAgICBiZWxpZXZlIHlvdXIgYWNjb3VudCBpcyBubyBsb25nZXIgc2VjdXJlIG9yIGlmIHdlIHJlY2VpdmUgYSBjb21wbGFpbnQgdGhhdCB5b3VyCiAgICAgICAgdXNlcm5hbWUgdmlvbGF0ZXMgc29tZW9uZSBlbHNlJ3MgcmlnaHRzLgogICAgICAgIFlvdSB3aWxsIGhhdmUgbm8gb3duZXJzaGlwIGluIHlvdXIgYWNjb3VudCBvciB5b3VyIHVzZXJuYW1lLgogICAgICAgIFdlIG1heSByZWZ1c2UgcmVnaXN0cmF0aW9uLCBjYW5jZWwgYW4gYWNjb3VudCBvciBkZW55IGFjY2VzcwogICAgICAgIHRvIHRoZSBTaXRlIGZvciBhbnkgcmVhc29uLgogICAgPC9wPgogICAgPGg2IGNsYXNzPSJtYi0yIj4KICAgICAgICAyLiBDb2RlIG9mIENvbmR1Y3QKICAgIDwvaDY+CiAgICA8cD4KICAgICAgICBZb3UgYWdyZWUgdGhhdCB5b3Ugd2lsbCBjb21wbHkgd2l0aCBhbGwgYXBwbGljYWJsZSBsYXdzLCBydWxlcyBhbmQgcmVndWxhdGlvbnMsCiAgICAgICAgYW5kIHRoYXQgeW91IHdpbGwgbm90OgogICAgPC9wPgogICAgPHAgY2xhc3M9InBsLTIiPgogICAgICAgIFlvdSBhZ3JlZSB0aGF0IHlvdSB3aWxsIGNvbXBseSB3aXRoIGFsbCBhcHBsaWNhYmxlIGxhd3MsIHJ1bGVzIGFuZCByZWd1bGF0aW9ucywgYW5kIHRoYXQgeW91IHdpbGwgbm90OgogICAgPC9wPgogICAgPHAgY2xhc3M9InBsLTIiPgogICAgICAgIFVzZSB0aGUgU2l0ZSBmb3IgYW55IHVubGF3ZnVsIHB1cnBvc2U7CiAgICA8L3A+CiAgICA8cCBjbGFzcz0icGwtMiI+CiAgICAgICAgRXhwcmVzcyBvciBpbXBseSB0aGF0IGFueSBzdGF0ZW1lbnRzIHlvdSBtYWtlIGFyZSBlbmRvcnNlZCBieSB1cywgd2l0aG91dCBvdXIgcHJpb3Igd3JpdHRlbiBjb25zZW50OwogICAgPC9wPgogICAgPHAgY2xhc3M9InBsLTIiPgogICAgICAgIEltcGVyc29uYXRlIGFueSBwZXJzb24gb3IgZW50aXR5LCB3aGV0aGVyIGFjdHVhbCBvciBmaWN0aXRpb3VzLCBpbmNsdWRpbmcgYW55IGVtcGxveWVlIG9yIHJlcHJlc2VudGF0aXZlIG9mIG91ciBjb21wYW55OwogICAgPC9wPgogICAgPHAgY2xhc3M9InBsLTIiPgogICAgICAgIFN1Ym1pdCAoYSkgYW55IGNvbnRlbnQgb3IgaW5mb3JtYXRpb24gdGhhdCBpcyB1bmxhd2Z1bCwgZnJhdWR1bGVudCwgbGliZWxvdXMsCiAgICAgICAgZGVmYW1hdG9yeSwgb3Igb3RoZXJ3aXNlIG9iamVjdGlvbmFibGUsIG9yIGluZnJpbmdlcyBvdXIgb3IgYW55IHRoaXJkIHBhcnR5J3MKICAgICAgICBpbnRlbGxlY3R1YWwgcHJvcGVydHkgb3Igb3RoZXIgcmlnaHRzOyAoYikgYW55IG5vbi1wdWJsaWMgaW5mb3JtYXRpb24gYWJvdXQKICAgICAgICBjb21wYW5pZXMgd2l0aG91dCBhdXRob3JpemF0aW9uOyBvciAoYykgYW55IGFkdmVydGlzZW1lbnRzLAogICAgICAgIHNvbGljaXRhdGlvbnMsIGNoYWluIGxldHRlcnMsIHB5cmFtaWQgc2NoZW1lcywgc3VydmV5cywgY29udGVzdHMsIGludmVzdG1lbnQKICAgICAgICBvcHBvcnR1bml0aWVzIG9yIG90aGVyIHVuc29saWNpdGVkIGNvbW1lcmNpYWwgY29tbXVuaWNhdGlvbjsKICAgIDwvcD4KPC9kaXY+Cg=="},null]}