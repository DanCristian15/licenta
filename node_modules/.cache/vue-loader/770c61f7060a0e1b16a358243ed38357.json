{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/core/views/home/TheHome/RecentlyViewedEntities.vue?vue&type=style&index=0&lang=scss&scope=true&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/views/home/TheHome/RecentlyViewedEntities.vue","mtime":1645805364032},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/css-loader/dist/cjs.js","mtime":1637061260154},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1637061260528},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/postcss-loader/src/index.js","mtime":1637061260465},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/sass-loader/dist/cjs.js","mtime":1637061279772},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiQHNjc3NWYXJpYWJsZXMiOwpAaW1wb3J0ICJAc2Nzc01peGlucyI7CgouZ3N0LXJlY2VudGx5LXZpZXdlZC1lbnRpdGllc19fdGl0bGUgewogICAgbGluZS1oZWlnaHQ6IGZvbnQtc2l6ZSggJ3h4eHhsJyApOwp9CgouZ3N0LXJlY2VudGx5LXZpZXdlZC1lbnRpdGllc19fbmF2aWdhdGlvbiB7CiAgICAudi1idG4gewogICAgICAgIGhlaWdodDogZm9udC1zaXplKCAneHh4eGwnICk7CiAgICAgICAgd2lkdGg6IGZvbnQtc2l6ZSggJ3h4eHhsJyApOwogICAgfQp9CgouZ3N0LXJlY2VudGx5LXZpZXdlZC1lbnRpdGllc19fc2xpZGUtLWRlc3Ryb3kgewogICAgYW5pbWF0aW9uLW5hbWU6IHNsaWRlLWFuZC1mYWRlOwogICAgYW5pbWF0aW9uLWR1cmF0aW9uOiA1MDBtczsKICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzOwp9CgpAa2V5ZnJhbWVzIHNsaWRlLWFuZC1mYWRlIHsKICAgIDAlIHsKICAgICAgICBvcGFjaXR5OiAxOwogICAgfQoKICAgIDEwMCUgewogICAgICAgIHdpZHRoOiAwOwogICAgICAgIG9wYWNpdHk6IDA7CiAgICB9Cn0K"},{"version":3,"sources":["RecentlyViewedEntities.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0LA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"RecentlyViewedEntities.vue","sourceRoot":"src/core/views/home/TheHome","sourcesContent":["<template>\n    <div\n        v-if=\"items.length\"\n        class=\"gst-recently-viewed-entities mr-n4 mr-md-0\">\n        <v-flex d-flex flex-row class=\"mx-0 pb-4 pb-lg-6 pr-4 pr-md-0\">\n            <h4 class=\"gst-recently-viewed-entities__title flex-grow-1\">\n                {{ $t('title') }}\n            </h4>\n            <v-flex v-if=\"showNavigationButtons\" d-flex flex-row shrink class=\"gst-recently-viewed-entities__navigation mx-0\">\n                <v-btn icon :disabled=\"isSwiperReachStart\" class=\"mr-6\" @click=\"goToPreviousSlides\">\n                    <IconBackArrow />\n                </v-btn>\n                <v-btn icon :disabled=\"isSwiperReachEnd\" @click=\"goToNextSlides\">\n                    <IconBackArrow class=\"u-rotate-180\" />\n                </v-btn>\n            </v-flex>\n        </v-flex>\n        <swiper\n            ref=\"swiper\"\n            :key=\"swiperAllowTouch ? 1 : 2\"\n            class=\"gst-recently-viewed-entities__swiper pr-4 pr-md-0\"\n            :options=\"swiperOption\"\n            @slide-change=\"setSwiperNavigationDebounced\"\n            @reachBeginning=\"setSwiperNavigationDebounced\"\n            @reachEnd=\"setSwiperNavigationDebounced\"\n            @resize=\"setSwiperNavigationDebounced\">\n            <swiper-slide\n                v-for=\"( item ) in items\"\n                :key=\"item.id\"\n                class=\"gst-recently-viewed-entities__slide\"\n                :class=\"{\n                    'gst-recently-viewed-entities__slide--destroy': item === itemForRemove\n                }\">\n                <router-link\n                    v-if=\"isItemEvent( item )\"\n                    :to=\"{name: 'event', params: { id: item.data.id} } \"\n                    :class=\"{\n                        'swiper-no-swiping': !swiperAllowTouch\n                    }\">\n                    <EventCardVariant3\n                        :item=\"item.data\"\n                        :with-to=\"false\"\n                        :show-remove-button=\"true\"\n                        @remove=\"removeEvent( item )\" />\n                </router-link>\n                <router-link\n                    v-if=\"isItemAttraction( item )\"\n                    :to=\"{name: 'attraction', params: { id: item.data.id} } \"\n                    :class=\"{\n                        'swiper-no-swiping': !swiperAllowTouch\n                    }\">\n                    <AttractionCardVariant4\n                        :item=\"item.data\"\n                        :with-to=\"false\"\n                        :show-remove-button=\"true\"\n                        @remove=\"removeAttraction( item )\" />\n                </router-link>\n            </swiper-slide>\n        </swiper>\n    </div>\n</template>\n<script>\n    import { mapActions, mapGetters } from 'vuex';\n    import debounce from 'lodash/debounce';\n    import EventCardVariant3 from '@shared/components/event/EventCardVariant3';\n    import AttractionCardVariant4 from '@shared/components/attraction/AttractionCardVariant4';\n    import entityConstants from '@core/utils/constants/entity';\n    import IconBackArrow from '@core/shared/assets/icons/back_arrow.svg';\n\n    export default {\n        name: 'RecentlyViewedEntities',\n        components: {\n            EventCardVariant3,\n            AttractionCardVariant4,\n            IconBackArrow\n        },\n        i18nOptions: {\n            namespaces: 'main',\n            keyPrefix: 'views.home.theHome._components.recentlyViewedEntities',\n        },\n        data() {\n            return {\n                itemForRemove: null,\n                isSwiperReachStart: true,\n                isSwiperReachEnd: false,\n\n            };\n        },\n        computed: {\n            ...mapGetters( {\n                items:               'user/browsingHistory/entitiesEventsAndAttraction'\n            } ),\n            visibleNoSlides( ) {\n                return this.$vuetify.breakpoint.sm ? 4 : this.$vuetify.breakpoint.md ? 5 : 6;\n            },\n            showNavigationButtons( ) {\n                return this.$vuetify.breakpoint.smAndUp && this.items.length > this.visibleNoSlides;\n            },\n            swiperAllowTouch( ) {\n                return !this.$vuetify.breakpoint.lgAndUp;\n            },\n            swiperOption( ) {\n                const { thresholds, scrollBarWidth } = this.$vuetify.breakpoint;\n\n                return {\n                    slidesPerView: 2.2,\n                    centeredSlides: false,\n                    freeMode: true,\n                    spaceBetween: 16,\n                    allowTouchMove: this.swiperAllowTouch,\n                    breakpoints: {\n                        [ thresholds.xs ]: {\n                            slidesPerView: 4,\n                            freeMode: false,\n                            allowTouchMove: this.swiperAllowTouch,\n                        },\n                        [ thresholds.sm ]: {\n                            slidesPerView: 5,\n                            slidesPerGroup: 5,\n                            freeMode: false,\n                            allowTouchMove: this.swiperAllowTouch,\n                        },\n                        [ thresholds.md - scrollBarWidth ]: {\n                            slidesPerView: 6,\n                            slidesPerGroup: 6,\n                            freeMode: false,\n                            allowTouchMove: this.swiperAllowTouch,\n                            preventClicks: false,\n                            preventClicksPropagation: false\n                        }\n                    }\n                };\n            },\n        },\n        methods: {\n            ...mapActions( {\n                deleteUserBrowsingHistoryEntity: 'user/browsingHistory/deleteEntity',\n            } ),\n            isItemAttraction( { type } ) {\n                return type === entityConstants.TYPES.ATTRACTION;\n            },\n            isItemEvent( { type } ) {\n                return type === entityConstants.TYPES.EVENT;\n            },\n            goToPreviousSlides( ) {\n                const swiper = this.$refs.swiper.$swiper;\n                this.setSwiperNavigationDebounced();\n                \n                swiper.slidePrev(  );\n            },\n            goToNextSlides( ) {\n                const swiper = this.$refs.swiper.$swiper;\n                this.setSwiperNavigationDebounced();\n                \n                swiper.slideNext(  );\n            },\n            setSwiperNavigationDebounced: debounce( function ( ) {\n                const swiper = this.$refs.swiper.$swiper;\n\n                this.isSwiperReachStart = swiper.isBeginning;\n                this.isSwiperReachEnd = swiper.isEnd;\n            }, 50 ),\n            removeAttraction ( item ) {\n                if ( this.itemForRemove ) {\n                    return;\n                }\n                this.itemForRemove = item;\n                setTimeout( ( ) => {\n                    this.deleteUserBrowsingHistoryEntity( { entityType: entityConstants.TYPES.ATTRACTION, entityId: item.data.id  } );\n                    this.itemForRemove = null;\n                }, 500 );\n            },\n            removeEvent ( item ) {\n                if ( this.itemForRemove ) {\n                    return;\n                }\n                this.itemForRemove = item;\n                setTimeout( ( ) => {\n                    this.deleteUserBrowsingHistoryEntity( { entityType: entityConstants.TYPES.EVENT, entityId: item.data.id  } );\n                    this.itemForRemove = null;\n                }, 500 );\n            }\n        }\n    };\n</script>\n<style lang=\"scss\" scope>\n    @import \"@scssVariables\";\n    @import \"@scssMixins\";\n\n    .gst-recently-viewed-entities__title {\n        line-height: font-size( 'xxxxl' );\n    }\n\n    .gst-recently-viewed-entities__navigation {\n        .v-btn {\n            height: font-size( 'xxxxl' );\n            width: font-size( 'xxxxl' );\n        }\n    }\n\n    .gst-recently-viewed-entities__slide--destroy {\n        animation-name: slide-and-fade;\n        animation-duration: 500ms;\n        animation-fill-mode: forwards;\n    }\n\n    @keyframes slide-and-fade {\n        0% {\n            opacity: 1;\n        }\n\n        100% {\n            width: 0;\n            opacity: 0;\n        }\n    }\n</style>\n"]}]}