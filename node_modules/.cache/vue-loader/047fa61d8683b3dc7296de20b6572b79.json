{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/input/LanguageSelectField.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/input/LanguageSelectField.vue","mtime":1645805363959},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBpMThuZXh0IGZyb20gJ2kxOG5leHQnOwppbXBvcnQgeyBtYXBBY3Rpb25zLCBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgSWNvbkNoZWNrIGZyb20gJ0Bjb3JlL3NoYXJlZC9hc3NldHMvaWNvbnMvY2hlY2suc3ZnJzsKaW1wb3J0IEljb25Ecm9wRG93bkFycm93IGZyb20gJ0Bjb3JlL3NoYXJlZC9hc3NldHMvaWNvbnMvZHJvcGRvd25fYXJyb3cuc3ZnJzsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdMYW5ndWFnZVNlbGVjdEZpZWxkJywKICAgIGkxOG5PcHRpb25zOiB7IGtleVByZWZpeDogJ2NvbW1vbicsIG5hbWVzcGFjZXM6ICdzaGFyZWQnIH0sCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgSWNvbkNoZWNrLAogICAgICAgIEljb25Ecm9wRG93bkFycm93CiAgICB9LAogICAgcHJvcHM6IHsKICAgICAgICBpc1NlY29uZGFyeVR5cGU6IHsKICAgICAgICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgICAgICAgZGVmYXVsdDogZmFsc2UKICAgICAgICB9CiAgICB9LAogICAgZGF0YTogKCkgPT4gKCB7CiAgICAgICAgaXRlbXM6IFtdLAogICAgICAgIG1lbnVPcGVuZWQ6IGZhbHNlCiAgICB9ICksCiAgICBjb21wdXRlZDogewogICAgICAgIC4uLm1hcFN0YXRlKCB7CiAgICAgICAgICAgIGRlZmF1bHRTZWxlY3RlZDogIHN0YXRlID0+IHN0YXRlLmFwcFN0YXRlLmxhbmd1YWdlCiAgICAgICAgfSApLAogICAgICAgIGl0ZW1OYW1lcygpIHsKICAgICAgICAgICAgY29uc3QgeyBpdGVtcyB9ID0gdGhpczsKCiAgICAgICAgICAgIHJldHVybiBpdGVtcy5yZWR1Y2UoICggYWNjLCBpdGVtICkgPT4gewogICAgICAgICAgICAgICAgY29uc3QgdHJhbnNsYXRpb25LZXkgPSBgc2hhcmVkOmNvbW1vbi5sYW5ndWFnZXMuJHtpdGVtfS5uYW1lYDsKICAgICAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBpMThuZXh0LmV4aXN0cyggdHJhbnNsYXRpb25LZXkgKSA/IHRoaXMuJHQoIHRyYW5zbGF0aW9uS2V5ICkgOiBpdGVtLnRvVXBwZXJDYXNlKCk7CiAgICAgICAgICAgICAgICBhY2NbaXRlbV0gPSBuYW1lOwoKICAgICAgICAgICAgICAgIHJldHVybiBhY2M7CiAgICAgICAgICAgIH0sIHsgfSApOwogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgLi4ubWFwQWN0aW9ucyggewogICAgICAgICAgICBjaGFuZ2VMYW5ndWFnZTogJ2FwcFN0YXRlL3NldExhbmd1YWdlJwogICAgICAgIH0gKQogICAgfSwKICAgIGJlZm9yZU1vdW50KCApIHsKICAgICAgICB0aGlzLml0ZW1zID0gT2JqZWN0LmtleXMoIGkxOG5leHQuc2VydmljZXMucmVzb3VyY2VTdG9yZS5kYXRhICk7CiAgICB9Cn07Cg=="},{"version":3,"sources":["LanguageSelectField.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LanguageSelectField.vue","sourceRoot":"src/core/shared/components/input","sourcesContent":["<template>\n    <div\n        v-if=\"items.length > 1\"\n        :class=\"['gst-lang-select', isSecondaryType && 'gst-lang-select--secondary']\">\n        <v-menu\n            v-model=\"menuOpened\"\n            offset-y\n            content-class=\"gst-city-dropdown__menu gst-lang-dropdown-menu u-box-shadow\"\n            :close-on-content-click=\"true\">\n            <template v-slot:activator=\"{ on }\">\n                <v-btn\n                    ref=\"button\"\n                    text\n                    outlined\n                    depressed\n                    :class=\"['gst-lang-select__button', menuOpened && 'gst-lang-select__button--active']\"\n                    v-on=\"on\">\n                    {{ defaultSelected.toUpperCase().trim() }}\n                    <IconDropDownArrow\n                        class=\"u-mouse-pointer\"\n                        :class=\"{'u-rotate-180': menuOpened }\" />\n                </v-btn>\n            </template>\n            <v-list class=\"gst-lang-select__list\">\n                <v-list-item\n                    v-for=\"(item, index) in items\"\n                    :key=\"index\"\n                    :class=\"['gst-lang-select__list-item', defaultSelected === item && 'v-list-item--active gst-lang-select__list-item--active']\"\n                    @click=\"changeLanguage( item )\">\n                    <v-list-item-title class=\"gst-lang-select__item-title\">\n                        <!-- eslint-disable-next-line vue/no-v-html -->\n                        {{ itemNames[item] }}\n                    </v-list-item-title>\n                    <v-list-item-avatar\n                        v-if=\"defaultSelected === item\"\n                        :style=\"{height: 'auto', width: 'auto'}\"\n                        class=\"gst-lang-select__item-icon\">\n                        <IconCheck />\n                    </v-list-item-avatar>\n                </v-list-item>\n            </v-list>\n        </v-menu>\n    </div>\n</template>\n<script>\n    import i18next from 'i18next';\n    import { mapActions, mapState } from 'vuex';\n    import IconCheck from '@core/shared/assets/icons/check.svg';\n    import IconDropDownArrow from '@core/shared/assets/icons/dropdown_arrow.svg';\n\n    export default {\n        name: 'LanguageSelectField',\n        i18nOptions: { keyPrefix: 'common', namespaces: 'shared' },\n        components: {\n            IconCheck,\n            IconDropDownArrow\n        },\n        props: {\n            isSecondaryType: {\n                type: Boolean,\n                default: false\n            }\n        },\n        data: () => ( {\n            items: [],\n            menuOpened: false\n        } ),\n        computed: {\n            ...mapState( {\n                defaultSelected:  state => state.appState.language\n            } ),\n            itemNames() {\n                const { items } = this;\n\n                return items.reduce( ( acc, item ) => {\n                    const translationKey = `shared:common.languages.${item}.name`;\n                    const name = i18next.exists( translationKey ) ? this.$t( translationKey ) : item.toUpperCase();\n                    acc[item] = name;\n\n                    return acc;\n                }, { } );\n            }\n        },\n        methods: {\n            ...mapActions( {\n                changeLanguage: 'appState/setLanguage'\n            } )\n        },\n        beforeMount( ) {\n            this.items = Object.keys( i18next.services.resourceStore.data );\n        }\n    };\n</script>\n<style lang=\"scss\">\n@import \"@scssVariables\";\n@import \"@scssMixins\";\n\n.gst-lang-dropdown-menu {\n    border-radius: border-radius( 'm' ) !important;\n    max-height: 115px;\n}\n\n.gst-lang-select {\n    .v-btn.gst-lang-select__button {\n        height: 30px !important;\n        width: auto;\n        padding-right: 4px !important;\n        padding-left: 9px !important;\n        border: 1px solid theme-color( 'quinary' );\n        background: transparent !important;\n        font-size: font-size( 'xxs' );\n        font-weight: font-weight( 'bold' );\n        border-radius: border-radius( 'm' ) !important;\n        min-width: unset !important;\n        border-color: theme-color( 'quinary' );\n\n        svg {\n            transition: all 0.5s ease;\n            margin-left: -3px;\n        }\n    }\n\n    .v-btn.gst-lang-select__button--active {\n        border: 1px solid theme-color( 'primary' );\n        background: theme-color( 'primary' ) !important;\n        color: theme-color( 'white' ) !important;\n\n        svg .gst-svg-icon {\n            fill: theme-color( 'white' );\n        }\n    }\n\n    .v-btn::before {\n        background-color: transparent;\n    }\n\n    &.gst-lang-select--secondary {\n        .v-btn.gst-lang-select__button {\n            border: 1px solid theme-color( 'white' ) !important;\n            color: theme-color( 'white' );\n\n            svg .gst-svg-icon {\n                fill: theme-color( 'white' );\n            }\n        }\n\n        .v-btn.gst-lang-select__button--active {\n            border: 1px solid theme-color( 'white' ) !important;\n            background: transparent;\n\n            svg .gst-svg-icon {\n                fill: theme-color( 'white' );\n            }\n        }\n    }\n}\n\n.gst-lang-select__list {\n    border-radius: border-radius( 'm' ) !important;\n    min-width: 170px;\n}\n\n.v-list-item.gst-lang-select__list-item {\n    padding-right: 0;\n    min-height: 42px !important;\n\n    .gst-lang-select__item-title {\n        color: theme-color( 'quaternary' );\n        font-size: font-size( 's' );\n        font-weight: font-weight( 'medium' );\n    }\n}\n\n.v-list-item.gst-lang-select__list-item--active {\n    .gst-lang-select__item-title {\n        color: theme-color( 'primary' ) !important;\n    }\n\n    svg .gst-svg-icon {\n        fill: theme-color( 'primary' );\n    }\n}\n\n.v-list-item.gst-lang-select__list-item--active::before {\n    background-color: transparent !important;\n}\n</style>\n"]}]}