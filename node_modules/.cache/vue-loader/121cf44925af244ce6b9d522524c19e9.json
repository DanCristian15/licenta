{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/views/cart/TheChekoutWizard/Step3Payment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/views/cart/TheChekoutWizard/Step3Payment.vue","mtime":1645805364018},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js","mtime":1637061222406},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Step3Payment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"Step3Payment.vue","sourceRoot":"src/core/views/cart/TheChekoutWizard","sourcesContent":["<template>\n    <v-card flat class=\"d-flex flex-column gst-checkwiz-step-payment\">\n        <DataLoadingOverlay\n            :show=\"shippingModel.loading\"\n            :color=\"'white'\">\n            <PaymentProviderDownWarningContainer\n                v-if=\"showPaymentProviderDownWarningContainer\"\n                class=\"gst-checkwiz-step-payment__payment-provider-down-warning-container\"\n                :button-label=\"$t( '_common:buttons.back' )\"\n                @close=\"$emit( 'back' )\" />\n            <template v-else>\n                <v-card-text lass=\"flex-grow-0 py-0 px-0\">\n                    <v-radio-group\n                        v-show=\"hasSplitPayment\"\n                        v-model=\"paymentMethod\">\n                        <v-radio\n                            :disabled=\"!canBuyOnlyWithPoints\"\n                            :label=\"labelOnlyPointsRadio\"\n                            :value=\"paymentMethods.POINTS\"\n                            off-icon=\"$vuetify.icons.checkboxRoundUnchecked\"\n                            on-icon=\"$vuetify.icons.checkboxRoundChecked\" />\n                        <v-radio\n                            :disabled=\"!canPayWithCard\"\n                            :label=\"$t('labels.radio2')\"\n                            :value=\"paymentMethods.CARD\"\n                            off-icon=\"$vuetify.icons.checkboxRoundUnchecked\"\n                            on-icon=\"$vuetify.icons.checkboxRoundChecked\" />\n                        <!-- GL-1548 - Split is disabled except test event id 106710000 ( mihai 2021.09.08 ) -->\n                        <v-radio\n                            v-if=\"showSplitPayment\"\n                            :label=\"$t('labels.radio3')\"\n                            :value=\"paymentMethods.SPLIT\"\n                            :disabled=\"!userIsAuth\"\n                            off-icon=\"$vuetify.icons.checkboxRoundUnchecked\"\n                            on-icon=\"$vuetify.icons.checkboxRoundChecked\" />\n                    </v-radio-group>\n                    <Step3PaymentSplit\n                        v-show=\"paymentMethod === paymentMethods.SPLIT\"\n                        v-model=\"paymentModelComputed\"\n                        :bonus-points-rate=\"bonusPointsRate\"\n                        :max-points=\"maxBonusPointsRedeemForSplit\"\n                        :max-amount=\"paymentModel.total\"\n                        :currency=\"currency\"\n                        class=\"mb-4\" />\n                    <div v-show=\"paymentMethod !== paymentMethods.POINTS\">\n                        <template v-if=\"canPayWithCard\">\n                            <v-flex d-flex flex-row align-center class=\"px-2 mb-0 gst-checkwiz-step-payment__info-secure u-alpha-background\">\n                                <IconSecure class=\"gst-checkwiz-step-payment__icon-secure mr-2\" />\n                                {{ $t('info.security') }}\n                            </v-flex>\n                            <v-flex d-flex flex-row align-center class=\"py-3 mb-0 gst-checkwiz-step-payment__info-card\">\n                                <IconCheckCircle class=\"gst-checkwiz-step-payment__icon-check mr-2\" />\n                                {{ $t('info.card') }}\n                            </v-flex>\n                        </template>\n                        <div :id=\"paymentClientContainerId\"></div>\n                    </div>\n                </v-card-text>\n                <v-card-actions class=\"px-0\">\n                    <v-flex d-flex flex-column flex-md-row justify-center>\n                        <ButtonBack\n                            v-if=\"$vuetify.breakpoint.mdAndUp\"\n                            :placeholder=\"$t( '_common:buttons.back' )\"\n                            @click=\"$emit( 'back' )\" />\n                        <v-spacer v-if=\"$vuetify.breakpoint.mdAndUp\" />\n                        <ButtonNext\n                            :placeholder=\"$t( '_common:buttons.placeOrder' )\"\n                            :width=\"!$vuetify.breakpoint.mdAndUp ? '100%' : ''\"\n                            :disabled=\"isDisabledNextButton\"\n                            @click=\"createPayment\" />\n                        <div v-if=\"!$vuetify.breakpoint.mdAndUp\" xs12 class=\"gst-checkwiz-step-payment__total mt-4 d-flex flex-wrap flex-column\">\n                            {{ $t('total', { amount: $options.filters.currencyFull( paymentModel.amount, currency ) } ) }}\n                            <v-btn\n                                class=\"gst-btn--see-details text-none mt-2\"\n                                text\n                                height=\"auto\"\n                                color=\"primary\"\n                                :ripple=\"false\"\n                                @click=\"openPaymentOrderDetailsModal\">\n                                {{ $t( 'buttons.seeDetails' ) }}\n                            </v-btn>\n                        </div>\n                    </v-flex>\n                </v-card-actions>\n            </template>\n        </DataLoadingOverlay>\n    </v-card>\n</template>\n<script>\n    import Vue from 'vue';\n    import { mapActions, mapState, mapGetters } from 'vuex';\n    import {\n        calculateAmountRemainingFromTotal as bonusPointsUtilsCalculateAmountRemainingFromTotal\n    } from '@core/utils/bonusPointsUtils';\n    import paymentConstants from '@utils/constants/payment';\n    import apiPaymentClient from '@core/api/apiPaymentClient';\n    import DataLoadingOverlay from '@core/shared/components/loading/DataLoadingOverlay.vue';\n    import PaymentProviderDownWarningContainer from '@core/shared/components/notifications/PaymentProviderDownWarningContainer.vue';\n    import ButtonBack from '@core/shared/components/wizard/step/ButtonBack.vue';\n    import ButtonNext from '@core/shared/components/wizard/step/ButtonNext.vue';\n    import IconSecure from '@core/shared/assets/icons/secure.svg';\n    import IconCheckCircle from '@core/shared/assets/icons/check_circle.svg';\n    import Step3PaymentSplit from './Step3PaymentSplit.vue';\n    import Step3PaymentOrderDetailsModalContent from './Step3PaymentOrderDetailsModalContent.vue';\n\n\n    export default {\n        name: 'Step3Payment',\n        components: {\n            ButtonBack,\n            ButtonNext,\n            IconSecure,\n            IconCheckCircle,\n            Step3PaymentSplit,\n            PaymentProviderDownWarningContainer,\n            DataLoadingOverlay\n        },\n        i18nOptions: {\n            namespaces: 'main',\n            keyPrefix: 'views.cart.theCheckoutWizard._components.step3Payment'\n        },\n        props: {\n            step: {\n                type: Object,\n                required: true\n            },\n            paymentModel: {\n                type: Object,\n                required: true\n            },\n            shippingModel: {\n                type: Object,\n                required: true\n            },\n            paymentClientModel: {\n                type: Object,\n                required: true\n            },\n            busEventsParent: {\n                type: Object,\n                required: true\n            },\n            cartCollection: {\n                type: Object,\n                required: true\n            },\n            order: {\n                type: Object,\n                required: true\n            },\n            bonusPointsRate: {\n                type: Number,\n                required: true\n            },\n            totalBonusPointsReddem: {\n                type: Number,\n                required: true\n            },\n            userBonusPointsCurrent: {\n                type: Number,\n                required: true\n            },\n            showSplitPayment: {\n                type: Boolean,\n                default: false\n            },\n            currentStep: {\n                type: Number,\n                required: true\n            },\n            busEventProgressStep: {\n                type: Object,\n                default: null\n            }\n        },\n        data() {\n            return {\n                paymentMethod: paymentConstants.METHODS.CARD,\n                canPayWithCard: false,\n                showPaymentProviderDownWarningContainer: false,\n                busEventOrderDetails: new Vue( ),\n                loading: false\n            };\n        },\n        computed: {\n            ...mapGetters( {\n                'isLoyaltyTypeAllowRedeem': 'appTenant/isLoyaltyTypeAllowRedeem',\n                'isLoyaltyCurrencyTypeMoney': 'appTenant/isLoyaltyCurrencyTypeMoney',\n                userIsAuth: 'user/profile/isAuth',\n            } ),\n            ...mapState( {\n                language: state => state.appState.language\n            } ),\n            labelOnlyPointsRadio( ) {\n                const label = this.$t(\n                    'labels.radio1',\n                    {\n                        bonusPoints: this.$options.filters.bonusPoints ( this.bonusPointsRedeem ),\n                        bonusPointsAvailable: this.$options.filters.bonusPoints ( this.userBonusPointsCurrent )\n                    }\n                );\n\n                if ( this.canBuyOnlyWithPoints ) {\n                    return label;\n                } else {\n                    return `${ label }${this.$t( 'labels.radio1SuffixNotEnoughBonusPoints' )}`;\n                }\n            },\n            paymentClientContainerId( ) {\n                return 'paymentClient';\n            },\n            bonusPointsRedeem( ) {\n                return this.totalBonusPointsReddem;\n            },\n            canBuyOnlyWithPoints( ) {\n                return this.userBonusPointsCurrent >= this.bonusPointsRedeem;\n            },\n            paymentMethods( ) {\n                return paymentConstants.METHODS;\n            },\n            paymentModelComputed: {\n                get( ) {\n                    return this.paymentModel;\n                },\n                set( value ) {\n                    this.$emit( 'input', value );\n                }\n            },\n            maxBonusPointsRedeemForSplit () {\n                return Math.min( this.userBonusPointsCurrent, this.bonusPointsRedeem );\n            },\n            hasErrors( ) {\n                return this.hasBonusPointsMaxError && !this.paymentMethod;\n            },\n            hasBonusPointsMaxError ( ) {\n                return this.paymentModel.points > this.maxBonusPointsRedeem;\n            },\n            hasSplitPayment() {\n                return this.isLoyaltyTypeAllowRedeem;\n            },\n            currency( ) {\n                const { cartCollection } = this;\n                return cartCollection.currency;\n            },\n            isDisabledNextButton() {\n                const { paymentMethod, canPayWithCard } = this;\n                return ( paymentMethod === paymentConstants.METHODS.CARD && !canPayWithCard ) || !paymentMethod;\n            },\n            isSplitPaymentMethod() {\n                return this.paymentMethod === this.paymentMethods.SPLIT;\n            }\n        },\n        watch: {\n            'paymentMethod': function( newValue ) {\n                this.updatePaymentModelByPaymentMethod( newValue );\n            },\n            'paymentModel.total': function( ) {\n                this.updatePaymentModelByPaymentMethod( this.paymentMethod );\n            },\n            'paymentClientModel.token': {\n                handler: async function ( value, oldValue ) {\n                    if ( !value ) {\n                        this.showPaymentProviderDownWarningContainer = !this.canBuyOnlyWithPoints && !this.canPayWithCard;\n                    }\n                    if ( value && value !== oldValue ) {\n                        this.showPaymentProviderDownWarningContainer = false;\n                        this.loading = true;\n                        await this.openPaymentIframe( );\n                        this.initPaymentMethod( );\n                        this.updatePaymentModelByPaymentMethod( this.paymentMethod );\n                        this.showPaymentProviderDownWarningContainer = !this.canBuyOnlyWithPoints && !this.canPayWithCard;\n                        this.loading = false;\n                    }\n                },\n                immediate: true\n            },\n            'currentStep': function( newValue ) {\n                const { step, paymentMethod, isSplitPaymentMethod } = this;\n                if ( newValue === step.index && isSplitPaymentMethod ) {\n                    this.updatePaymentModelByPaymentMethod( paymentMethod );\n                }\n            }\n        },\n        methods: {\n            ...mapActions( {\n                notificationError: 'notification/error'\n            } ),\n            createPayment( ) {\n                const getCardInfo = ( payload ) => {\n                    return payload ? {\n                        'token': payload.nonce,\n                        'expireMonth': parseInt( payload.details.expirationMonth ),\n                        'expireYear': parseInt( payload.details.expirationYear ),\n                        'type': payload.details.cardType,\n                        'lastFour': payload.details.lastFour,\n                    } : null;\n                };\n\n                if ( this.hasErrors || this._isSubmiting ) {\n                    return;\n                }\n\n                this._isSubmiting = true;\n                if ( this.paymentModel.amount ) {\n                    this.$emit( 'next', {\n                        fnPayment: ( callback ) => {\n                            this.instancePaymentClient.requestPaymentMethod ( ( error, payload ) => {\n                                if ( error ) {\n                                    !this.busEventProgressStep || this.busEventProgressStep.$emit( 'close' );\n                                    this.notificationError( this.$t( 'messages.formHasError' ) );\n                                    this._isSubmiting = false;\n                                }\n\n                                callback( error, getCardInfo( payload ) );\n                            } );\n                        },\n                        callback: ( ) => { this._isSubmiting = false; },\n                        isSplitPaymentMethod: this.isSplitPaymentMethod\n                    } );\n                } else {\n                    this.$emit( 'next', {\n                        fnPayment: ( callback ) => {\n                            callback( false, null );\n                        },\n                        callback: ( ) => { this._isSubmiting = false; },\n                        isSplitPaymentMethod: this.isSplitPaymentMethod\n                    } );\n                }\n            },\n            hideClientToogle() {\n                const sel = document.querySelector( '[data-braintree-id=\"toggle\"]' );\n\n                !sel || sel.click( );\n            },\n            updatePaymentModelByPaymentMethod( paymentMethod ) {\n                switch ( paymentMethod ) {\n                    case this.paymentMethods.POINTS:\n                        this.$emit( 'input', { points: this.bonusPointsRedeem, amount: 0 } );\n                        break;\n                    case this.paymentMethods.CARD:\n                        this.$emit( 'input', { points: 0, amount: this.paymentModel.total } );\n                        break;\n                    case this.paymentMethods.SPLIT: {\n                        const points = Math.min( this.userBonusPointsCurrent, this.bonusPointsRedeem );\n                        const amount = bonusPointsUtilsCalculateAmountRemainingFromTotal( this.paymentModel.total, points, this.bonusPointsRate );\n\n                        this.$emit( 'input', {\n                            points,\n                            amount\n                        } );\n                        break;\n                    }\n                    default:\n\n                }\n            },\n            openPaymentOrderDetailsModal( ) {\n                this.$modal.showBottom(\n                    Step3PaymentOrderDetailsModalContent,\n                    {\n                        cartCollection: this.cartCollection,\n                        order: this.order,\n                        paymentModel: this.paymentModel,\n                        shippingModel: this.shippingModel,\n                        busEventsParent: this.busEventOrderDetails\n                    },\n                    {\n                        'content-class': 'v-dialog__height-50 gst-v-dialog',\n                        scrollable: true,\n                        fullscreen: false,\n                        'hide-overlay': false,\n                        transition: 'dialog-bottom-transition'\n                    }\n                );\n            },\n            async openPaymentIframe( ) {\n                const { paymentClientModel, paymentClientContainerId, language } = this;\n\n                return new Promise ( ( resolve ) => {\n                    this.canPayWithCard = false;\n                    this._isSubmiting = false;\n                    apiPaymentClient.openPaymentIFrame(\n                        paymentClientModel.token,\n                        `#${paymentClientContainerId}`,\n                        {\n                            locale: language,\n                            vaultManager: false,\n                            translations: {\n                                payWithCard: 'Pay with your PC MasterCard!',\n                            },\n                            card: {\n                                overrides: {\n                                    styles: {\n                                        input: {\n                                            'font-size': '13px',\n                                            'font-family': 'sans-serif',\n                                            'font-weight': 400\n                                        },\n                                        '.invalid': {\n                                            color: '#C33764'\n                                        }\n                                    }\n                                },\n                            }\n                        },\n                        ( createError, instancePaymentClient ) => {\n                            if ( createError ) {\n                                resolve( false );\n                                return;\n                            }\n                            this.instancePaymentClient = instancePaymentClient;\n                            this.canPayWithCard = true;\n                            resolve( true );\n                        }\n                    );\n                } );\n\n            },\n            initPaymentMethod( ) {\n                this.paymentMethod = null;\n                if ( this.canPayWithCard ) {\n                    this.paymentMethod = this.paymentMethods.CARD;\n                    return;\n                }\n                if ( this.isLoyaltyTypeAllowEarn && this.canBuyOnlyWithPoints ) {\n                    this.paymentMethod = this.paymentMethods.POINTS;\n                    return;\n                }\n            }\n        },\n        async mounted( ) {\n            !this.busEventsParent || this.busEventsParent.$on( 'save-error', this.hideClientToogle );\n            !this.busEventOrderDetails || this.busEventOrderDetails.$on( 'next', this.createPayment );\n        },\n        destroyed( ) {\n            !this.busEventsParent || this.busEventsParent.$off( 'save-error' );\n            !this.busEventOrderDetails || this.busEventOrderDetails.$off( 'next' );\n        }\n    };\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"@scssVariables\";\n    @import \"@scssMixins\";\n\n    .gst-checkwiz-step-payment__payment-provider-down-warning-container {\n        margin-top: 120px;\n    }\n\n    .gst-checkwiz-step-payment__info-secure {\n        position: relative;\n        line-height: 14px;\n        padding-top: 12px;\n        padding-bottom: 12px;\n        color: theme-color( 'success' );\n        font-size: font-size( 'xxs' );\n        font-weight: font-weight( 'regular' );\n        border-radius: border-radius( 'm' ) !important;\n        z-index: 0;\n\n        &::after {\n            background-color: theme-color( 'background-success' );\n            opacity: 0.1;\n            border-radius: inherit;\n        }\n    }\n\n    .gst-checkwiz-step-payment__icon-secure {\n        .gst-svg-icon {\n            fill: theme-color( 'success' );\n        }\n    }\n\n    .gst-checkwiz-step-payment__info-card {\n        color: theme-color( 'quaternary' );\n        font-size: font-size( 's' );\n        font-weight: font-weight( 'medium' );\n    }\n\n    .gst-checkwiz-step-payment__icon-check {\n        .gst-svg-icon {\n            fill: theme-color( 'primary' );\n        }\n    }\n\n    .gst-btn--see-details {\n        line-height: line-height( 'l' );\n        font-size: font-size( 's' );\n        letter-spacing: -0.2px;\n    }\n\n    .gst-btn--see-details.v-btn::before {\n        background-color: transparent;\n    }\n\n    @include mobile-only {\n        .gst-checkwiz-step-payment__payment-provider-down-warning-container {\n            margin-top: 60px;\n        }\n    }\n\n</style>\n\n<style lang=\"scss\">\n    @import \"@scssVariables\";\n    @import \"@scssMixins\";\n\n    .braintree-sheet {\n        border: none;\n    }\n\n    .braintree-sheet__header {\n        display: none;\n    }\n\n    .braintree-methods {\n        display: none !important;\n    }\n\n    .braintree-placeholder {\n        display: none;\n    }\n\n    .braintree-sheet__content--form {\n        padding: 0;\n    }\n\n    .braintree-form__field-group {\n        padding: 5px 10px !important;\n        border-style: solid;\n        border-width: 1px;\n        border-color: theme-color( 'quinary' );\n        border-radius: border-radius( 'xxs' );\n\n        .braintree-form__label {\n            color: theme-color( 'primary' ) !important;\n        }\n    }\n\n    @media (min-width: 468px) {\n        .braintree-form__field-group[data-braintree-id=\"expiration-date-field-group\"] {\n            margin-right: 5px !important;\n        }\n    }\n\n    .braintree-form__hosted-field {\n        padding-top: 0 !important;\n        padding-left: 0 !important;\n        border: none !important;\n        margin: 0 !important;\n    }\n\n    .gst-checkwiz-step-payment__total {\n        width: 100%;\n        text-align: center;\n    }\n</style>\n"]}]}