{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/date/DatePicker.vue?vue&type=template&id=4b50fd97&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/date/DatePicker.vue","mtime":1645805363945},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1637061260528},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}