{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/shared/components/date/DatePicker.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/shared/components/date/DatePicker.vue","mtime":1645805363945},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/css-loader/dist/cjs.js","mtime":1637061260154},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1637061260528},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/postcss-loader/src/index.js","mtime":1637061260465},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/sass-loader/dist/cjs.js","mtime":1637061279772},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICJAc2Nzc1ZhcmlhYmxlcyI7CkBpbXBvcnQgIkBzY3NzTWl4aW5zIjsKCi5nc3QtZGF0ZS1waWNrZXIudi1waWNrZXIgewogICAgYm9yZGVyOiBub25lOwogICAgYm94LXNoYWRvdzogbm9uZTsKCiAgICAudi1kYXRlLXBpY2tlci1oZWFkZXIgewogICAgICAgIHBhZGRpbmc6IDhweCAycHg7CiAgICB9CgogICAgLnYtZGF0ZS1waWNrZXItaGVhZGVyX192YWx1ZSB7CiAgICAgICAgZm9udC1zaXplOiBmb250LXNpemUoICdsJyApOwogICAgfQoKICAgIC52LWRhdGUtcGlja2VyLXRhYmxlIHsKICAgICAgICBoZWlnaHQ6IGF1dG87CgogICAgICAgIC52LWJ0biB7CiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKCiAgICAgICAgICAgIC52LWRhdGUtcGlja2VyLXRhYmxlX19ldmVudHMgewogICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICAgICAgICAgIHRvcDogMDsKICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsKCiAgICAgICAgICAgICAgICA+IGRpdiB7CiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMDsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICA+IGRpdjo6YmVmb3JlIHsKICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgICAgICAgICAgICAgICAgdG9wOiA1MCU7CiAgICAgICAgICAgICAgICAgICAgbGVmdDogNTAlOwogICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTsKICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCB0aGVtZS1jb2xvciggJ3doaXRlJyApOwogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IGJvcmRlci1yYWRpdXMoICdjaXJjbGUnICkgIWltcG9ydGFudDsKICAgICAgICAgICAgICAgICAgICBjb250ZW50OiAiIjsKICAgICAgICAgICAgICAgICAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsKICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSggLTUwJSwgLTUwJSApOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9CgouZ3N0LWRhdGUtcGlja2VyIHsKICAgIG1hcmdpbi10b3A6IDhweDsKICAgIGJhY2tncm91bmQtY29sb3I6IHRoZW1lLWNvbG9yKCAnd2hpdGUnICk7CiAgICBib3JkZXItcmFkaXVzOiBib3JkZXItcmFkaXVzKCAnbScgKSAhaW1wb3J0YW50OwogICAgbWF4LXdpZHRoOiA0MDBweDsKCiAgICBAaW5jbHVkZSBtb2JpbGUtb25seSgpIHsKICAgICAgICBtYXgtd2lkdGg6IDEwMCU7CiAgICB9Cn0KCi5nc3QtZGF0ZS1waWNrZXJfX2xpc3QgewogICAgLnYtbGlzdC1pdGVtIHsKICAgICAgICBtaW4taGVpZ2h0OiBhdXRvOwogICAgfQoKICAgIC52LWxpc3QtaXRlbV9fdGl0bGUgewogICAgICAgIGZvbnQtc2l6ZTogZm9udC1zaXplKCAnbCcgKTsKICAgIH0KCiAgICAudi1saXN0LWl0ZW1fX2ljb24gewogICAgICAgIG1hcmdpbi1yaWdodDogMTZweDsKICAgIH0KfQoKLmdzdC1kYXRlLXBpY2tlcl9faW5wdXQtZGF0ZSB7CiAgICBmb250LXNpemU6IGZvbnQtc2l6ZSggJ2wnICk7Cn0KCi5nc3QtZGF0ZS1waWNrZXItaWNvbiB7CiAgICAuZ3N0LXN2Zy1pY29uIHsKICAgICAgICBmaWxsOiB0aGVtZS1jb2xvciggJ3ByaW1hcnknICk7CiAgICB9Cn0KCi5nc3QtYnRuLS1jYW5jZWwudi1idG46OmJlZm9yZSwKLmdzdC1idG4tLWNvbmZpcm0udi1idG46OmJlZm9yZSwKLmdzdC1idG4tLXJlc2V0LnYtYnRuOjpiZWZvcmUgewogICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7Cn0KCi5nc3Qtc2VhcmNoLWRhdGUtbWVudV9faXRlbS1pY29uIHsKICAgIC5nc3Qtc3ZnLWljb24gewogICAgICAgIGZpbGw6IHRoZW1lLWNvbG9yKCAncHJpbWFyeScgKTsKICAgIH0KfQo="},{"version":3,"sources":["DatePicker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkPA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"DatePicker.vue","sourceRoot":"src/core/shared/components/date","sourcesContent":["<template>\n    <v-list class=\"gst-date-picker__list pt-2\">\n        <DataLoadingOverlay\n            :show=\"loading\"\n            :color=\"'white'\"\n            :opacity=\"'0.8'\">\n            <v-list-item key=\"allDates\" link class=\"py-2 px-4\">\n                <v-list-item-icon class=\"my-0 mr-3\">\n                    <IconDate class=\"gst-search-date-menu__item-icon\" />\n                </v-list-item-icon>\n                <v-list-item-title class=\"font-weight-medium\" @click=\"selectAllDates\">\n                    {{ $t(\"labels.allDates\") }}\n                </v-list-item-title>\n            </v-list-item>\n            <v-list-item key=\"thisWeekend\" link class=\"py-2 px-4\">\n                <v-list-item-icon class=\"my-0 mr-3\">\n                    <IconDate class=\"gst-search-date-menu__item-icon\" />\n                </v-list-item-icon>\n                <v-list-item-title class=\"font-weight-medium\" @click=\"selectThisWeekend\">\n                    {{ $t('labels.weekend') }}\n                </v-list-item-title>\n            </v-list-item>\n            <v-divider class=\"mx-4 my-2\" />\n            <SectionTitleSmall class=\"px-4\">\n                {{ $t('headers.datePicker' ) }}\n            </SectionTitleSmall>\n            <v-flex class=\"d-flex px-4\">\n                <v-col cols=\"5\" class=\"px-0 flex-column d-flex\">\n                    <input\n                        v-model=\"startDateValue\"\n                        class=\"gst-date-input gst-date-picker__input-date tertiary--text d-inline-block\"\n                        :placeholder=\"$t('placeholderStartDate')\"\n                        readonly\n                        data-hj-allow />\n                </v-col>\n                <v-col cols=\"1\" class=\"px-0 flex-column d-flex\">\n                    <span class=\"tertiary--text\">-</span>\n                </v-col>\n                <v-col cols=\"5\" class=\"px-0 d-flex flex-column\">\n                    <input\n                        v-model=\"endDateValue\"\n                        class=\"gst-date-input gst-date-picker__input-date tertiary--text\"\n                        :placeholder=\"$t('placeholderEndDate')\"\n                        readonly\n                        data-hj-allow />\n                </v-col>\n            </v-flex>\n            <v-divider class=\"mx-4 my-2\" />\n            <v-date-picker\n                v-model=\"dates\"\n                full-width\n                flat\n                range\n                class=\"gst-date-picker pa-0\"\n                prev-icon=\"$vuetify.icons.chevronLeft\"\n                next-icon=\"$vuetify.icons.chevronRight\"\n                :locale=\"language\"\n                :min=\"now | date('yyyy-MM-dd')\"\n                :events=\"eventDates\"\n                event-color=\"primary\"\n                no-title />\n            <v-flex class=\"d-flex flex-row pt-0 pa-4\">\n                <v-btn\n                    text\n                    small\n                    :disabled=\"!resetButtonEnabled\"\n                    class=\"text-capitalize gst-btn--reset px-0\"\n                    color=\"primary\"\n                    @click=\"onReset\">\n                    {{ $t('labels.reset') }}\n                </v-btn>\n                <v-btn\n                    text\n                    small\n                    class=\"text-capitalize gst-btn--cancel px-0 ml-auto mr-8\"\n                    color=\"primary\"\n                    @click=\"onCancel\">\n                    {{ $t('labels.cancel') }}\n                </v-btn>\n                <v-btn\n                    text\n                    small\n                    :disabled=\"!confirmButtonEnabled\"\n                    class=\"text-capitalize gst-btn--confirm px-0\"\n                    color=\"primary\"\n                    @click=\"onConfirm\">\n                    {{ $t('labels.confirm') }}\n                </v-btn>\n            </v-flex>\n        </DataLoadingOverlay>\n    </v-list>\n</template>\n<script>\n    import { mapActions, mapState } from 'vuex';\n    import { endOfWeek, isSunday } from 'date-fns';\n    import dateConstants from '@core/utils/constants/date';\n    import { parseString as dateUtilsParseString } from '@core/utils/dateUtils';\n    import IconDate from '@core/shared/assets/icons/date.svg';\n    import SectionTitleSmall from '@core/shared/components/misc/SectionTitleSmall.vue';\n    import DataLoadingOverlay from '@core/shared/components/loading/DataLoadingOverlay.vue';\n\n    export default {\n        name: 'DatePicker',\n        components: {\n            IconDate,\n            SectionTitleSmall,\n            DataLoadingOverlay\n        },\n        i18nOptions: {\n            namespaces: 'shared',\n            keyPrefix: 'components.date.datePicker'\n        },\n        props: {\n            value: {\n                type: Object,\n                default: ( ) => ( { startDate: null, endDate: null } )\n            },\n            modal: {\n                type: Boolean,\n                default: true\n            },\n            onConfirmDo: {\n                type: Function,\n                default: () => {}\n            },\n            loading: {\n                type: Boolean,\n                default: false\n            },\n            eventDates: {\n                type: Array,\n                default: () => []\n            },\n            isConfirmed: {\n                type: Boolean,\n                default: false\n            }\n        },\n        data( ) {\n            return {\n                dates: [],\n                sortedDates: [],\n                lastAppliedDates: []\n            };\n        },\n        computed: {\n            ...mapState( {\n                language: state => state.appState.language\n            } ),\n            confirmButtonEnabled() {\n                return this.dates.length || this.lastAppliedDates.length;\n            },\n            resetButtonEnabled() {\n                return this.isConfirmed && this.dates.length || this.lastAppliedDates.length && this.dates.length;\n            },\n            startDateValue() {\n                return this.sortedDates[0] ?\n                    this.$options.filters.date( this.sortedDates[0], dateConstants.FORMAT.UI_DATE ) :\n                    '';\n            },\n            endDateValue() {\n                return this.sortedDates[1] ?\n                    this.$options.filters.date( this.sortedDates[1], dateConstants.FORMAT.UI_DATE ) :\n                    '';\n            },\n            date() {\n                return {\n                    startDate: this.sortedDates[0] ? dateUtilsParseString( this.sortedDates[ 0 ] ): null,\n                    endDate: this.sortedDates[1] ? dateUtilsParseString( this.sortedDates[ 1 ] ): null\n                };\n            },\n            now() {\n                return new Date();\n            }\n        },\n        watch: {\n            'value': function ( ) {\n                this.setDatesFromPropValue();\n            },\n            dates: function ( newValue ) {\n                this.sortedDates = newValue.length > 0 ?\n                    this.sortDates( newValue ) :\n                    [];\n            }\n        },\n        methods: {\n            ...mapActions( {\n                updateSearch: 'searchState/update'\n            } ),\n            sortDates( dates ) {\n                return dates.slice().sort();\n            },\n            onConfirm( ) {\n                if ( !this.modal ) {\n                    this.$emit( 'confirm', this.date );\n                }\n                else {\n                    this.onConfirmDo( this.date );\n                    this.$emit( 'close' );\n                }\n                this.lastAppliedDates = [ ...this.dates ];\n            },\n            onCancel( ) {\n                this.setDatesFromPropValue();\n                this.$emit( this.modal ? 'close' : 'cancel' );\n            },\n            onReset( ) {\n                this.lastAppliedDates = [ ...this.dates ];\n                this.dates = [];\n            },\n            setDatesFromPropValue( ) {\n                const newValue = this.value;\n                this.dates = [\n                    newValue.startDate ? this.$options.filters.date( newValue.startDate, dateConstants.FORMAT.API_DATE ) : null,\n                    newValue.endDate ? this.$options.filters.date( newValue.endDate, dateConstants.FORMAT.API_DATE ) : null\n                ].filter( item => item );\n                this.lastAppliedDates = [ ...this.dates ];\n            },\n            selectThisWeekend() {\n                this.dates =  [\n                    !isSunday( new Date() ) ? this.$options.filters.date( endOfWeek( new Date(), { weekStartsOn: 0 } ), dateConstants.FORMAT.API_DATE ) : null,\n                    this.$options.filters.date( endOfWeek( new Date(), { weekStartsOn: 1 } ), dateConstants.FORMAT.API_DATE )\n                ].filter( item => item );\n                this.debounceOnConfirm();\n            },\n            selectAllDates() {\n                this.dates = [];\n                this.debounceOnConfirm();\n            },\n            debounceOnConfirm() {\n                setTimeout( () => {\n                    this.onConfirm();\n                }, 100 );\n            }\n        },\n        created( ) {\n            this.setDatesFromPropValue();\n        }\n    };\n</script>\n\n<style lang=\"scss\">\n    @import \"@scssVariables\";\n    @import \"@scssMixins\";\n\n    .gst-date-picker.v-picker {\n        border: none;\n        box-shadow: none;\n\n        .v-date-picker-header {\n            padding: 8px 2px;\n        }\n\n        .v-date-picker-header__value {\n            font-size: font-size( 'l' );\n        }\n\n        .v-date-picker-table {\n            height: auto;\n\n            .v-btn {\n                position: relative;\n\n                .v-date-picker-table__events {\n                    display: flex;\n                    top: 0;\n                    justify-content: flex-start;\n\n                    > div {\n                        position: relative;\n                        margin: 0;\n                    }\n\n                    > div::before {\n                        position: absolute;\n                        top: 50%;\n                        left: 50%;\n                        height: 100%;\n                        width: 100%;\n                        border: 1px solid theme-color( 'white' );\n                        border-radius: border-radius( 'circle' ) !important;\n                        content: \"\";\n                        box-sizing: content-box;\n                        transform: translate( -50%, -50% );\n                    }\n                }\n            }\n        }\n    }\n\n    .gst-date-picker {\n        margin-top: 8px;\n        background-color: theme-color( 'white' );\n        border-radius: border-radius( 'm' ) !important;\n        max-width: 400px;\n\n        @include mobile-only() {\n            max-width: 100%;\n        }\n    }\n\n    .gst-date-picker__list {\n        .v-list-item {\n            min-height: auto;\n        }\n\n        .v-list-item__title {\n            font-size: font-size( 'l' );\n        }\n\n        .v-list-item__icon {\n            margin-right: 16px;\n        }\n    }\n\n    .gst-date-picker__input-date {\n        font-size: font-size( 'l' );\n    }\n\n    .gst-date-picker-icon {\n        .gst-svg-icon {\n            fill: theme-color( 'primary' );\n        }\n    }\n\n    .gst-btn--cancel.v-btn::before,\n    .gst-btn--confirm.v-btn::before,\n    .gst-btn--reset.v-btn::before {\n        background-color: transparent;\n    }\n\n    .gst-search-date-menu__item-icon {\n        .gst-svg-icon {\n            fill: theme-color( 'primary' );\n        }\n    }\n</style>\n<style lang=\"scss\">\n\n</style>\n"]}]}