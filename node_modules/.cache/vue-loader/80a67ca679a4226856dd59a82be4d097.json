{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/shared/components/bonusPoints/BonusPointsChip.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/shared/components/bonusPoints/BonusPointsChip.vue","mtime":1645805363940},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js","mtime":1637061222406},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgZ2V0U3ltYm9sIGFzIGN1cnJlbmN5VXRpbHNHZXRTeW1ib2wgfSBmcm9tICdAY29yZS91dGlscy9jdXJyZW5jeVV0aWxzJzsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdCb251c1BvaW50c0NoaXAnLAogICAgaTE4bk9wdGlvbnM6IHsKICAgICAgICBuYW1lc3BhY2VzOiAnc2hhcmVkJywKICAgICAgICBrZXlQcmVmaXg6ICdjb21wb25lbnRzLmJvbnVzUG9pbnRzLmJvbnVzUG9pbnRzQ2hpcCcsCiAgICB9LAogICAgcHJvcHM6IHsKICAgICAgICBwb2ludHM6IHsKICAgICAgICAgICAgdHlwZTogTnVtYmVyLAogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgICAgZGVmYXVsdDogMAogICAgICAgIH0sCiAgICAgICAgY3VycmVuY3k6IHsKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgICAgZGVmYXVsdDogJycKICAgICAgICB9LAogICAgICAgIGlzTG95YWx0eUN1cnJlbmN5VHlwZU1vbmV5OiB7CiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICBjb250ZW50OiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdDogJycKICAgICAgICB9LAogICAgICAgIHRhZzogewogICAgICAgICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICAgICAgIGRlZmF1bHQ6ICdkaXYnCiAgICAgICAgfQogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgLi4ubWFwR2V0dGVycyAoICdhcHBUZW5hbnQnLCB7CiAgICAgICAgICAgICdpc0xveWFsdHlUeXBlQWxsb3dFYXJuJzogJ2lzTG95YWx0eVR5cGVBbGxvd0Vhcm4nCiAgICAgICAgfSApLAogICAgICAgIGNvbnRlbnRIVE1MKCApIHsKICAgICAgICAgICAgY29uc3QgeyBjb250ZW50IH0gPSB0aGlzOwogICAgICAgICAgICBpZiAoIGNvbnRlbnQgKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gY29udGVudDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHQoIAogICAgICAgICAgICAgICAgdGhpcy5pc0xveWFsdHlDdXJyZW5jeVR5cGVNb25leSA/ICd0aXRsZU1vbmV5JyA6ICd0aXRsZScsIAogICAgICAgICAgICAgICAgeyAKICAgICAgICAgICAgICAgICAgICBjb3VudDogdGhpcy5wb2ludHMsIAogICAgICAgICAgICAgICAgICAgIHBvaW50czogdGhpcy5wb2ludHNGb3JtYXRlZCwgCiAgICAgICAgICAgICAgICAgICAgY3VycmVuY3lTeW1ib2w6IGN1cnJlbmN5VXRpbHNHZXRTeW1ib2woIHRoaXMuY3VycmVuY3kgKSwKICAgICAgICAgICAgICAgICAgICBpbnRlcnBvbGF0aW9uOiB7IGVzY2FwZVZhbHVlOiBmYWxzZSB9LAogICAgICAgICAgICAgICAgICAgIGNvbnRleHQ6IGAke3RoaXMucG9pbnRzfWAKICAgICAgICAgICAgICAgIH0gCiAgICAgICAgICAgICk7CiAgICAgICAgfSwKICAgICAgICBwb2ludHNGb3JtYXRlZCggKSB7CiAgICAgICAgICAgIGlmICggdGhpcy5pc0xveWFsdHlDdXJyZW5jeVR5cGVNb25leSApIHsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRvcHRpb25zLmZpbHRlcnMuY3VycmVuY3lGdWxsKCB0aGlzLnBvaW50cywgdGhpcy5jdXJyZW5jeSApOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gdGhpcy4kb3B0aW9ucy5maWx0ZXJzLmJvbnVzUG9pbnRzKCB0aGlzLnBvaW50cyApOwogICAgICAgIH0KICAgIH0KfTsK"},{"version":3,"sources":["BonusPointsChip.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"BonusPointsChip.vue","sourceRoot":"src/core/shared/components/bonusPoints","sourcesContent":["<template>\n    <component\n        :is=\"tag\"\n        v-if=\"isLoyaltyTypeAllowEarn\"\n        class=\"gst-bp-chip\">\n        <!-- eslint-disable-next-line vue/no-v-html  -->\n        <p v-html=\"contentHTML\"></p>\n    </component>\n</template>\n<script>\n    import { mapGetters } from 'vuex';\n    import { getSymbol as currencyUtilsGetSymbol } from '@core/utils/currencyUtils';\n\n    export default {\n        name: 'BonusPointsChip',\n        i18nOptions: {\n            namespaces: 'shared',\n            keyPrefix: 'components.bonusPoints.bonusPointsChip',\n        },\n        props: {\n            points: {\n                type: Number,\n                required: true,\n                default: 0\n            },\n            currency: {\n                type: String,\n                required: true,\n                default: ''\n            },\n            isLoyaltyCurrencyTypeMoney: {\n                type: Boolean,\n                default: false\n            },\n            content: {\n                type: String,\n                default: ''\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            }\n        },\n        computed: {\n            ...mapGetters ( 'appTenant', {\n                'isLoyaltyTypeAllowEarn': 'isLoyaltyTypeAllowEarn'\n            } ),\n            contentHTML( ) {\n                const { content } = this;\n                if ( content ) {\n                    return content;\n                }\n\n                return this.$t( \n                    this.isLoyaltyCurrencyTypeMoney ? 'titleMoney' : 'title', \n                    { \n                        count: this.points, \n                        points: this.pointsFormated, \n                        currencySymbol: currencyUtilsGetSymbol( this.currency ),\n                        interpolation: { escapeValue: false },\n                        context: `${this.points}`\n                    } \n                );\n            },\n            pointsFormated( ) {\n                if ( this.isLoyaltyCurrencyTypeMoney ) {\n                    return this.$options.filters.currencyFull( this.points, this.currency );\n                }\n\n                return this.$options.filters.bonusPoints( this.points );\n            }\n        }\n    };\n</script>\n<style lang=\"scss\" scoped>\n@import \"@scssVariables\";\n\n.gst-bp-chip {\n    display: inline-flex;\n    padding-top: 2px;\n    padding-bottom: 2px;\n    background: theme-color( 'bonus-points-chip-bg-color' );\n    color: theme-color( 'bonus-points-chip-color' );\n    font-size: font-size( 'xxxs' );\n    font-weight: font-weight( 'black' );\n    min-height: 20px;\n    border-radius: 16px;\n    text-align: center;\n    text-transform: uppercase;\n\n    p {\n        line-height: 12px;\n        padding: 0 12px;\n        margin-top: auto;\n        margin-bottom: auto;\n        vertical-align: bottom;\n    }\n}\n</style>\n"]}]}