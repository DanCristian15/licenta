{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/core/views/search/TheSearch/SearchResultTabsVenues.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/views/search/TheSearch/SearchResultTabsVenues.vue","mtime":1645805364038},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMsIG1hcFN0YXRlLCBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCBpc0VxdWFsIGZyb20gJ2xvZGFzaC9pc0VxdWFsJzsKaW1wb3J0IGVudGl0eUNvbnN0YW50cyBmcm9tICdAY29yZS91dGlscy9jb25zdGFudHMvZW50aXR5JzsKaW1wb3J0IFNlZU1vcmVCdXR0b24gZnJvbSAnQGNvcmUvc2hhcmVkL2NvbXBvbmVudHMvYnV0dG9ucy9TZWVNb3JlQnV0dG9uLnZ1ZSc7CmltcG9ydCBEYXRhTG9hZGluZyBmcm9tICdAY29yZS9zaGFyZWQvY29tcG9uZW50cy9sb2FkaW5nL0RhdGFMb2FkaW5nLnZ1ZSc7CmltcG9ydCBTZWFyY2hSZXN1bHRUYWJzTm9EYXRhIGZyb20gJy4vU2VhcmNoUmVzdWx0VGFic05vRGF0YS52dWUnOwppbXBvcnQgU2VhcmNoUmVzdWx0TWl4aW4gZnJvbSAnLi9TZWFyY2hSZXN1bHRNaXhpbic7CmltcG9ydCB7IFNlYXJjaFJlc3VsdFRhYnNWZW51ZXNMaXN0LCBTZWFyY2hSZXN1bHRUYWJzVmVudWVzRmlsdGVyIH0gZnJvbSAnLi9TZWFyY2hSZXN1bHRUYWJzVmVudWVzL2luZGV4JzsKCmNvbnN0IFNUT1JFX1ZFTlVFUyA9ICd2ZW51ZXMnOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1NlYXJjaFJlc3VsdFRhYnNWZW51ZXMnLAogICAgY29tcG9uZW50czogewogICAgICAgIFNlYXJjaFJlc3VsdFRhYnNOb0RhdGEsCiAgICAgICAgU2VlTW9yZUJ1dHRvbiwKICAgICAgICBTZWFyY2hSZXN1bHRUYWJzVmVudWVzTGlzdCwKICAgICAgICBTZWFyY2hSZXN1bHRUYWJzVmVudWVzRmlsdGVyLAogICAgICAgIERhdGFMb2FkaW5nCiAgICB9LAogICAgbWl4aW5zOiBbIFNlYXJjaFJlc3VsdE1peGluIF0sCiAgICBpMThuT3B0aW9uczogewogICAgICAgIG5hbWVzcGFjZXM6ICdtYWluJywKICAgICAgICBrZXlQcmVmaXg6ICd2aWV3cy5zZWFyY2gudGhlU2VhcmNoLl9jb21wb25lbnRzLnNlYXJjaFJlc3VsdFRhYnMudmVudWVzJwogICAgfSwKICAgIHRlc3RJZE9wdGlvbnM6IHsKICAgICAgICBrZXlQcmVmaXg6ICdzZWFyY2gudmVudWVzVGFiJwogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgLi4ubWFwU3RhdGUoIHsKICAgICAgICAgICAgdmVudWVzOiAgICAgICAgICAgICAgICAgc3RhdGUgPT4gc3RhdGVbU1RPUkVfVkVOVUVTXS5saXN0LAogICAgICAgICAgICBsb2FkaW5nOiAgICAgICAgICAgICAgICBzdGF0ZSA9PiBzdGF0ZVtTVE9SRV9WRU5VRVNdLmxvYWRpbmcsCiAgICAgICAgICAgIHRvdGFsOiAgICAgICAgICAgICAgICAgIHN0YXRlID0+IHN0YXRlW1NUT1JFX1ZFTlVFU10udG90YWxDb3VudCwKICAgICAgICAgICAgZmlsdGVyOiAgICAgICAgICAgICAgICAgc3RhdGUgPT4gc3RhdGVbU1RPUkVfVkVOVUVTXS5maWx0ZXIKICAgICAgICB9ICksCiAgICAgICAgLi4ubWFwR2V0dGVycyggewogICAgICAgICAgICBpc0FsbEl0ZW1zTG9hZGVkOiAgYCR7IFNUT1JFX1ZFTlVFUyB9L2lzQWxsSXRlbXNMb2FkZWRgCiAgICAgICAgfSApLAogICAgICAgIG5vRGF0YSggKSB7CiAgICAgICAgICAgIHJldHVybiAhdGhpcy50b3RhbCAmJiAhdGhpcy52ZW51ZXMubGVuZ3RoICYmICF0aGlzLmxvYWRpbmc7CiAgICAgICAgfSwKICAgICAgICBlbnRpdHlUeXBlKCApIHsKICAgICAgICAgICAgcmV0dXJuIGVudGl0eUNvbnN0YW50cy5UWVBFUy5WRU5VRTsKICAgICAgICB9LAogICAgICAgIHNob3dMb2FkaW5nKCApIHsKICAgICAgICAgICAgcmV0dXJuICF0aGlzLnZlbnVlcy5sZW5ndGggJiYgdGhpcy5sb2FkaW5nOwogICAgICAgIH0sCiAgICAgICAgaGFzSXRlbXMoICkgewogICAgICAgICAgICByZXR1cm4gISF0aGlzLnZlbnVlcy5sZW5ndGg7CiAgICAgICAgfSwKICAgICAgICBzaG93RmlsdGVyKCApIHsKICAgICAgICAgICAgaWYgKCAhdGhpcy5ub0RhdGEgKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyggdGhpcy5maWx0ZXIgKS5zb21lKCB2YWx1ZSA9PiB2YWx1ZSApOwogICAgICAgIH0KICAgIH0sCiAgICB3YXRjaDogewogICAgICAgICdmaWx0ZXInOiB7CiAgICAgICAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uICggbmV3VmFsdWUsIG9sZFZhbHVlICkgewogICAgICAgICAgICAgICAgaXNFcXVhbCggbmV3VmFsdWUsIG9sZFZhbHVlICkgfHwgdGhpcy5sb2FkRGF0YSggKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGVlcDogdHJ1ZQogICAgICAgIH0sCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIC4uLm1hcEFjdGlvbnMoIHsKICAgICAgICAgICAgZ2V0OiBgJHsgU1RPUkVfVkVOVUVTIH0vZ2V0YCwKICAgICAgICB9ICksCiAgICAgICAgbG9hZE5leHRQYWdlICggKSB7CiAgICAgICAgICAgIHRoaXMuZ2V0KCB7IHJlZnJlc2g6IGZhbHNlLCBsb2FkTmV4dFBhZ2U6IHRydWUsIHNlYXJjaDogdGhpcy5zZWFyY2hQYXJhbXMgfSApOwogICAgICAgIH0sCiAgICAgICAgYXN5bmMgbG9hZERhdGEoICkgewogICAgICAgICAgICBjb25zdCBwYXJhbXMgPSB7CiAgICAgICAgICAgICAgICBvZmZzZXQ6IDAsCiAgICAgICAgICAgICAgICBjb3VudDogdHJ1ZSwKICAgICAgICAgICAgICAgIC4uLnRoaXMuc2VhcmNoUGFyYW1zCiAgICAgICAgICAgIH07CgogICAgICAgICAgICBhd2FpdCB0aGlzLmdldCggeyByZWZyZXNoOiB0cnVlLCBzZWFyY2ggOiBwYXJhbXMsIGZpcnN0TG9hZDogZmFsc2UgfSApOwogICAgICAgIH0sCiAgICAgICAgYXN5bmMgb25JbnB1dEZpbHRlckRvKCB2YWx1ZSApIHsKICAgICAgICAgICAgY29uc3QgbmV3RmlsdGVyID0geyAuLi50aGlzLmZpbHRlciwgLi4udmFsdWUgfTsKICAgICAgICAgICAgYXdhaXQgdGhpcy5jaGFuZ2VSb3V0ZVF1ZXJ5KCB7IHF1ZXJ5UGFyYW1zOiBuZXdGaWx0ZXIgfSApOwogICAgICAgICAgICB0aGlzLnVwZGF0ZUZpbHRlciggeyBmaWx0ZXI6IG5ld0ZpbHRlciwgZW50aXR5VHlwZTogdGhpcy5lbnRpdHlUeXBlIH0gKTsKICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCggKSB7CiAgICAgICAgdGhpcy51cGRhdGVGaWx0ZXIoIHsgZmlsdGVyOiB0aGlzLmZpbHRlclNlYXJjaFBhcmFtcywgZW50aXR5VHlwZTogdGhpcy5lbnRpdHlUeXBlIH0gKTsKICAgIH0KfTsK"},{"version":3,"sources":["SearchResultTabsVenues.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SearchResultTabsVenues.vue","sourceRoot":"src/core/views/search/TheSearch","sourcesContent":["<template>\n    <div class=\"gst-tabs__venues gst-tabs-content-narrow\">\n        <SearchResultTabsVenuesFilter\n            v-if=\"showFilter\"\n            class=\"my-4\"\n            @input=\"onInputFilterDo\" />\n        <div v-if=\"!noData\">\n            <DataLoading v-if=\"showLoading\" class=\"mt-5 mb-5 pt-5 pb-5\" />\n            <template v-else-if=\"hasItems\">\n                <SearchResultTabsVenuesList :items=\"venues\" />\n                <SeeMoreButton\n                    v-if=\"!isAllItemsLoaded\"\n                    :data-test-id=\"$testId('buttons.seeMore')\"\n                    class=\"mx-auto d-flex mt-4\"\n                    :loading=\"loading\"\n                    @click=\"loadNextPage()\" />\n            </template>\n        </div>\n        <SearchResultTabsNoData\n            v-else\n            class=\"mt-6\"\n            :title=\"$t('messages.noData.title')\"\n            :content=\"$t('messages.noData.content')\"\n            :type=\"entityType\" />\n    </div>\n</template>\n<script>\n    import { mapActions, mapState, mapGetters } from 'vuex';\n    import isEqual from 'lodash/isEqual';\n    import entityConstants from '@core/utils/constants/entity';\n    import SeeMoreButton from '@core/shared/components/buttons/SeeMoreButton.vue';\n    import DataLoading from '@core/shared/components/loading/DataLoading.vue';\n    import SearchResultTabsNoData from './SearchResultTabsNoData.vue';\n    import SearchResultMixin from './SearchResultMixin';\n    import { SearchResultTabsVenuesList, SearchResultTabsVenuesFilter } from './SearchResultTabsVenues/index';\n\n    const STORE_VENUES = 'venues';\n\n    export default {\n        name: 'SearchResultTabsVenues',\n        components: {\n            SearchResultTabsNoData,\n            SeeMoreButton,\n            SearchResultTabsVenuesList,\n            SearchResultTabsVenuesFilter,\n            DataLoading\n        },\n        mixins: [ SearchResultMixin ],\n        i18nOptions: {\n            namespaces: 'main',\n            keyPrefix: 'views.search.theSearch._components.searchResultTabs.venues'\n        },\n        testIdOptions: {\n            keyPrefix: 'search.venuesTab'\n        },\n        computed: {\n            ...mapState( {\n                venues:                 state => state[STORE_VENUES].list,\n                loading:                state => state[STORE_VENUES].loading,\n                total:                  state => state[STORE_VENUES].totalCount,\n                filter:                 state => state[STORE_VENUES].filter\n            } ),\n            ...mapGetters( {\n                isAllItemsLoaded:  `${ STORE_VENUES }/isAllItemsLoaded`\n            } ),\n            noData( ) {\n                return !this.total && !this.venues.length && !this.loading;\n            },\n            entityType( ) {\n                return entityConstants.TYPES.VENUE;\n            },\n            showLoading( ) {\n                return !this.venues.length && this.loading;\n            },\n            hasItems( ) {\n                return !!this.venues.length;\n            },\n            showFilter( ) {\n                if ( !this.noData ) {\n                    return true;\n                }\n                return Object.values( this.filter ).some( value => value );\n            }\n        },\n        watch: {\n            'filter': {\n                handler: function ( newValue, oldValue ) {\n                    isEqual( newValue, oldValue ) || this.loadData( );\n                },\n                deep: true\n            },\n        },\n        methods: {\n            ...mapActions( {\n                get: `${ STORE_VENUES }/get`,\n            } ),\n            loadNextPage ( ) {\n                this.get( { refresh: false, loadNextPage: true, search: this.searchParams } );\n            },\n            async loadData( ) {\n                const params = {\n                    offset: 0,\n                    count: true,\n                    ...this.searchParams\n                };\n\n                await this.get( { refresh: true, search : params, firstLoad: false } );\n            },\n            async onInputFilterDo( value ) {\n                const newFilter = { ...this.filter, ...value };\n                await this.changeRouteQuery( { queryParams: newFilter } );\n                this.updateFilter( { filter: newFilter, entityType: this.entityType } );\n            }\n        },\n        mounted( ) {\n            this.updateFilter( { filter: this.filterSearchParams, entityType: this.entityType } );\n        }\n    };\n</script>\n"]}]}