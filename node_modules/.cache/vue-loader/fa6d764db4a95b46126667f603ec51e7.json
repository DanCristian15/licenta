{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/misc/CountDown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/misc/CountDown.vue","mtime":1645805363963},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGRpZmZlcmVuY2VJblNlY29uZHMgYXMgZGF0ZVV0aWxzRGlmZmVyZW5jZUluU2Vjb25kcyB9IGZyb20gJ0Bjb3JlL3V0aWxzL2RhdGVVdGlscyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnQ291bnREb3duJywKICAgIHByb3BzOiB7CiAgICAgICAgZGF0ZVRpbWVUaWxsOiB7CiAgICAgICAgICAgIHR5cGU6IERhdGUsCiAgICAgICAgICAgIGRlZmF1bHQ6ICggKSA9PiB7IHJldHVybiBuZXcgRGF0ZSggKTsgfQogICAgICAgIH0sCiAgICAgICAgZm9ybWF0OiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdDogJ21tOnNzJwogICAgICAgIH0sCiAgICAgICAgcmVmcmVzaDogewogICAgICAgICAgICB0eXBlOiBOdW1iZXIsCiAgICAgICAgICAgIGRlZmF1bHQ6IDEgKiAxMDAwCiAgICAgICAgfQogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgc2Vjb25kc1RpbGw6IDEsCiAgICAgICAgfTsKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIHRpbWVyKCApIHsKICAgICAgICAgICAgcmV0dXJuIG5ldyBEYXRlKCAwLCAwLCAwLCAwLCAwLCB0aGlzLnNlY29uZHNUaWxsICk7CiAgICAgICAgfQogICAgfSwKICAgIHdhdGNoOiB7CiAgICAgICAgc2Vjb25kc1RpbGw6IGZ1bmN0aW9uKCBuZXdWYWx1ZSApIHsKICAgICAgICAgICAgaWYgKCBuZXdWYWx1ZSA8PTAgKSB7CiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCAnZmluaXNoJyApOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICByZWZyZXNoU2Vjb25kc1RpbGwoICkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5zZWNvbmRzVGlsbCA9IGRhdGVVdGlsc0RpZmZlcmVuY2VJblNlY29uZHMoIHRoaXMuZGF0ZVRpbWVUaWxsLCBuZXcgRGF0ZSggKSApOwogICAgICAgIH0KICAgIH0sCiAgICBtb3VudGVkKCApIHsKICAgICAgICB0aGlzLnJlZnJlc2hTZWNvbmRzVGlsbCggKTsKICAgICAgICB0aGlzLl9pbnRlcnZhbCA9IHNldEludGVydmFsKCAoICkgPT4gewogICAgICAgICAgICB0aGlzLnJlZnJlc2hTZWNvbmRzVGlsbCggKTsKICAgICAgICB9LCB0aGlzLnJlZnJlc2ggKTsKICAgIH0sCiAgICBkZXN0cm95ZWQoICkgewogICAgICAgIGNsZWFySW50ZXJ2YWwoIHRoaXMuX2ludGVydmFsICk7CiAgICB9Cn07Cg=="},{"version":3,"sources":["CountDown.vue"],"names":[],"mappings":";;;;;;AAMA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CountDown.vue","sourceRoot":"src/core/shared/components/misc","sourcesContent":["<template>\n    <span class=\"gst-count-down quaternary--text\">\n        {{ timer | date( format ) }}\n    </span>\n</template>\n<script>\n    import { differenceInSeconds as dateUtilsDifferenceInSeconds } from '@core/utils/dateUtils';\n\n    export default {\n        name: 'CountDown',\n        props: {\n            dateTimeTill: {\n                type: Date,\n                default: ( ) => { return new Date( ); }\n            },\n            format: {\n                type: String,\n                default: 'mm:ss'\n            },\n            refresh: {\n                type: Number,\n                default: 1 * 1000\n            }\n        },\n        data() {\n            return {\n                secondsTill: 1,\n            };\n        },\n        computed: {\n            timer( ) {\n                return new Date( 0, 0, 0, 0, 0, this.secondsTill );\n            }\n        },\n        watch: {\n            secondsTill: function( newValue ) {\n                if ( newValue <=0 ) {\n                    this.$emit( 'finish' );\n                }\n            }\n        },\n        methods: {\n            refreshSecondsTill( ) {\n                return this.secondsTill = dateUtilsDifferenceInSeconds( this.dateTimeTill, new Date( ) );\n            }\n        },\n        mounted( ) {\n            this.refreshSecondsTill( );\n            this._interval = setInterval( ( ) => {\n                this.refreshSecondsTill( );\n            }, this.refresh );\n        },\n        destroyed( ) {\n            clearInterval( this._interval );\n        }\n    };\n</script>\n"]}]}