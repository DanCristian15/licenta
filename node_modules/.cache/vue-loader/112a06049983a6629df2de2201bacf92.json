{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/shared/components/search/SearchModalContent.vue?vue&type=style&index=0&id=e3b28056&lang=scss&scoped=true&","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/shared/components/search/SearchModalContent.vue","mtime":1645805363971},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/css-loader/dist/cjs.js","mtime":1637061260154},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1637061260528},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/postcss-loader/src/index.js","mtime":1637061260465},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/sass-loader/dist/cjs.js","mtime":1637061279772},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICJAc2Nzc1ZhcmlhYmxlcyI7Cgouc2VhcmNoLWV2ZW50LW1vZGFsX19rZXl3b3JkIC52LWlucHV0X19zbG90OmhvdmVyIHsKICAgIGZpZWxkc2V0IHsKICAgICAgICBib3JkZXItcmFkaXVzOiBib3JkZXItcmFkaXVzKCAnbScgKSAhaW1wb3J0YW50OwogICAgICAgIGJvcmRlci13aWR0aDogMXB4ICFpbXBvcnRhbnQ7CiAgICB9Cn0K"},{"version":3,"sources":["SearchModalContent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgLA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"SearchModalContent.vue","sourceRoot":"src/core/shared/components/search","sourcesContent":["<template>\n    <v-card class=\"gst-search-modal d-flex flex-column\">\n        <HeaderVariant2 class=\"mb-3\" @close=\"$emit('close')\">\n            <TenantLogo :with-redirect=\"false\" class=\"gst-search-modal__logo\" />\n        </HeaderVariant2>\n        <v-card-title class=\"py-0 px-4 flex-grow-0\">\n            <v-flex>\n                <v-row>\n                    <v-col class=\"pt-0\">\n                        <v-text-field\n                            ref=\"keyword\"\n                            v-model=\"keyword\"\n                            color=\"primary\"\n                            :placeholder=\"$t('shared:components.search.searchFieldBanner.placeholder')\"\n                            class=\"pb-0 mb-0 gst-search-input search-event-modal__keyword\"\n                            height=\"33\"\n                            outlined\n                            hide-details\n                            rounded\n                            data-hj-allow\n                            @focus=\"isFocusInputSearchKeyword = true\"\n                            @blur=\"isFocusInputSearchKeyword = false\">\n                            <template slot=\"prepend-inner\" class=\"text-primary\">\n                                <IconSearch\n                                    class=\"gst-search-icon-svg\"\n                                    :class=\"{\n                                        'gst-search-icon-svg-focused': isFocusInputSearchKeyword\n                                    }\" />\n                            </template>\n                        </v-text-field>\n                    </v-col>\n                </v-row>\n                <v-row>\n                    <v-col class=\"pr-0\">\n                        <SearchCity\n                            v-model=\"city\"\n                            :input-search-attrs=\"{ 'single-line': true, 'hide-details': true, color: 'primary', height: 33 }\"\n                            :clearable=\"false\" />\n                    </v-col>\n                    <v-col class=\"pl-0\">\n                        <v-text-field\n                            :value=\"date | period\"\n                            :placeholder=\"$t('shared:components.date.datePicker.placeholder')\"\n                            class=\"mx-1 pt-0 gst-search-input\"\n                            single-line\n                            hide-details\n                            color=\"primary\"\n                            height=\"33\"\n                            readonly\n                            data-hj-allow\n                            @click=\"onClickDate\"\n                            @focus=\"isFocusInputSearchDate = true\"\n                            @blur=\"isFocusInputSearchDate = false\">\n                            <template slot=\"prepend-inner\" class=\"text-primary\">\n                                <IconDate\n                                    class=\"gst-search-icon-svg\"\n                                    :class=\"{\n                                        'gst-search-icon-svg-focused': isFocusInputSearchDate\n                                    }\" />\n                            </template>\n                        </v-text-field>\n                    </v-col>\n                </v-row>\n            </v-flex>\n        </v-card-title>\n        <v-card-text>\n            <SearchResultList v-if=\"hasAtLeastOneSearchParam\" class=\"pt-2\" :see-all-button-route=\"seeAllButtonRoute\" />\n        </v-card-text>\n    </v-card>\n</template>\n\n<script>\n    import { mapActions, mapGetters } from 'vuex';\n    import IconSearch from '@core/shared/assets/icons/search.svg';\n    import IconDate from '@core/shared/assets/icons/date.svg';\n    import SearchCity from '@core/shared/components/search/SearchCity.vue';\n    import CloseModalOnRouteChangeMixin from '@core/mixins/modals/CloseModalOnRouteChange';\n    import SearchResultList from '@core/shared/components/search/SearchResultList.vue';\n    import DatePicker from '@shared/components/date/DatePicker.vue';\n    import HeaderVariant2 from '@core/shared/components/modals/layout/HeaderVariant2.vue';\n\n    export default {\n        name: 'SearchEventModal',\n        components: {\n            IconSearch,\n            SearchCity,\n            SearchResultList,\n            IconDate,\n            HeaderVariant2\n        },\n        mixins: [ CloseModalOnRouteChangeMixin ],\n        data () {\n            return {\n                dialog: false,\n                isFocusInputSearchKeyword: false,\n                isFocusInputSearchDate: false,\n                isConfirmed: false\n            };\n        },\n        computed: {\n            ...mapGetters( {\n                currentQueryObject: 'searchState/currentQueryObject',\n                isEmptyCurrentSearchParams: 'searchState/isEmptyCurrentSearchParams',\n                currentQueryObjectHasOnlyKeyword: 'searchState/currentQueryObjectHasOnlyKeyword',\n            } ),\n            keyword: {\n                get( ) {\n                    return this.$store.state.searchState.current.keyword;\n                },\n                set( value ) {\n                    this.updateSearch( { keyword : value } );\n                }\n            },\n            city: {\n                get( ) {\n                    return this.$store.state.searchState.current.city;\n                },\n                set( value ) {\n                    this.updateSearch( { city : value } );\n                }\n            },\n            date: {\n                get( ) {\n                    return {\n                        startDate: this.$store.state.searchState.current.startDate,\n                        endDate: this.$store.state.searchState.current.endDate\n                    };\n                },\n                set( value ) {\n                    this.updateSearch( { startDate: value.startDate, endDate: value.endDate } );\n                }\n            },\n            hasAtLeastOneSearchParam() {\n                return !this.isEmptyCurrentSearchParams( );\n            },\n            seeAllButtonRoute() {\n                const routeName = this.currentQueryObjectHasOnlyKeyword ? 'search' : 'search.events';\n                return { name: routeName, query: this.currentQueryObject };\n            }\n        },\n        methods: {\n            ...mapActions( {\n                updateSearch: 'searchState/update'\n            } ),\n            onClickDate( ) {\n                if ( this.$vuetify.breakpoint.smAndDown ) {\n                    this.$modal.showBottom(\n                        DatePicker,\n                        {\n                            value: this.date,\n                            isConfirmed: this.isConfirmed,\n                            onConfirmDo: ( dates ) => {\n                                this.updateSearch( { startDate: dates.startDate, endDate: dates.endDate } );\n                                this.isConfirmed = true;\n                            }\n                        },\n                        {\n                            'retain-focus': false,\n                            scrollable: true,\n                            fullscreen: false,\n                            'hide-overlay': false,\n                            transition: 'dialog-bottom-transition'\n                        }\n                    );\n                }\n            }\n        },\n        mounted() {\n            setTimeout( ( ) => {\n                this.$refs.keyword.focus( );\n            }, 100 );\n        }\n    };\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"@scssVariables\";\n\n    .search-event-modal__keyword .v-input__slot:hover {\n        fieldset {\n            border-radius: border-radius( 'm' ) !important;\n            border-width: 1px !important;\n        }\n    }\n</style>\n<style lang=\"scss\">\n    @import \"@scssVariables\";\n    @import \"@scssMixins\";\n\n    .search-event-modal__keyword {\n        .v-text-field__slot input::placeholder {\n            opacity: 0.4;\n        }\n    }\n\n    .gst-search-modal {\n        .gst-search-modal__logo {\n            svg {\n                @include mobile-only {\n                    max-width: 158px;\n                }\n            }\n        }\n\n        .gst-search-icon-svg-focused {\n            .gst-svg-icon {\n                fill: theme-color( 'primary' );\n            }\n        }\n    }\n</style>\n"]}]}