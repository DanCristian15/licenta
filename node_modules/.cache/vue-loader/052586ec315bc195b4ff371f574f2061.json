{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/shared/components/event/DateIcon.vue?vue&type=style&index=0&id=0d75b312&lang=scss&scoped=true&","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/shared/components/event/DateIcon.vue","mtime":1645805363946},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/css-loader/dist/cjs.js","mtime":1637061260154},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1637061260528},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/postcss-loader/src/index.js","mtime":1637061260465},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/sass-loader/dist/cjs.js","mtime":1637061279772},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICJAc2Nzc1ZhcmlhYmxlcyI7CgouZ3N0LWRhdGUtY2FyZCB7CiAgICBtaW4taGVpZ2h0OiA1NXB4OwoKICAgID4gcCB7CiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDsKICAgIH0KCiAgICAuZ3N0LWRhdGUtY2FyZF9fbW9udGggewogICAgICAgIGxpbmUtaGVpZ2h0OiAxMXB4OwogICAgICAgIHBhZGRpbmc6IDNweCAwOwogICAgICAgIGJhY2tncm91bmQ6IHRoZW1lLWNvbG9yKCAnY2FsZW5kYXInICk7CiAgICAgICAgY29sb3I6IHRoZW1lLWNvbG9yKCAnd2hpdGUnICk7CiAgICAgICAgZm9udC1zaXplOiBmb250LXNpemUoICd4eHh4eHMnICk7CiAgICAgICAgZm9udC13ZWlnaHQ6IGZvbnQtd2VpZ2h0KCAnYmxhY2snICk7CiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuOXB4OwogICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7CiAgICB9CgogICAgLmdzdC1kYXRlLWNhcmRfX2RheS1uciB7CiAgICAgICAgbGluZS1oZWlnaHQ6IDE4cHg7CiAgICAgICAgcGFkZGluZzogM3B4IDAgMDsKICAgICAgICBmb250LXNpemU6IGZvbnQtc2l6ZSggJ2wnICk7CiAgICAgICAgZm9udC13ZWlnaHQ6IGZvbnQtd2VpZ2h0KCAnYmxhY2snICk7CiAgICB9CgogICAgLmdzdC1kYXRlLWNhcmRfX2RheSwKICAgIC5nc3QtZGF0ZS1jYXJkX195ZWFyIHsKICAgICAgICBjb2xvcjogdGhlbWUtY29sb3IoICd0ZXJ0aWFyeScgKTsKICAgICAgICBmb250LXNpemU6IGZvbnQtc2l6ZSggJ3h4eHhzJyApOwogICAgICAgIGZvbnQtd2VpZ2h0OiBmb250LXdlaWdodCggJ21lZGl1bScgKTsKICAgICAgICBsZXR0ZXItc3BhY2luZzogLTAuM3B4OwogICAgfQp9Cg=="},{"version":3,"sources":["DateIcon.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyIA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DateIcon.vue","sourceRoot":"src/core/shared/components/event","sourcesContent":["<template>\n    <CardIconContainer\n        :outlined=\"outlined\"\n        class=\"gst-date-card\"\n        flat>\n        <p class=\"gst-date-card__month\">\n            {{ dateMonth }}\n        </p>\n        <h5 class=\"gst-date-card__day-nr\">\n            {{ dateDay }}\n        </h5>\n        <template v-if=\"startDate\">\n            <p v-if=\"isDatesFromAnotherYear\" class=\"gst-date-card__year\">\n                {{ dateYear }}\n            </p>\n            <p v-else class=\"gst-date-card__day\">\n                {{ dateDayOfWeek }}\n            </p>\n        </template>\n    </CardIconContainer>\n</template>\n<script>\n    import {\n        isSameDay as dateUtilsIsSameDay,\n        isSameMonth as dateUtilsIsSameMonth,\n        isSameYear as dateUtilsIsSameYear,\n        isThisYear as dateUtilsIsThisYear\n    } from '@core/utils/dateUtils';\n    import CardIconContainer from '@core/shared/components/misc/CardIconContainer.vue';\n\n    export default {\n        name: 'DateIcon',\n        components: {\n            CardIconContainer\n        },\n        props: {\n            startDate: {\n                type: [ Date, Object ],\n                default: null\n            },\n            endDate: {\n                type: [ Date, Object ],\n                default: null\n            },\n            outlined: {\n                type: Boolean,\n                default: false\n            }\n        },\n        computed: {\n            isSameDay() {\n                const { startDate, endDate } = this;\n                return dateUtilsIsSameDay( startDate, endDate );\n            },\n            isSameMonth() {\n                const { startDate, endDate } = this;\n                return dateUtilsIsSameMonth( startDate, endDate );\n            },\n            isSameYear() {\n                const { startDate, endDate } = this;\n                return dateUtilsIsSameYear( startDate, endDate );\n            },\n            dateMonth() {\n                const { startDate, endDate } = this;\n\n                if ( startDate ) {\n                    const startDateMonth = this.$options.filters.dateMonth( startDate );\n\n                    if ( endDate ) {\n                        const endDateMonth = this.$options.filters.dateMonth( endDate );\n                    \n                        return this.isSameMonth ? startDateMonth : `${startDateMonth}-${endDateMonth}`;\n                    }\n\n                    return startDateMonth;\n                }\n\n                return '-';\n            },\n            dateDay() {\n                const { startDate, endDate } = this;\n\n                if ( startDate ) {\n                    const startDateDay = this.$options.filters.dateDay( startDate );\n\n                    if ( endDate ) {\n                        const endDateDay = this.$options.filters.dateDay( endDate );\n\n                        return this.isSameDay ? startDateDay : `${startDateDay}-${endDateDay}`;\n                    }\n\n                    return startDateDay;\n                }\n\n                return this.$t( '_common:terms.toBeDetermined_abv' );\n            },\n            dateYear() {\n                const { startDate, endDate } = this;\n                const startDateYear = startDate.getFullYear( );\n                    \n                if ( endDate ) {\n                    const endDateYear = endDate.getFullYear( ).toString( ).substr( 2, 4 );\n                    \n                    return this.isSameYear ? startDateYear : `${startDateYear}-${endDateYear}` ;\n                }\n\n                return startDateYear;\n            },\n            dateDayOfWeek() {\n                const { startDate, endDate } = this;\n\n                const startDateDayOfWeek = this.$options.filters.dateDayOfWeek( startDate );\n\n                if ( endDate ) {\n                    const endDateDayOfWeek = this.$options.filters.dateDayOfWeek( endDate );\n\n                    return this.isSameDay ? startDateDayOfWeek : `${startDateDayOfWeek}-${endDateDayOfWeek}`;\n                }\n\n                return startDateDayOfWeek;\n            },\n            isDatesFromAnotherYear( ) {\n                const { startDate, endDate } = this;\n\n                if ( startDate ) {\n                    const isStartDateThisYear = dateUtilsIsThisYear( startDate );\n                    const isEndDateThisYear = endDate ? dateUtilsIsThisYear( endDate ) : dateUtilsIsThisYear( new Date( ) );\n\n                    return !isStartDateThisYear || !isEndDateThisYear ? true : false;\n                }\n\n                return false;\n            }\n        }\n    };\n</script>\n<style lang=\"scss\" scoped>\n@import \"@scssVariables\";\n\n.gst-date-card {\n    min-height: 55px;\n\n    > p {\n        margin-bottom: 0;\n    }\n\n    .gst-date-card__month {\n        line-height: 11px;\n        padding: 3px 0;\n        background: theme-color( 'calendar' );\n        color: theme-color( 'white' );\n        font-size: font-size( 'xxxxxs' );\n        font-weight: font-weight( 'black' );\n        letter-spacing: 0.9px;\n        text-transform: uppercase;\n    }\n\n    .gst-date-card__day-nr {\n        line-height: 18px;\n        padding: 3px 0 0;\n        font-size: font-size( 'l' );\n        font-weight: font-weight( 'black' );\n    }\n\n    .gst-date-card__day,\n    .gst-date-card__year {\n        color: theme-color( 'tertiary' );\n        font-size: font-size( 'xxxxs' );\n        font-weight: font-weight( 'medium' );\n        letter-spacing: -0.3px;\n    }\n}\n</style>\n"]}]}