{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/search/SearchKeywordWithAutocomplete.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/search/SearchKeywordWithAutocomplete.vue","mtime":1645805363971},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB0aHJvdHRsZSBmcm9tICdsb2Rhc2gvdGhyb3R0bGUnOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCBJY29uU2VhcmNoIGZyb20gJ0Bjb3JlL3NoYXJlZC9hc3NldHMvaWNvbnMvc2VhcmNoLnN2Zyc7CmltcG9ydCBJY29uQ2FuY2VsIGZyb20gJ0Bjb3JlL3NoYXJlZC9hc3NldHMvaWNvbnMvY2FuY2VsLnN2Zyc7CmltcG9ydCBTZWFyY2hSZXN1bHRMaXN0IGZyb20gJy4vU2VhcmNoUmVzdWx0TGlzdC52dWUnOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1NlYXJjaEtleXdvcmRXaXRoQXV0b2NvbXBsZXRlJywKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBJY29uU2VhcmNoLAogICAgICAgIFNlYXJjaFJlc3VsdExpc3QsCiAgICAgICAgSWNvbkNhbmNlbAogICAgfSwKICAgIGkxOG5PcHRpb25zOiB7CiAgICAgICAgbmFtZXNwYWNlczogJ3NoYXJlZCcsCiAgICAgICAga2V5UHJlZml4OiAnY29tcG9uZW50cy5zZWFyY2guc2VhcmNoQ2l0eScKICAgIH0sCiAgICBwcm9wczogewogICAgICAgIHZhbHVlOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdDogJycKICAgICAgICB9LAogICAgICAgIGlucHV0U2VhcmNoQXR0cnM6IHsKICAgICAgICAgICAgdHlwZTogT2JqZWN0LAogICAgICAgICAgICBkZWZhdWx0OiAoKSA9PiB7CiAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgICdzaW5nbGUtbGluZSc6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgc29sbzogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAnaGlkZS1kZXRhaWxzJzogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICBmbGF0OiB0cnVlCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICByZWRpcmVjdFRvQXR0cmFjdGlvbjogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiB0cnVlCiAgICAgICAgfSwKICAgICAgICByZWRpcmVjdFRvRXZlbnQ6IHsKICAgICAgICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgICAgICAgZGVmYXVsdDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgcmVkaXJlY3RUb1ZlbnVlOiB7CiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICAgICAgIGRlZmF1bHQ6IHRydWUKICAgICAgICB9LAogICAgICAgIHJlZGlyZWN0VG9TZWFyY2hPbkVudGVyOiB7CiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICByZXN1bHRMaXN0U2VlQWxsQnV0dG9uUm91dGU6IHsKICAgICAgICAgICAgdHlwZTogT2JqZWN0LAogICAgICAgICAgICBkZWZhdWx0OiBudWxsCiAgICAgICAgfQogICAgfSwKICAgIGRhdGEoICkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGlzTWVudU9wZW46IGZhbHNlLAogICAgICAgICAgICBob3Zlck92ZXJNZW51OiBmYWxzZSwKICAgICAgICAgICAgaXNGb2N1c2VkOiBmYWxzZSwKICAgICAgICAgICAgbWVudVRhcmdldFBvc2l0aW9uWDogMCwKICAgICAgICAgICAgbWVudVRhcmdldFBvc2l0aW9uWTogMCwKICAgICAgICB9OwogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgLi4ubWFwR2V0dGVycyggewogICAgICAgICAgICBjdXJyZW50UXVlcnlPYmplY3Q6ICdzZWFyY2hTdGF0ZS9jdXJyZW50UXVlcnlPYmplY3QnLAogICAgICAgICAgICBjdXJyZW50UXVlcnlPYmplY3RPbmx5S2V5d29yZDogJ3NlYXJjaFN0YXRlL2N1cnJlbnRRdWVyeU9iamVjdE9ubHlLZXl3b3JkJywKICAgICAgICB9ICksCiAgICAgICAgc2VhcmNoaW5nKCApIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuaXNWYWx1ZSAoIHRoaXMudmFsdWUgKTsKICAgICAgICB9LAogICAgICAgIHNlZUFsbEJ1dHRvblJvdXRlKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5yZXN1bHRMaXN0U2VlQWxsQnV0dG9uUm91dGUgPyB0aGlzLnJlc3VsdExpc3RTZWVBbGxCdXR0b25Sb3V0ZSA6IHsgbmFtZTogJ3NlYXJjaCcsIHF1ZXJ5OiB0aGlzLmN1cnJlbnRRdWVyeU9iamVjdCB9OwogICAgICAgIH0KICAgIH0sCiAgICB3YXRjaDogewogICAgICAgICckcm91dGUnOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHRoaXMuaXNNZW51T3BlbiA9IGZhbHNlOwogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgb25JbnB1dCggdmFsdWUgKSB7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoICdpbnB1dCcsIHZhbHVlICk7CiAgICAgICAgICAgIHRoaXMub3Blbk1lbnUoIHZhbHVlICk7CiAgICAgICAgfSwKICAgICAgICBpc1ZhbHVlKCB2YWx1ZSApIHsKICAgICAgICAgICAgcmV0dXJuICEhKCB2YWx1ZSAmJiB2YWx1ZS50cmltKCApICE9PSAnJyApOwogICAgICAgIH0sCiAgICAgICAgb25FbnRlcktleURvKCApIHsKICAgICAgICAgICAgaWYgKCB0aGlzLnJlZGlyZWN0VG9TZWFyY2hPbkVudGVyICYmIHRoaXMudmFsdWUudHJpbSggKSAhPT0gJycgKSB7CiAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCggewogICAgICAgICAgICAgICAgICAgIG5hbWU6ICdzZWFyY2gnLAogICAgICAgICAgICAgICAgICAgIHF1ZXJ5OiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGtleXdvcmQ6IHRoaXMudmFsdWUKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9ICkuY2F0Y2goIGVyciA9PiB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCBlcnIubmFtZSAhPSAnTmF2aWdhdGlvbkR1cGxpY2F0ZWQnICkgewogICAgICAgICAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZQogICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCBlcnIgKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9ICk7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIG9uVGFiS2V5RG8oKSB7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoICd0YWIta2V5ZG93bicgKTsKICAgICAgICB9LAogICAgICAgIHRvZ2dsZU1lbnUoICkgewogICAgICAgICAgICB0aGlzLmlzTWVudU9wZW4gPyB0aGlzLmNsb3NlTWVudSggKSA6IHRoaXMub3Blbk1lbnUoICk7CiAgICAgICAgfSwKICAgICAgICBjbG9zZU1lbnUoICkgewogICAgICAgICAgICBzZXRUaW1lb3V0KCAoICkgPT4gewogICAgICAgICAgICAgICAgdGhpcy5pc0ZvY3VzZWQgPSBmYWxzZTsKICAgICAgICAgICAgICAgIHRoaXMuaXNNZW51T3BlbiA9IGZhbHNlOwogICAgICAgICAgICB9LCAyMDAgKTsKICAgICAgICB9LAogICAgICAgIG9wZW5NZW51KCB2YWwgKSB7CiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdmFsID09PSB1bmRlZmluZWQgPyB0aGlzLnZhbHVlIDogdmFsOwoKICAgICAgICAgICAgaWYgKCAhdGhpcy5pc1ZhbHVlKCB2YWx1ZSApICkgewogICAgICAgICAgICAgICAgdGhpcy5pc01lbnVPcGVuID0gZmFsc2U7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29uc3QgbWVudVRhcmdldFBvc2l0aW9uID0gdGhpcy4kcmVmcy5pbnB1dFNlYXJjaC4kZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCApOwoKICAgICAgICAgICAgdGhpcy5tZW51VGFyZ2V0UG9zaXRpb25ZID0gbWVudVRhcmdldFBvc2l0aW9uLmhlaWdodDsKICAgICAgICAgICAgdGhpcy5pc01lbnVPcGVuID0gdHJ1ZTsKICAgICAgICB9LAogICAgICAgIHNlbGVjdEl0ZW0oIHZhbHVlICkgewogICAgICAgICAgICBpZiAoICF0aGlzLnJlZGlyZWN0VG9TZWFyY2hJdGVtICkgewogICAgICAgICAgICAgICAgdGhpcy4kZW1pdCggJ2lucHV0JywgdmFsdWUgKTsKICAgICAgICAgICAgICAgIHRoaXMuY2xvc2VNZW51KCApOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBvbkZvY3VzSW5wdXRTZWFyY2hEbyggKSB7CiAgICAgICAgICAgIHRoaXMuaXNGb2N1c2VkID0gdHJ1ZTsKICAgICAgICAgICAgdGhpcy4kZW1pdCggJ2ZvY3VzJyApOwogICAgICAgIH0sCiAgICAgICAgb25CbHVySW5wdXRTZWFyY2hEbyggKSB7CiAgICAgICAgICAgIHRoaXMuaG92ZXJPdmVyTWVudSB8fCB0aGlzLmNsb3NlTWVudSgpOwogICAgICAgICAgICB0aGlzLiRlbWl0KCAnYmx1cicgKTsKICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCggKSB7CiAgICAgICAgdGhpcy50aHJvdHRsZU1lbnVDbG9zZSA9IHRocm90dGxlKCB0aGlzLmNsb3NlTWVudSwgMjAgKTsKICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggJ3Jlc2l6ZScsIHRoaXMudGhyb3R0bGVNZW51Q2xvc2UgKTsKICAgIH0sCiAgICBkZXN0cm95ZWQoICkgewogICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCAncmVzaXplJywgdGhpcy50aHJvdHRsZU1lbnVDbG9zZSApOwogICAgfQp9Owo="},{"version":3,"sources":["SearchKeywordWithAutocomplete.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SearchKeywordWithAutocomplete.vue","sourceRoot":"src/core/shared/components/search","sourcesContent":["<template>\n    <div class=\"mx-5\">\n        <v-text-field\n            ref=\"inputSearch\"\n            :value=\"value\"\n            :placeholder=\"$t('shared:components.search.searchFieldBanner.placeholder')\"\n            class=\"gst-search-input\"\n            v-bind=\"inputSearchAttrs\"\n            clearable\n            clear-icon=\"mdi-clear\"\n            autocomplete=\"off\"\n            data-hj-allow\n            @click=\"toggleMenu\"\n            @focus=\"onFocusInputSearchDo\"\n            @blur=\"onBlurInputSearchDo\"\n            @input=\"onInput\"\n            @keydown.enter=\"onEnterKeyDo\"\n            @keydown.tab=\"onTabKeyDo\">\n            <template slot=\"prepend-inner\" class=\"text-primary\">\n                <IconSearch\n                    class=\"gst-search-icon-svg\"\n                    :class=\"{\n                        'gst-search-icon-svg-focused': isFocused\n                    }\"\n                    @click=\"toggleMenu\" />\n            </template>\n            <template v-if=\"value !== ''\" slot=\"append\" class=\"text-primary\">\n                <IconCancel class=\"gst-search-icon-cancel-svg u-mouse-pointer\" @click=\"onInput('')\" />\n            </template>\n        </v-text-field>\n        <v-menu\n            v-model=\"isMenuOpen\"\n            attach=\".gst-search-input\"\n            min-width=\"585\"\n            max-height=\"580\"\n            :nudge-left=\"menuTargetPositionX\"\n            :nudge-bottom=\"menuTargetPositionY\"\n            :close-on-content-click=\"false\"\n            absolute\n            allow-overflow\n            content-class=\"gst-search-keyword-with-autocomplete__menu\">\n            <div\n                @mouseover=\"hoverOverMenu = true\"\n                @mouseleave=\"hoverOverMenu = false\">\n                <v-list\n                    class=\"gst-search-keyword-with-autocomplete__menu-content\">\n                    <SearchResultList\n                        v-if=\"searching\"\n                        :redirect-to-attraction=\"redirectToAttraction\"\n                        :redirect-to-event=\"redirectToEvent\"\n                        :redirect-to-venue=\"redirectToVenue\"\n                        :see-all-button-route=\"seeAllButtonRoute\"\n                        search-keyword-only\n                        class=\"gst-search-keyword-with-autocomplete__list\"\n                        @select=\"selectItem\" />\n                </v-list>\n            </div>\n        </v-menu>\n    </div>\n</template>\n\n<script>\n    import throttle from 'lodash/throttle';\n    import { mapGetters } from 'vuex';\n    import IconSearch from '@core/shared/assets/icons/search.svg';\n    import IconCancel from '@core/shared/assets/icons/cancel.svg';\n    import SearchResultList from './SearchResultList.vue';\n\n    export default {\n        name: 'SearchKeywordWithAutocomplete',\n        components: {\n            IconSearch,\n            SearchResultList,\n            IconCancel\n        },\n        i18nOptions: {\n            namespaces: 'shared',\n            keyPrefix: 'components.search.searchCity'\n        },\n        props: {\n            value: {\n                type: String,\n                default: ''\n            },\n            inputSearchAttrs: {\n                type: Object,\n                default: () => {\n                    return {\n                        'single-line': true,\n                        solo: true,\n                        'hide-details': true,\n                        flat: true\n                    };\n                }\n            },\n            redirectToAttraction: {\n                type: Boolean,\n                default: true\n            },\n            redirectToEvent: {\n                type: Boolean,\n                default: true\n            },\n            redirectToVenue: {\n                type: Boolean,\n                default: true\n            },\n            redirectToSearchOnEnter: {\n                type: Boolean,\n                default: false\n            },\n            resultListSeeAllButtonRoute: {\n                type: Object,\n                default: null\n            }\n        },\n        data( ) {\n            return {\n                isMenuOpen: false,\n                hoverOverMenu: false,\n                isFocused: false,\n                menuTargetPositionX: 0,\n                menuTargetPositionY: 0,\n            };\n        },\n        computed: {\n            ...mapGetters( {\n                currentQueryObject: 'searchState/currentQueryObject',\n                currentQueryObjectOnlyKeyword: 'searchState/currentQueryObjectOnlyKeyword',\n            } ),\n            searching( ) {\n                return this.isValue ( this.value );\n            },\n            seeAllButtonRoute() {\n                return this.resultListSeeAllButtonRoute ? this.resultListSeeAllButtonRoute : { name: 'search', query: this.currentQueryObject };\n            }\n        },\n        watch: {\n            '$route': function () {\n                this.isMenuOpen = false;\n            }\n        },\n        methods: {\n            onInput( value ) {\n                this.$emit( 'input', value );\n                this.openMenu( value );\n            },\n            isValue( value ) {\n                return !!( value && value.trim( ) !== '' );\n            },\n            onEnterKeyDo( ) {\n                if ( this.redirectToSearchOnEnter && this.value.trim( ) !== '' ) {\n                    this.$router.push( {\n                        name: 'search',\n                        query: {\n                            keyword: this.value\n                        }\n                    } ).catch( err => {\n                        if ( err.name != 'NavigationDuplicated' ) {\n                            // eslint-disable-next-line no-console\n                            console.error( err );\n                        }\n                    } );\n                }\n            },\n            onTabKeyDo() {\n                this.$emit( 'tab-keydown' );\n            },\n            toggleMenu( ) {\n                this.isMenuOpen ? this.closeMenu( ) : this.openMenu( );\n            },\n            closeMenu( ) {\n                setTimeout( ( ) => {\n                    this.isFocused = false;\n                    this.isMenuOpen = false;\n                }, 200 );\n            },\n            openMenu( val ) {\n                const value = val === undefined ? this.value : val;\n\n                if ( !this.isValue( value ) ) {\n                    this.isMenuOpen = false;\n                    return;\n                }\n                const menuTargetPosition = this.$refs.inputSearch.$el.getBoundingClientRect( );\n\n                this.menuTargetPositionY = menuTargetPosition.height;\n                this.isMenuOpen = true;\n            },\n            selectItem( value ) {\n                if ( !this.redirectToSearchItem ) {\n                    this.$emit( 'input', value );\n                    this.closeMenu( );\n                }\n            },\n            onFocusInputSearchDo( ) {\n                this.isFocused = true;\n                this.$emit( 'focus' );\n            },\n            onBlurInputSearchDo( ) {\n                this.hoverOverMenu || this.closeMenu();\n                this.$emit( 'blur' );\n            }\n        },\n        mounted( ) {\n            this.throttleMenuClose = throttle( this.closeMenu, 20 );\n            window.addEventListener( 'resize', this.throttleMenuClose );\n        },\n        destroyed( ) {\n            window.removeEventListener( 'resize', this.throttleMenuClose );\n        }\n    };\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"@scssVariables\";\n    @import \"@scssMixins\";\n\n    .gst-search-input {\n        position: relative;\n    }\n\n    .gst-search-keyword-with-autocomplete__menu {\n        margin-top: 8px;\n        border-radius: border-radius( 'm' ) !important;\n        margin-left: -12px;\n    }\n\n    .gst-search-keyword-with-autocomplete__menu-content {\n        padding: 16px;\n    }\n\n    .gst-search-keyword-with-autocomplete__list {\n        padding-bottom: 16px;\n    }\n</style>\n"]}]}