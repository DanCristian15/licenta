{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/core/views/home/TheHome/JustForUserEntities/JustForUserEntitiesSwiperDesktop.vue?vue&type=style&index=0&id=5071a0d0&lang=scss&scoped=true&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/views/home/TheHome/JustForUserEntities/JustForUserEntitiesSwiperDesktop.vue","mtime":1645805364032},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/css-loader/dist/cjs.js","mtime":1637061260154},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1637061260528},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/postcss-loader/src/index.js","mtime":1637061260465},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/sass-loader/dist/cjs.js","mtime":1637061279772},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiQHNjc3NWYXJpYWJsZXMiOwpAaW1wb3J0ICJAc2Nzc01peGlucyI7CgouZ3N0LWp1c3QtZm9yLXVzZXItZW50aXRpZXNfX3RpdGxlIHsKICAgIGxpbmUtaGVpZ2h0OiAzNnB4OwogICAgZm9udC1zaXplOiAzNHB4Owp9Cg=="},{"version":3,"sources":["JustForUserEntitiesSwiperDesktop.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuOA;AACA;;AAEA;AACA;AACA;AACA","file":"JustForUserEntitiesSwiperDesktop.vue","sourceRoot":"src/core/views/home/TheHome/JustForUserEntities","sourcesContent":["<template>\n    <div>\n        <div class=\"content-max-width px-3\">\n            <v-flex d-flex flex-row class=\"mx-0 mb-14\">\n                <h4 class=\"gst-just-for-user-entities__title font-weight-bold flex-grow-1\">\n                    {{ $t('title') }}\n                </h4>\n                <v-flex v-if=\"showNavigationButtons\" d-flex flex-row align-center shrink class=\"gst-just-for-user-entities__navigation mx-0\">\n                    <v-btn icon :disabled=\"isSwiperReachStart\" class=\"mr-6\" @click=\"goToPreviousSlides\">\n                        <IconBackArrow />\n                    </v-btn>\n                    <v-btn icon :disabled=\"isSwiperReachEnd\" @click=\"goToNextSlides\">\n                        <IconBackArrow class=\"u-rotate-180\" />\n                    </v-btn>\n                </v-flex>\n            </v-flex>\n        </div>\n        <swiper\n            ref=\"swiper\"\n            :key=\"swiperAllowTouch ? 1 : 2\"\n            class=\"gst-just-for-user-entities__swiper pr-4 pr-md-0\"\n            :options=\"swiperOption\"\n            @slide-change=\"setSwiperNavigationDebounced\"\n            @resize=\"setSwiperNavigationDebounced\">\n            <swiper-slide\n                v-for=\"( chunk, i ) in computedItemsIndexChunks.list\"\n                :key=\"i\"\n                :class=\"{\n                    'content-max-width': items.length <= 4\n                }\"\n                class=\"gst-just-for-user-entities__slide\">\n                <v-row no-gutters>\n                    <v-col cols=\"6\">\n                        <div class=\"pa-2\">\n                            <JustForUserEntitiesEntity :item=\"items[chunk[0]]\" height=\"464\" class=\"u-width-100\" />\n                        </div>\n                    </v-col>\n                    <v-col cols=\"6\">\n                        <template v-if=\"!(i % 2)\">\n                            <v-row no-gutters>\n                                <div class=\"pa-2 u-width-100 u-box-sizing-border-box\">\n                                    <JustForUserEntitiesEntity :item=\"items[chunk[1]]\" height=\"224\" class=\"u-width-100\" />\n                                </div>\n                            </v-row>\n                            <v-row no-gutters>\n                                <v-col cols=\"6\">\n                                    <div class=\"pa-2 u-width-100 u-box-sizing-border-box\">\n                                        <JustForUserEntitiesEntity :item=\"items[chunk[2]]\" height=\"224\" class=\"u-width-100\" />\n                                    </div>\n                                </v-col>\n                                <v-col cols=\"6\">\n                                    <div class=\"pa-2 u-width-100 u-box-sizing-border-box\">\n                                        <JustForUserEntitiesEntity :item=\"items[chunk[3]]\" height=\"224\" class=\"u-width-100\" />\n                                    </div>\n                                </v-col>\n                            </v-row>\n                        </template>\n                        <template v-else>\n                            <v-row no-gutters>\n                                <v-col cols=\"6\">\n                                    <div class=\"pa-2 u-width-100 u-box-sizing-border-box\">\n                                        <JustForUserEntitiesEntity :item=\"items[chunk[1]]\" height=\"224\" class=\"u-width-100\" />\n                                    </div>\n                                </v-col>\n                                <v-col cols=\"6\">\n                                    <div class=\"pa-2 u-width-100 u-box-sizing-border-box\">\n                                        <JustForUserEntitiesEntity :item=\"items[chunk[2]]\" height=\"224\" class=\"u-width-100\" />\n                                    </div>\n                                </v-col>\n                            </v-row>\n                            <v-row no-gutters>\n                                <div class=\"pa-2 u-width-100 u-box-sizing-border-box\">\n                                    <JustForUserEntitiesEntity :item=\"items[chunk[3]]\" height=\"224\" class=\"u-width-100\" />\n                                </div>\n                            </v-row>\n                        </template>\n                    </v-col>\n                </v-row>\n            </swiper-slide>\n        </swiper>\n    </div>\n</template>\n<script>\n    import debounce from 'lodash/debounce';\n    import { getNearestUpperMultiple as mathUtilsGetNearestUpperMultiple } from '@utils/mathUtils';\n    import IconBackArrow from '@core/shared/assets/icons/back_arrow.svg';\n    import JustForUserEntitiesEntity from './JustForUserEntitiesEntity.vue';\n\n    const MIN_ENTITIES = 4;\n\n    export default {\n        name: 'JustForUserEntitiesSwiperDesktop',\n        components: {\n            IconBackArrow,\n            JustForUserEntitiesEntity\n        },\n        i18nOptions: {\n            namespaces: 'main',\n            keyPrefix: 'views.home.theHome._components.justForUserEntities',\n        },\n        props: {\n            items: {\n                type: Array,\n                default: () => []\n            }\n        },\n        data() {\n            return {\n                isSwiperReachStart: true,\n                isSwiperReachEnd: false,\n            };\n        },\n        computed: {\n            computedItemsIndexChunks() {\n                const itemsLengthNearestUpperMultiple = mathUtilsGetNearestUpperMultiple( this.items.length, 4 );\n                const difference = itemsLengthNearestUpperMultiple - this.items.length;\n\n                const itemsArrayInitialIndexes = Array.from( { length: this.items.length }, ( value, index ) => index );\n                const itemsArrayContinuedIndexes = difference ? Array.from( { length: difference }, ( value, index ) => index ) : [];\n                const itemsArrayFinalIndexes = itemsArrayInitialIndexes.concat( itemsArrayContinuedIndexes );\n\n                const itemsArrayFinalIndexesChunked = itemsArrayFinalIndexes.reduce( ( all, one, i ) => {\n                    const chunk = Math.floor( i/4 );\n                    all[chunk] = [].concat( ( all[chunk]||[] ), one );\n                    return all;\n                }, [] );\n\n                return {\n                    list: itemsArrayFinalIndexesChunked,\n                    length: itemsArrayFinalIndexes.length\n                };\n            },\n            showNavigationButtons( ) {\n                if ( !this.$vuetify.breakpoint.lgAndDown && this.computedItemsIndexChunks.length === ( MIN_ENTITIES*2 ) )  {\n                    return false;\n                }\n                if ( this.$vuetify.breakpoint.lgAndUp && this.computedItemsIndexChunks.length === ( MIN_ENTITIES*2 ) )  {\n                    return false;\n                }\n                if ( this.$vuetify.breakpoint.mdAndUp && this.computedItemsIndexChunks.length > MIN_ENTITIES ) {\n                    return true;\n                }\n                return false;\n            },\n            swiperAllowTouch( ) {\n                return !this.$vuetify.breakpoint.mdAndUp;\n            },\n            swiperOption( ) {\n                const { thresholds, scrollBarWidth } = this.$vuetify.breakpoint;\n\n                let thresholdDefaultOptions, thresholdMdOptions, thresholLgOptions;\n\n                switch ( this.computedItemsIndexChunks.length ) {\n                    case MIN_ENTITIES:\n                        thresholLgOptions = thresholdMdOptions = thresholdDefaultOptions = {\n                            slidesPerView: 1,\n                            centeredSlides: true\n                        };\n\n                        break;\n                    case MIN_ENTITIES * 2:\n                        thresholdMdOptions = thresholLgOptions = {\n                            slidesPerView: 2,\n                            centeredSlides: false\n                        };\n                        thresholdDefaultOptions = {\n                            slidesPerView: 1,\n                            centeredSlides: true\n                        };\n\n                        break;\n                    default:\n                        thresholLgOptions = {\n                            slidesPerView: 2.5,\n                            centeredSlides: false\n                        };\n                        thresholdMdOptions = {\n                            slidesPerView: 1.8,\n                            centeredSlides: false\n                        };\n                        thresholdDefaultOptions = {\n                            slidesPerView: 1.2,\n                            centeredSlides: false\n                        };\n\n                        break;\n                }\n\n                return {\n                    ...thresholdDefaultOptions,\n                    freeMode: false,\n                    spaceBetween: 0,\n                    allowTouchMove: this.swiperAllowTouch,\n                    breakpoints: {\n                        [ thresholds.md - scrollBarWidth ]: {\n                            spaceBetween: 0,\n                            freeMode: false,\n                            allowTouchMove: this.swiperAllowTouch,\n                            ...thresholdMdOptions\n                        },\n                        [ thresholds.lg - scrollBarWidth ]: {\n                            spaceBetween: 0,\n                            freeMode: false,\n                            allowTouchMove: this.swiperAllowTouch,\n                            ...thresholLgOptions\n                        }\n                    }\n                };\n            },\n        },\n        methods: {\n            goToPreviousSlides( ) {\n                const swiper = this.$refs.swiper.$swiper;\n                swiper.slidePrev(  );\n                this.isSwiperReachStart = swiper.isBeginning;\n                this.isSwiperReachEnd = swiper.isEnd;\n            },\n            goToNextSlides( ) {\n                const swiper = this.$refs.swiper.$swiper;\n                swiper.slideNext(  );\n                this.isSwiperReachEnd = swiper.isEnd;\n            },\n            setSwiperNavigationDebounced: debounce( function ( ) {\n                const swiper = this.$refs.swiper.$swiper;\n                this.isSwiperReachStart = swiper.isBeginning;\n                this.isSwiperReachEnd = swiper.isEnd;\n            }, 30 )\n        }\n    };\n</script>\n<style lang=\"scss\" scoped>\n    @import \"@scssVariables\";\n    @import \"@scssMixins\";\n\n    .gst-just-for-user-entities__title {\n        line-height: 36px;\n        font-size: 34px;\n    }\n</style>"]}]}