{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/core/views/user/TheUserFavorites/UserFavoritesTabsAttractions.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/views/user/TheUserFavorites/UserFavoritesTabsAttractions.vue","mtime":1645805364040},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/css-loader/dist/cjs.js","mtime":1637061260154},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1637061260528},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/postcss-loader/src/index.js","mtime":1637061260465},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/sass-loader/dist/cjs.js","mtime":1637061279772},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5nc3QtdXNlci1mYXZvcml0ZS10YWJzLWF0dHJhY3Rpb25zX19uby1maWx0ZXJlZC1kYXRhIHsKICAgIC5nc3Qtbm8tZmlsdGVyZWQtZGF0YV9faWNvbiAudi1pY29uX19jb21wb25lbnQgewogICAgICAgIGhlaWdodDogMTI3cHg7CiAgICAgICAgd2lkdGg6IDEwOXB4OwogICAgfQp9Cg=="},{"version":3,"sources":["UserFavoritesTabsAttractions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4KA;AACA;AACA;AACA;AACA;AACA","file":"UserFavoritesTabsAttractions.vue","sourceRoot":"src/core/views/user/TheUserFavorites","sourcesContent":["<template>\n    <div v-if=\"!showNoData\">\n        <UserFavoriteTabsAttractionsFilter\n            :sort=\"sort\"\n            :filter=\"filter\"\n            class=\"mt-3\" />\n        <DataLoading v-if=\"showLoading\" class=\"mt-5 mb-5 pt-5 pb-5\" />\n        <template v-else-if=\"items.length\">\n            <UserFavoriteTabsAttractionsList \n                :items=\"items\"\n                class=\"mt-4\" />\n            <SeeMoreButton\n                v-if=\"showLoadMore\"\n                :data-test-id=\"$testId('buttons.seeMore')\"\n                class=\"mx-auto d-flex mt-4\"\n                :loading=\"loading\"\n                @click=\"loadNextPage()\" />\n        </template>\n        <NoFilteredData v-else\n            :message=\"$t('messages.noFilterData')\"\n            :icon-v-text=\"'$vuetify.icons.searchFavoriteData'\"\n            class=\"gst-user-favorite-tabs-attractions__no-filtered-data mt-8 mt-md-7\"\n            @reset-filters=\"resetFilters\" />\n    </div>\n    <UserFavoritesTabsNoData \n        v-else\n        :title=\"$t('noData.title')\"\n        :content=\"$t('noData.content')\"\n        :card=\"noDataCardCardData\"\n        :type=\"entityType\" />\n</template>\n<script>\n    import { mapActions, mapGetters, mapState } from 'vuex';\n    import SeeMoreButton from '@core/shared/components/buttons/SeeMoreButton';\n    import UserFavoritesTabsNoData from '@views/user/TheUserFavorites/UserFavoritesTabsNoData';\n    import entityConstants from '@core/utils/constants/entity';\n    import NoFilteredData from '@core/shared/components/misc/NoFilteredData.vue';\n    import DataLoading from '@core/shared/components/loading/DataLoading.vue';\n    import { \n        UserFavoriteTabsAttractionsFilter,\n        UserFavoriteTabsAttractionsList,\n\n    } from './UserFavoritesTabsAttractions/index';\n    \n    export default {\n        name: 'UserFavoritesTabsAttractions',\n        components: {\n            UserFavoriteTabsAttractionsFilter,\n            UserFavoriteTabsAttractionsList,\n            DataLoading,\n            SeeMoreButton,\n            UserFavoritesTabsNoData,\n            NoFilteredData\n        },\n        i18nOptions: {\n            namespaces: 'main',\n            keyPrefix: 'views.userFavorites.theUserFavorites._components.userFavoritesTabs.attractions'\n        },\n        testIdOptions: {\n            keyPrefix: 'userFavorites.attractionsTab'\n        },\n        data() {\n            const defaultSort = { value: 'asc', 'display': this.$t( '_common:terms.sortAlphabetical_abv' ) };\n\n            return {\n                loading: false,\n                sort: {\n                    value: defaultSort,\n                    options: [\n                        defaultSort,\n                        { value: 'desc', 'display': this.$t( '_common:terms.sortAlphabeticalDesc_abv' ) },\n                    ]\n                },\n                filter: { \n                    category: null\n                }\n            };\n        },\n        computed: {\n            ...mapState( {\n                items: state => state.user.favoriteEntities.list[ entityConstants.TYPES.ATTRACTION ],\n                total: state => state.user.favoriteEntities.totalCount[ entityConstants.TYPES.ATTRACTION ],\n            } ),\n            ...mapGetters( {\n                isAllItemsLoaded: 'user/favoriteEntities/isAllItemsLoaded'\n            } ),\n            showNoData( ) {\n                return !this.total && !this.items.length && !this.loading;\n            },\n            showLoading( ) {\n                return !this.items.length && this.loading;\n            },\n            showLoadMore( ) {\n                return !this.isAllItemsLoaded( entityConstants.TYPES.ATTRACTION );\n            },\n            noDataCardCardData() {\n                return {\n                    title: this.$t( 'noData.card.title' ), \n                    content: { \n                        event: this.$t( 'noData.card.content.event' ), \n                        tickets: this.$t( 'noData.card.content.tickets' ), \n                        favorite: this.$t( 'noData.card.content.favorite' ) \n                    }\n                };\n            },\n            entityType() {\n                return entityConstants.TYPES.ATTRACTION;\n            },\n            queryLimit() {\n                return this.$vuetify.breakpoint.mdAndUp ? 18 : 6;\n            },\n            querySearch( ) {\n                const filter = this.filter.category ? { \n                    categoryId: this.filter.category ? this.filter.category.search : null\n                } : null;\n\n                return {\n                    sort: this.sort.value.value,\n                    filter\n                };\n            }\n        },\n        watch: {\n            'querySearch': {\n                handler: function ( ) {\n                    this.load( );\n                },\n                deep: true\n            } \n        },\n        methods: {\n            ...mapActions( {\n                get: 'user/favoriteEntities/get'\n            } ),\n            async loadNextPage ( ) {\n                this.loading = true;\n                await this.get( \n                    { \n                        refresh: false, \n                        loadNextPage: true, \n                        search: { \n                            type: this.entityType, \n                            limit: this.queryLimit, \n                            ...this.querySearch \n                        } \n                    } \n                );\n                this.loading = false;\n            },\n            async load ( ) {\n                this.loading = true;\n                await this.get( \n                    { \n                        refresh: true, \n                        loadNextPage: false, \n                        search: { \n                            type: this.entityType, \n                            limit: this.queryLimit, \n                            ...this.querySearch \n                        } \n                    } \n                );\n                this.loading = false;\n            },\n            resetFilters( ) {\n                this.$set( this.filter, 'category', null );\n            }\n        },\n    };\n</script>\n\n<style lang=\"scss\">\n    .gst-user-favorite-tabs-attractions__no-filtered-data {\n        .gst-no-filtered-data__icon .v-icon__component {\n            height: 127px;\n            width: 109px;\n        }\n    }\n</style>\n"]}]}