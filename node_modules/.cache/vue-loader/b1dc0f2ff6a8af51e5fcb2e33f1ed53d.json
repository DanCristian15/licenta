{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/views/search/TheSearch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/views/search/TheSearch.vue","mtime":1645805364034},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js","mtime":1637061222406},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMsIG1hcFN0YXRlLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCc7CmltcG9ydCBpbWFnZUNvbnN0YW50cyBmcm9tICdAY29yZS91dGlscy9jb25zdGFudHMvaW1hZ2VQYXRocyc7CmltcG9ydCBudW1iZXJDb25zdGFudHMgZnJvbSAnQGNvcmUvdXRpbHMvY29uc3RhbnRzL251bWJlcic7CmltcG9ydCBlbnRpdHlDb25zdGFudHMgZnJvbSAnQGNvcmUvdXRpbHMvY29uc3RhbnRzL2VudGl0eSc7CmltcG9ydCBhc3luY1BhcmFsbGVsIGZyb20gJ0Bjb3JlL3V0aWxzL2FzeW5jUGFyYWxsZWwnOwppbXBvcnQgRGV0YWlsQmFubmVyIGZyb20gJ0Bjb3JlL3NoYXJlZC9jb21wb25lbnRzL21pc2MvRGV0YWlsQmFubmVyLnZ1ZSc7CmltcG9ydCBEYXRhTG9hZGluZyBmcm9tICdAY29yZS9zaGFyZWQvY29tcG9uZW50cy9sb2FkaW5nL0RhdGFMb2FkaW5nLnZ1ZSc7CmltcG9ydCB7IFNlYXJjaFJlc3VsdFRhYnMgfSBmcm9tICcuL1RoZVNlYXJjaC9pbmRleCc7CmltcG9ydCBTZWFyY2hSZXN1bHRNaXhpbiBmcm9tICcuL1RoZVNlYXJjaC9TZWFyY2hSZXN1bHRNaXhpbic7Cgpjb25zdCBTVE9SRV9WRU5VRVMgPSAndmVudWVzJzsKY29uc3QgU1RPUkVfRVZFTlRTID0gJ2V2ZW50cyc7CmNvbnN0IFNUT1JFX0FUVFJBQ1RJT05TID0gJ2F0dHJhY3Rpb25zJzsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdTZWFyY2gnLAogICAgY29tcG9uZW50czogewogICAgICAgIFNlYXJjaFJlc3VsdFRhYnMsCiAgICAgICAgRGV0YWlsQmFubmVyLAogICAgICAgIERhdGFMb2FkaW5nCiAgICB9LAogICAgbWl4aW5zOiBbIFNlYXJjaFJlc3VsdE1peGluIF0sCiAgICBpMThuT3B0aW9uczogewogICAgICAgIG5hbWVzcGFjZXM6ICdtYWluJywKICAgICAgICBrZXlQcmVmaXg6ICd2aWV3cy5zZWFyY2gudGhlU2VhcmNoJwogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgZ3JhZGllbnQ6ICd0byBib3R0b20sIHJnYmEoMCwwLDAsLjEpLCByZ2JhKDAsMCwwLC41KScKICAgICAgICB9OwogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgLi4ubWFwR2V0dGVycyggewogICAgICAgICAgICBjdXJyZW50U2VhcmNoUGFyYW1zOiAnc2VhcmNoU3RhdGUvY3VycmVudFNlYXJjaFBhcmFtcycsCiAgICAgICAgfSApLAogICAgICAgIC4uLm1hcFN0YXRlKCB7CiAgICAgICAgICAgIHZlbnVlc0ZpcnN0TG9hZDogICAgICAgICAgICAgICAgc3RhdGUgPT4gc3RhdGVbU1RPUkVfVkVOVUVTXS5saXN0Rmlyc3RMb2FkLAogICAgICAgICAgICBhdHRyYWN0aW9uc0ZpcnN0TG9hZDogICAgICAgICAgIHN0YXRlID0+IHN0YXRlW1NUT1JFX0FUVFJBQ1RJT05TXS5saXN0Rmlyc3RMb2FkLAogICAgICAgICAgICBldmVudHNGaXJzdExvYWQ6ICAgICAgICAgICAgICAgIHN0YXRlID0+IHN0YXRlW1NUT1JFX0VWRU5UU10ubGlzdEZpcnN0TG9hZCwKICAgICAgICAgICAgdmVudWVzVG90YWxDb3VudDogICAgICAgICAgICAgICBzdGF0ZSA9PiBzdGF0ZVtTVE9SRV9WRU5VRVNdLnRvdGFsQ291bnQsCiAgICAgICAgICAgIGF0dHJhY3Rpb25zVG90YWxDb3VudDogICAgICAgICAgc3RhdGUgPT4gc3RhdGVbU1RPUkVfQVRUUkFDVElPTlNdLnRvdGFsQ291bnQsCiAgICAgICAgICAgIGV2ZW50c1RvdGFsQ291bnQ6ICAgICAgICAgICAgICAgc3RhdGUgPT4gc3RhdGVbU1RPUkVfRVZFTlRTXS50b3RhbENvdW50LAogICAgICAgIH0gKSwKICAgICAgICB0YWJzKCkgewogICAgICAgICAgICByZXR1cm4gIFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBpZDogMCwKICAgICAgICAgICAgICAgICAgICB0aXRsZTogdGhpcy4kdCggJ19jb21wb25lbnRzLnNlYXJjaFJlc3VsdFRhYnMuYWxsLnRpdGxlJyApLAogICAgICAgICAgICAgICAgICAgIHRvOiB7IG5hbWU6ICdzZWFyY2gnLCBxdWVyeTogdGhpcy4kcm91dGUucXVlcnkgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBpZDogMSwKICAgICAgICAgICAgICAgICAgICB0aXRsZTogdGhpcy4kdCggJ19jb21wb25lbnRzLnNlYXJjaFJlc3VsdFRhYnMuYXR0cmFjdGlvbnMudGl0bGUnICksCiAgICAgICAgICAgICAgICAgICAgdG86IHsgbmFtZTogJ3NlYXJjaC5hdHRyYWN0aW9ucycsIHF1ZXJ5OiB0aGlzLiRyb3V0ZS5xdWVyeSB9LAogICAgICAgICAgICAgICAgICAgIHRvdGFsOiB0aGlzLnRvdGFsRm9ybWF0ZWQoIHRoaXMuYXR0cmFjdGlvbnNUb3RhbENvdW50ICkKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgaWQ6IDIsCiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHRoaXMuJHQoICdfY29tcG9uZW50cy5zZWFyY2hSZXN1bHRUYWJzLmV2ZW50cy50aXRsZScgKSwKICAgICAgICAgICAgICAgICAgICB0bzogeyBuYW1lOiAnc2VhcmNoLmV2ZW50cycsIHF1ZXJ5OiB0aGlzLiRyb3V0ZS5xdWVyeSB9LAogICAgICAgICAgICAgICAgICAgIHRvdGFsOiB0aGlzLnRvdGFsRm9ybWF0ZWQoIHRoaXMuZXZlbnRzVG90YWxDb3VudCApCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGlkOiAzLAogICAgICAgICAgICAgICAgICAgIHRpdGxlOiB0aGlzLiR0KCAnX2NvbXBvbmVudHMuc2VhcmNoUmVzdWx0VGFicy52ZW51ZXMudGl0bGUnICksCiAgICAgICAgICAgICAgICAgICAgdG86IHsgbmFtZTogJ3NlYXJjaC52ZW51ZXMnLCBxdWVyeTogdGhpcy4kcm91dGUucXVlcnkgfSwKICAgICAgICAgICAgICAgICAgICB0b3RhbDogdGhpcy50b3RhbEZvcm1hdGVkKCB0aGlzLnZlbnVlc1RvdGFsQ291bnQgKQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgXTsKICAgICAgICB9LAogICAgICAgIGZpcnN0TG9hZCgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMudmVudWVzRmlyc3RMb2FkIHx8IHRoaXMuYXR0cmFjdGlvbnNGaXJzdExvYWQgfHwgdGhpcy5ldmVudHNGaXJzdExvYWQ7CiAgICAgICAgfSwKICAgICAgICB0b3RhbENvdW50KCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy52ZW51ZXNUb3RhbENvdW50ICsgdGhpcy5hdHRyYWN0aW9uc1RvdGFsQ291bnQgKyB0aGlzLmV2ZW50c1RvdGFsQ291bnQ7CiAgICAgICAgfSwKICAgICAgICB0aXRsZSgpIHsKICAgICAgICAgICAgbGV0IHsga2V5d29yZCB9ID0gdGhpcy4kcm91dGUucXVlcnk7CgogICAgICAgICAgICByZXR1cm4ga2V5d29yZCA/CiAgICAgICAgICAgICAgICB0aGlzLiR0KCAndGl0bGVLZXl3b3JkJywgeyB0b3RhbENvdW50OiB0aGlzLnRvdGFsRm9ybWF0ZWQoIHRoaXMudG90YWxDb3VudCApLCBrZXl3b3JkOiBrZXl3b3JkLCBpbnRlcnBvbGF0aW9uOiB7IGVzY2FwZVZhbHVlOiBmYWxzZSB9IH0gKSA6CiAgICAgICAgICAgICAgICB0aGlzLiR0KCAndGl0bGVBbGwnLCB7IHRvdGFsQ291bnQ6IHRoaXMudG90YWxGb3JtYXRlZCggdGhpcy50b3RhbENvdW50ICkgfSApOwogICAgICAgIH0sCiAgICAgICAgYmFubmVySW1hZ2UoKSB7CiAgICAgICAgICAgIHJldHVybiBpbWFnZUNvbnN0YW50cy5CQU5ORVJTLlNFQVJDSDsKICAgICAgICB9CiAgICB9LAogICAgd2F0Y2g6IHsKICAgICAgICAnc2VhcmNoUGFyYW1zJzogewogICAgICAgICAgICBoYW5kbGVyOiBmdW5jdGlvbiAoIG5ld1ZhbHVlLCBvbGRWYWx1ZSApIHsKICAgICAgICAgICAgICAgIGlmICggbmV3VmFsdWUgJiYgb2xkVmFsdWUgJiYgKCBuZXdWYWx1ZS5rZXl3b3JkICE9PSBvbGRWYWx1ZS5rZXl3b3JkICkgKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2FkRGF0YSggKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGVlcDogdHJ1ZQogICAgICAgIH0sCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIC4uLm1hcEFjdGlvbnMoIHsKICAgICAgICAgICAgZ2V0RXZlbnRzOiAgICAgICAgICAgICAgICAgICAgICAgICAgYCR7IFNUT1JFX0VWRU5UUyB9L2dldGAsCiAgICAgICAgICAgIGdldEF0dHJhY3Rpb25zOiAgICAgICAgICAgICAgICAgICAgIGAkeyBTVE9SRV9BVFRSQUNUSU9OUyB9L2dldGAsCiAgICAgICAgICAgIGdldFZlbnVlczogICAgICAgICAgICAgICAgICAgICAgICAgIGAkeyBTVE9SRV9WRU5VRVMgfS9nZXRgLAogICAgICAgIH0gKSwKICAgICAgICB0b3RhbEZvcm1hdGVkKCB0b3RhbCApIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuJG9wdGlvbnMuZmlsdGVycy5udW1iZXIoIHRvdGFsLCBudW1iZXJDb25zdGFudHMuRk9STUFULklOVEVHRVIgKTsKICAgICAgICB9LAogICAgICAgIGFzeW5jIGxvYWREYXRhKCApIHsKICAgICAgICAgICAgY29uc3QgcGFyYW1zID0gewogICAgICAgICAgICAgICAgb2Zmc2V0OiAwLAogICAgICAgICAgICAgICAgY291bnQ6IHRydWUsCiAgICAgICAgICAgICAgICAuLi50aGlzLnNlYXJjaFBhcmFtcywKICAgICAgICAgICAgfTsKCiAgICAgICAgICAgIHRoaXMudXBkYXRlRmlsdGVyKCB7IGZpbHRlcjogdGhpcy5maWx0ZXJTZWFyY2hQYXJhbXMsIGVudGl0eVR5cGU6IGVudGl0eUNvbnN0YW50cy5UWVBFUy5BVFRSQUNUSU9OIH0gKTsKICAgICAgICAgICAgdGhpcy51cGRhdGVGaWx0ZXIoIHsgZmlsdGVyOiB0aGlzLmZpbHRlclNlYXJjaFBhcmFtcywgZW50aXR5VHlwZTogZW50aXR5Q29uc3RhbnRzLlRZUEVTLkVWRU5UIH0gKTsKICAgICAgICAgICAgdGhpcy51cGRhdGVGaWx0ZXIoIHsgZmlsdGVyOiB0aGlzLmZpbHRlclNlYXJjaFBhcmFtcywgZW50aXR5VHlwZTogZW50aXR5Q29uc3RhbnRzLlRZUEVTLlZFTlVFIH0gKTsKCiAgICAgICAgICAgIGF3YWl0IGFzeW5jUGFyYWxsZWwoIFsKICAgICAgICAgICAgICAgIGFzeW5jICggKSA9PiB7IAogICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlYXJjaFBhcmFtcyA9IHRoaXMuJHJvdXRlLnF1ZXJ5LnNvcnQgPyB7IC4uLnBhcmFtcywgc29ydDogdGhpcy4kcm91dGUucXVlcnkuc29ydCB9IDogcGFyYW1zOwogICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0RXZlbnRzKCB7IHJlZnJlc2g6IHRydWUsIHNlYXJjaCA6IHNlYXJjaFBhcmFtcywgdXNlckFuYWx5dGljczogdHJ1ZSB9ICk7CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgYXN5bmMgKCApID0+IHsgdGhpcy5nZXRBdHRyYWN0aW9ucyggeyByZWZyZXNoOiB0cnVlLCBzZWFyY2g6IHBhcmFtcyB9ICk7IH0sCiAgICAgICAgICAgICAgICBhc3luYyAoICkgPT4geyB0aGlzLmdldFZlbnVlcyggeyByZWZyZXNoOiB0cnVlLCBzZWFyY2g6IHBhcmFtcyB9ICk7IH0sCiAgICAgICAgICAgIF0sIDMgKTsKICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICBpZiAoICF0aGlzLnNlYXJjaFBhcmFtcyApIHsKICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goIHsgbmFtZTogJ2hvbWUnIH0gKTsKICAgICAgICB9CiAgICAgICAgdGhpcy5sb2FkRGF0YSggKTsKICAgIH0KfTsK"},{"version":3,"sources":["TheSearch.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAafile":"TheSearch.vue","sourceRoot":"src/core/views/search","sourcesContent":["<template>\n    <div>\n        <DataLoading v-if=\"firstLoad\" class=\"mt-5 mb-5 pt-5 pb-5\" />\n        <div v-else>\n            <DetailBanner :src=\"bannerImage\" :title=\"title\" />\n            <div class=\"pa-3 content-max-width\">\n                <SearchResultTabs :tabs=\"tabs\" />\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import { mapGetters, mapState, mapActions } from 'vuex';\n    import imageConstants from '@core/utils/constants/imagePaths';\n    import numberConstants from '@core/utils/constants/number';\n    import entityConstants from '@core/utils/constants/entity';\n    import asyncParallel from '@core/utils/asyncParallel';\n    import DetailBanner from '@core/shared/components/misc/DetailBanner.vue';\n    import DataLoading from '@core/shared/components/loading/DataLoading.vue';\n    import { SearchResultTabs } from './TheSearch/index';\n    import SearchResultMixin from './TheSearch/SearchResultMixin';\n\n    const STORE_VENUES = 'venues';\n    const STORE_EVENTS = 'events';\n    const STORE_ATTRACTIONS = 'attractions';\n\n    export default {\n        name: 'Search',\n        components: {\n            SearchResultTabs,\n            DetailBanner,\n            DataLoading\n        },\n        mixins: [ SearchResultMixin ],\n        i18nOptions: {\n            namespaces: 'main',\n            keyPrefix: 'views.search.theSearch'\n        },\n        data() {\n            return {\n                gradient: 'to bottom, rgba(0,0,0,.1), rgba(0,0,0,.5)'\n            };\n        },\n        computed: {\n            ...mapGetters( {\n                currentSearchParams: 'searchState/currentSearchParams',\n            } ),\n            ...mapState( {\n                venuesFirstLoad:                state => state[STORE_VENUES].listFirstLoad,\n                attractionsFirstLoad:           state => state[STORE_ATTRACTIONS].listFirstLoad,\n                eventsFirstLoad:                state => state[STORE_EVENTS].listFirstLoad,\n                venuesTotalCount:               state => state[STORE_VENUES].totalCount,\n                attractionsTotalCount:          state => state[STORE_ATTRACTIONS].totalCount,\n                eventsTotalCount:               state => state[STORE_EVENTS].totalCount,\n            } ),\n            tabs() {\n                return  [\n                    {\n                        id: 0,\n                        title: this.$t( '_components.searchResultTabs.all.title' ),\n                        to: { name: 'search', query: this.$route.query }\n                    },\n                    {\n                        id: 1,\n                        title: this.$t( '_components.searchResultTabs.attractions.title' ),\n                        to: { name: 'search.attractions', query: this.$route.query },\n                        total: this.totalFormated( this.attractionsTotalCount )\n                    },\n                    {\n                        id: 2,\n                        title: this.$t( '_components.searchResultTabs.events.title' ),\n                        to: { name: 'search.events', query: this.$route.query },\n                        total: this.totalFormated( this.eventsTotalCount )\n                    },\n                    {\n                        id: 3,\n                        title: this.$t( '_components.searchResultTabs.venues.title' ),\n                        to: { name: 'search.venues', query: this.$route.query },\n                        total: this.totalFormated( this.venuesTotalCount )\n                    },\n                ];\n            },\n            firstLoad() {\n                return this.venuesFirstLoad || this.attractionsFirstLoad || this.eventsFirstLoad;\n            },\n            totalCount() {\n                return this.venuesTotalCount + this.attractionsTotalCount + this.eventsTotalCount;\n            },\n            title() {\n                let { keyword } = this.$route.query;\n\n                return keyword ?\n                    this.$t( 'titleKeyword', { totalCount: this.totalFormated( this.totalCount ), keyword: keyword, interpolation: { escapeValue: false } } ) :\n                    this.$t( 'titleAll', { totalCount: this.totalFormated( this.totalCount ) } );\n            },\n            bannerImage() {\n                return imageConstants.BANNERS.SEARCH;\n            }\n        },\n        watch: {\n            'searchParams': {\n                handler: function ( newValue, oldValue ) {\n                    if ( newValue && oldValue && ( newValue.keyword !== oldValue.keyword ) ) {\n                        this.loadData( );\n                    }\n                },\n                deep: true\n            },\n        },\n        methods: {\n            ...mapActions( {\n                getEvents:                          `${ STORE_EVENTS }/get`,\n                getAttractions:                     `${ STORE_ATTRACTIONS }/get`,\n                getVenues:                          `${ STORE_VENUES }/get`,\n            } ),\n            totalFormated( total ) {\n                return this.$options.filters.number( total, numberConstants.FORMAT.INTEGER );\n            },\n            async loadData( ) {\n                const params = {\n                    offset: 0,\n                    count: true,\n                    ...this.searchParams,\n                };\n\n                this.updateFilter( { filter: this.filterSearchParams, entityType: entityConstants.TYPES.ATTRACTION } );\n                this.updateFilter( { filter: this.filterSearchParams, entityType: entityConstants.TYPES.EVENT } );\n                this.updateFilter( { filter: this.filterSearchParams, entityType: entityConstants.TYPES.VENUE } );\n\n                await asyncParallel( [\n                    async ( ) => { \n                        const searchParams = this.$route.query.sort ? { ...params, sort: this.$route.query.sort } : params;\n                        this.getEvents( { refresh: true, search : searchParams, userAnalytics: true } );\n                    },\n                    async ( ) => { this.getAttractions( { refresh: true, search: params } ); },\n                    async ( ) => { this.getVenues( { refresh: true, search: params } ); },\n                ], 3 );\n            }\n        },\n        mounted() {\n            if ( !this.searchParams ) {\n                this.$router.push( { name: 'home' } );\n            }\n            this.loadData( );\n        }\n    };\n</script>\n"]}]}