{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/core/views/home/TheHome/SearchFieldBanner.vue?vue&type=style&index=1&lang=scss&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/views/home/TheHome/SearchFieldBanner.vue","mtime":1645805364033},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/css-loader/dist/cjs.js","mtime":1637061260154},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1637061260528},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/postcss-loader/src/index.js","mtime":1637061260465},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/sass-loader/dist/cjs.js","mtime":1637061279772},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICJAc2Nzc1ZhcmlhYmxlcyI7CgouZ3N0LXNlYXJjaC1maWVsZC1iYW5uZXJfX3NlYXJjaC1jaXR5IHsKICAgIC5nc3Qtc2VhcmNoLWNpdHktbWVudV9faW5wdXQtc2VhcmNoID4gLnYtaW5wdXRfX2NvbnRyb2wgPiAudi1pbnB1dF9fc2xvdCB7CiAgICAgICAgcGFkZGluZy1sZWZ0OiAwOwogICAgfQp9CgouZ3N0LXNlYXJjaC1maWVsZC1iYW5uZXIgLmdzdC1zZWFyY2gtaW5wdXQgewogICAgPiAudi1pbnB1dF9fY29udHJvbCA+IC52LWlucHV0X19zbG90IHsKICAgICAgICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7CgogICAgICAgIGlucHV0IHsKICAgICAgICAgICAgY2FyZXQtY29sb3I6IHRoZW1lLWNvbG9yKCAncHJpbWFyeScgKTsKICAgICAgICB9CiAgICB9Cn0KCi5nc3Qtc2VhcmNoLWZpZWxkLWJhbm5lcl9fa2V5d29yZCB7CiAgICAudi10ZXh0LWZpZWxkX19zbG90IGlucHV0OjpwbGFjZWhvbGRlciB7CiAgICAgICAgb3BhY2l0eTogMC40OwogICAgfQp9CgouZ3N0LXNlYXJjaC1maWVsZC1iYW5uZXIgLmdzdC1zZWFyY2gtaWNvbi1zdmctZm9jdXNlZCB7CiAgICAuZ3N0LXN2Zy1pY29uIHsKICAgICAgICBmaWxsOiB0aGVtZS1jb2xvciggJ3ByaW1hcnknICk7CiAgICB9Cn0K"},{"version":3,"sources":["SearchFieldBanner.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2PA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"SearchFieldBanner.vue","sourceRoot":"src/core/views/home/TheHome","sourcesContent":["<template>\n    <form>\n        <v-layout\n            :class=\"{'gst-search-field-banner--overlay': showOverlay}\"\n            align-center\n            class=\"gst-search-field-banner flex\">\n            <v-flex>\n                <v-row @click=\"throttleTooltipWarningSearchClose\">\n                    <v-col v-if=\"!$vuetify.breakpoint.mdAndUp\" cols=\"12\" class=\"pa-0\">\n                        <v-text-field\n                            v-model=\"keyword\"\n                            :placeholder=\"$t('placeholder')\"\n                            class=\"mx-5 gst-search-input gst-search-field-banner__keyword\"\n                            single-line\n                            solo\n                            hide-details\n                            flat\n                            data-hj-allow\n                            @click=\"$router.push( { name: 'modalSearch' } )\">\n                            <template slot=\"prepend-inner\" class=\"text-primary\">\n                                <IconSearch class=\"gst-search-icon-svg\" />\n                            </template>\n                        </v-text-field>\n                    </v-col>\n                    <v-col v-if=\"$vuetify.breakpoint.mdAndUp\" cols=\"5\" class=\"pa-0 pl-1\">\n                        <SearchKeywordWithAutocomplete\n                            ref=\"searchKeywordAutocomplete\"\n                            v-model=\"keyword\"\n                            :input-search-attrs=\"{\n                                'single-line': true,\n                                solo: true,\n                                'hide-details': true,\n                                flat: true,\n                                rounded: true\n                            }\"\n                            :redirect-to-attraction=\"false\"\n                            :redirect-to-event=\"true\"\n                            :redirect-to-venue=\"false\"\n                            :result-list-see-all-button-route=\"resultListSeeAllButtonRoute\"\n                            @tab-keydown=\"onSearchKeywordWithAutocompleteTabKeyDownDo\" />\n                        <v-tooltip\n                            v-model=\"tooltipWarningSearch.show\"\n                            top\n                            left\n                            :position-x=\"tooltipWarningSearch.positionX\"\n                            :position-y=\"tooltipWarningSearch.positionY\"\n                            content-class=\"gst-search-field-banner__tooltip-warning-search\">\n                            <span>{{ $t('_common:messages.searchWarning') }}</span>\n                        </v-tooltip>\n                    </v-col>\n                    <v-col v-if=\"$vuetify.breakpoint.mdAndUp\" cols=\"3\" class=\"pa-0\">\n                        <SearchCity\n                            ref=\"searchCity\"\n                            v-model=\"city\"\n                            class=\"gst-search-field-banner__search-city\"\n                            @tab-keydown=\"onSearchCityTabKeyDownDo\" />\n                    </v-col>\n                    <v-col v-if=\"$vuetify.breakpoint.mdAndUp\" cols=\"4\" class=\"pa-0\">\n                        <SearchDateDropdown\n                            ref=\"searchDate\"\n                            v-model=\"date\"\n                            class=\"gst-search-field-banner__search-city\"\n                            @tab-keydown=\"onSearchDateDropdownTabKeyDownDo\" />\n                    </v-col>\n                </v-row>\n            </v-flex>\n            <v-flex\n                v-if=\"$vuetify.breakpoint.mdAndUp\"\n                fill-height\n                shrink>\n                <SearchButton class=\"gst-search-field-banner__submit\" type=\"submit\" @click.native=\"submit\" />\n            </v-flex>\n        </v-layout>\n    </form>\n</template>\n<script>\n    import { mapActions, mapGetters } from 'vuex';\n    import throttle from 'lodash/throttle';\n    import SearchButton from '@core/shared/components/buttons/SearchButton.vue';\n    import SearchCity from '@core/shared/components/search/SearchCity.vue';\n    import SearchKeywordWithAutocomplete from '@core/shared/components/search/SearchKeywordWithAutocomplete.vue';\n    import SearchDateDropdown from '@core/shared/components/search/SearchDateDropdown.vue';\n    import IconSearch from '@core/shared/assets/icons/search.svg';\n\n    export default {\n        name: 'SearchFieldBanner',\n        i18nOptions: {\n            namespaces: 'shared',\n            keyPrefix: 'components.search.searchFieldBanner'\n        },\n        components: {\n            SearchButton,\n            IconSearch,\n            SearchCity,\n            SearchKeywordWithAutocomplete,\n            SearchDateDropdown\n        },\n        props: {\n            showOverlay: {\n                type: Boolean,\n                required: true\n            }\n        },\n        data() {\n            return {\n                tooltipWarningSearch: {\n                    show: false,\n                    positionX: 0,\n                    positionY: 0\n                }\n            };\n        },\n        computed: {\n            ...mapGetters( {\n                currentQueryObject: 'searchState/currentQueryObject',\n                currentQueryObjectHasOnlyKeyword: 'searchState/currentQueryObjectHasOnlyKeyword',\n                isEmptyCurrentSearchParams: 'searchState/isEmptyCurrentSearchParams'\n            } ),\n            keyword: {\n                get( ) {\n                    return this.$store.state.searchState.current.keyword;\n                },\n                set( value ) {\n                    this.updateSearch( { keyword : value } );\n                }\n            },\n            city: {\n                get( ) {\n                    return this.$store.state.searchState.current.city;\n                },\n                set( value ) {\n                    this.updateSearch( { city : value } );\n                }\n            },\n            date: {\n                get( ) {\n                    return {\n                        startDate: this.$store.state.searchState.current.startDate,\n                        endDate: this.$store.state.searchState.current.endDate\n                    };\n                },\n                set ( value ) {\n                    this.updateSearch( { startDate: value.startDate, endDate: value.endDate } );\n                }\n            },\n            resultListSeeAllButtonRoute() {\n                const routeName = this.currentQueryObjectHasOnlyKeyword ? 'search' : 'search.events';\n                return { name: routeName, query: this.currentQueryObject };\n            }\n        },\n        watch: {\n            'currentQueryObject': function ( ) {\n                this.tooltipWarningSearch.show = false;\n            }\n        },\n        methods: {\n            ...mapActions( {\n                updateSearch: 'searchState/update'\n            } ),\n            submit( event ) {\n                event.preventDefault( );\n                event.stopPropagation( );\n\n                const isEnter = this.isFormSubmitOnEnter( event );\n\n                if ( this.isEmptyCurrentSearchParams( ) ) {\n\n                    const pos = this.$refs.searchKeywordAutocomplete.$el.getBoundingClientRect( );\n\n                    this.tooltipWarningSearch.positionX = pos.x + 135;\n                    this.tooltipWarningSearch.positionY = pos.y + pos.height + 45;\n                    this.tooltipWarningSearch.show = true;\n                } else {\n                    if ( isEnter || ( !isEnter && this.currentQueryObjectHasOnlyKeyword ) ) {\n                        this.$router.push( { name: 'search', query: this.currentQueryObject } );\n                    } else {\n                        this.$router.push( { name: 'search.events', query: this.currentQueryObject } );\n                    }\n                }\n            },\n            throttleTooltipWarningSearchClose: throttle( function ( ) {\n                this.tooltipWarningSearch.show = false;\n            }, 20 ),\n            isFormSubmitOnEnter( event ) {\n                return event.offsetX <= 0 && event.offsetY <= 0;\n            },\n            onSearchKeywordWithAutocompleteTabKeyDownDo( ) {\n                setTimeout( () => {\n                    this.$refs.searchCity.$refs.inputSearch.$refs.input.click();\n                }, 50 );\n            },\n            onSearchCityTabKeyDownDo( ) {\n                setTimeout( () => {\n                    this.$refs.searchDate.$refs.inputSearch.$refs.input.click();\n                }, 50 );\n            },\n            onSearchDateDropdownTabKeyDownDo( ) {\n                setTimeout( () => {\n                    this.$refs.searchDate.$refs.inputSearch.$refs.input.blur();\n                    this.$refs.searchDate.closeMenu();\n                }, 50 );\n            }\n        },\n        mounted( ) {\n            window.addEventListener( 'resize', this.throttleTooltipWarningSearchClose );\n        },\n        destroyed( ) {\n            window.removeEventListener( 'resize', this.throttleTooltipWarningSearchClose );\n        }\n    };\n</script>\n<style lang=\"scss\" scoped>\n    @import \"@scssVariables\";\n    @import \"@scssMixins\";\n\n    .gst-search-field-banner {\n        border: 2px solid theme-color( 'white' );\n        margin: 0 auto;\n        background-color: theme-color( 'white' );\n        border-radius: border-radius( 'xl' ) !important;\n        max-width: 784px;\n\n        @include mobile-only {\n            padding: 0 12px;\n            margin: 0 12px;\n            max-width: 959px;\n        }\n\n        .gst-search-field-banner__tooltip-warning-search {\n            width: 300px;\n            background-color: theme-color( 'white' ) !important;\n            color: theme-color( 'error' );\n            max-width: 300px;\n            opacity: 1 !important;\n        }\n\n        .gst-search-field-banner__submit {\n            margin: 1px 1px 1px 0;\n        }\n    }\n\n    .gst-search-field-banner--overlay {\n        position: relative;\n        font-size: font-size( 'xxs' );\n        font-weight: font-weight( 'regular' );\n        z-index: $z-index-header + 2;\n    }\n\n</style>\n\n<style lang=\"scss\">\n    @import \"@scssVariables\";\n\n    .gst-search-field-banner__search-city {\n        .gst-search-city-menu__input-search > .v-input__control > .v-input__slot {\n            padding-left: 0;\n        }\n    }\n\n    .gst-search-field-banner .gst-search-input {\n        > .v-input__control > .v-input__slot {\n            padding: 0 !important;\n\n            input {\n                caret-color: theme-color( 'primary' );\n            }\n        }\n    }\n\n    .gst-search-field-banner__keyword {\n        .v-text-field__slot input::placeholder {\n            opacity: 0.4;\n        }\n    }\n\n    .gst-search-field-banner .gst-search-icon-svg-focused {\n        .gst-svg-icon {\n            fill: theme-color( 'primary' );\n        }\n    }\n</style>\n"]}]}