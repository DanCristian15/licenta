{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/views/search/TheSearch/SearchResultMixin.js","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/views/search/TheSearch/SearchResultMixin.js","mtime":1645805364034},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvY3Jpc3RpYW5kYW4vRGVza3RvcC9wcm9pZWN0LWxpY2VudGEtZnJvbnQvbm9kZV9tb2R1bGVzL0B2dWUvYmFiZWwtcHJlc2V0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCB7IG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHNlYXJjaENvbnN0YW50cyBmcm9tICdAY29yZS91dGlscy9jb25zdGFudHMvc2VhcmNoJzsKaW1wb3J0IGVudGl0eUNvbnN0YW50cyBmcm9tICdAY29yZS91dGlscy9jb25zdGFudHMvZW50aXR5JzsKaW1wb3J0IHsgbm9ybWFsaXplU2VhcmNoUXVlcnkgYXMgc2VhcmNoVXRpbHNOb3JtYWxpemVTZWFyY2hRdWVyeSwgYnVpbGRTZWFyY2hRdWVyeU9iamVjdCBhcyBzZWFyY2hVdGlsc0J1aWxkU2VhcmNoUXVlcnlPYmplY3QgfSBmcm9tICdAY29yZS91dGlscy9zZWFyY2hVdGlscyc7CmltcG9ydCB7IGlzRW1wdHkgYXMgc2VhcmNoT2JqZWN0VXRpbHNJc0VtcHR5IH0gZnJvbSAnQGNvcmUvdXRpbHMvc2VhcmNoT2JqZWN0VXRpbHMnOwppbXBvcnQgeyBub3JtYWxpemVGb3JGaWx0ZXIgYXMgY2l0eU9iamVjdFV0aWxzTm9ybWFsaXplRm9yRmlsdGVyIH0gZnJvbSAnQHV0aWxzL2NpdHlPYmplY3RVdGlscyc7CnZhciBtaXhpbiA9IHsKICBjb21wdXRlZDogewogICAgc2VhcmNoUGFyYW1zOiBmdW5jdGlvbiBzZWFyY2hQYXJhbXMoKSB7CiAgICAgIHZhciBzZWFyY2ggPSBzZWFyY2hVdGlsc05vcm1hbGl6ZVNlYXJjaFF1ZXJ5KHRoaXMuJHJvdXRlLnF1ZXJ5KTsKCiAgICAgIGlmIChzZWFyY2hPYmplY3RVdGlsc0lzRW1wdHkoc2VhcmNoKSkgewogICAgICAgIHJldHVybiBudWxsOwogICAgICB9CgogICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBzZWFyY2gpLCB7fSwgewogICAgICAgIGxpbWl0OiBzZWFyY2hDb25zdGFudHMuREVGQVVMVC5MSU1JVAogICAgICB9KTsKICAgIH0sCiAgICBmaWx0ZXJTZWFyY2hQYXJhbXM6IGZ1bmN0aW9uIGZpbHRlclNlYXJjaFBhcmFtcygpIHsKICAgICAgdmFyIGZpbHRlciA9IHsKICAgICAgICBzdGFydERhdGU6IHRoaXMuc2VhcmNoUGFyYW1zICYmIHRoaXMuc2VhcmNoUGFyYW1zLnN0YXJ0RGF0ZSA/IHRoaXMuc2VhcmNoUGFyYW1zLnN0YXJ0RGF0ZSA6IG51bGwsCiAgICAgICAgZW5kRGF0ZTogdGhpcy5zZWFyY2hQYXJhbXMgJiYgdGhpcy5zZWFyY2hQYXJhbXMuZW5kRGF0ZSA/IHRoaXMuc2VhcmNoUGFyYW1zLmVuZERhdGUgOiBudWxsLAogICAgICAgIGNpdHk6IHRoaXMuc2VhcmNoUGFyYW1zICYmIHRoaXMuc2VhcmNoUGFyYW1zLmNpdHkgPyBjaXR5T2JqZWN0VXRpbHNOb3JtYWxpemVGb3JGaWx0ZXIodGhpcy5zZWFyY2hQYXJhbXMuY2l0eSkgOiBudWxsCiAgICAgIH07CiAgICAgIHJldHVybiBmaWx0ZXI7CiAgICB9CiAgfSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcEFjdGlvbnMoewogICAgdXBkYXRlRXZlbnRzRmlsdGVyOiAiZXZlbnRzL3VwZGF0ZUZpbHRlciIsCiAgICB1cGRhdGVBdHRyYWN0aW9uc0ZpbHRlcjogImF0dHJhY3Rpb25zL3VwZGF0ZUZpbHRlciIsCiAgICB1cGRhdGVWZW51ZXNGaWx0ZXI6ICJ2ZW51ZXMvdXBkYXRlRmlsdGVyIgogIH0pKSwge30sIHsKICAgIHVwZGF0ZUZpbHRlcjogZnVuY3Rpb24gdXBkYXRlRmlsdGVyKF9yZWYpIHsKICAgICAgdmFyIF9yZWYkZmlsdGVyID0gX3JlZi5maWx0ZXIsCiAgICAgICAgICBmaWx0ZXIgPSBfcmVmJGZpbHRlciA9PT0gdm9pZCAwID8gbnVsbCA6IF9yZWYkZmlsdGVyLAogICAgICAgICAgX3JlZiRlbnRpdHlUeXBlID0gX3JlZi5lbnRpdHlUeXBlLAogICAgICAgICAgZW50aXR5VHlwZSA9IF9yZWYkZW50aXR5VHlwZSA9PT0gdm9pZCAwID8gbnVsbCA6IF9yZWYkZW50aXR5VHlwZTsKCiAgICAgIGlmICghZW50aXR5VHlwZSB8fCAhZmlsdGVyKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAoZW50aXR5VHlwZSA9PT0gZW50aXR5Q29uc3RhbnRzLlRZUEVTLkFUVFJBQ1RJT04pIHsKICAgICAgICB0aGlzLnVwZGF0ZUF0dHJhY3Rpb25zRmlsdGVyKGZpbHRlcik7CiAgICAgIH0KCiAgICAgIGlmIChlbnRpdHlUeXBlID09PSBlbnRpdHlDb25zdGFudHMuVFlQRVMuRVZFTlQpIHsKICAgICAgICB0aGlzLnVwZGF0ZUV2ZW50c0ZpbHRlcihmaWx0ZXIpOwogICAgICB9CgogICAgICBpZiAoZW50aXR5VHlwZSA9PT0gZW50aXR5Q29uc3RhbnRzLlRZUEVTLlZFTlVFKSB7CiAgICAgICAgdGhpcy51cGRhdGVWZW51ZXNGaWx0ZXIoZmlsdGVyKTsKICAgICAgfQogICAgfSwKICAgIGNoYW5nZVJvdXRlUXVlcnk6IGZ1bmN0aW9uIGNoYW5nZVJvdXRlUXVlcnkoX3JlZjIpIHsKICAgICAgdmFyIF9yZWYyJHF1ZXJ5UGFyYW1zID0gX3JlZjIucXVlcnlQYXJhbXMsCiAgICAgICAgICBxdWVyeVBhcmFtcyA9IF9yZWYyJHF1ZXJ5UGFyYW1zID09PSB2b2lkIDAgPyBudWxsIDogX3JlZjIkcXVlcnlQYXJhbXM7CgogICAgICBpZiAoIXF1ZXJ5UGFyYW1zKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgY3VycmVudFJvdXRlID0gdGhpcy4kcm91dGVyLmN1cnJlbnRSb3V0ZTsKICAgICAgdmFyIHF1ZXJ5T2JqZWN0ID0gc2VhcmNoVXRpbHNCdWlsZFNlYXJjaFF1ZXJ5T2JqZWN0KF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgY3VycmVudFJvdXRlLnF1ZXJ5KSwgcXVlcnlQYXJhbXMpKTsKICAgICAgZGVsZXRlIHF1ZXJ5T2JqZWN0LmNpdHlFeGlzdHNJbkFwaTsKICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlci5yZXBsYWNlKHsKICAgICAgICBuYW1lOiBjdXJyZW50Um91dGUubmFtZSwKICAgICAgICBwYXJhbXM6IGN1cnJlbnRSb3V0ZS5wYXJhbXMsCiAgICAgICAgcXVlcnk6IHF1ZXJ5T2JqZWN0CiAgICAgIH0pOwogICAgfQogIH0pCn07CmV4cG9ydCBkZWZhdWx0IG1peGluOw=="},{"version":3,"sources":["/Users/cristiandan/Desktop/proiect-licenta-front/src/core/views/search/TheSearch/SearchResultMixin.js"],"names":["mapActions","searchConstants","entityConstants","normalizeSearchQuery","searchUtilsNormalizeSearchQuery","buildSearchQueryObject","searchUtilsBuildSearchQueryObject","isEmpty","searchObjectUtilsIsEmpty","normalizeForFilter","cityObjectUtilsNormalizeForFilter","mixin","computed","searchParams","search","$route","query","limit","DEFAULT","LIMIT","filterSearchParams","filter","startDate","endDate","city","methods","updateEventsFilter","updateAttractionsFilter","updateVenuesFilter","updateFilter","entityType","TYPES","ATTRACTION","EVENT","VENUE","changeRouteQuery","queryParams","currentRoute","$router","queryObject","cityExistsInApi","replace","name","params"],"mappings":"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","sourcesContent":["import { mapActions } from 'vuex';\nimport searchConstants from '@core/utils/constants/search';\nimport entityConstants from '@core/utils/constants/entity';\nimport {\n    normalizeSearchQuery as searchUtilsNormalizeSearchQuery,\n    buildSearchQueryObject as searchUtilsBuildSearchQueryObject\n} from '@core/utils/searchUtils';\nimport {\n    isEmpty as searchObjectUtilsIsEmpty,\n} from '@core/utils/searchObjectUtils';\nimport { normalizeForFilter as cityObjectUtilsNormalizeForFilter } from '@utils/cityObjectUtils';\n\nlet mixin = {\n    computed: {\n        searchParams() {\n            const search = searchUtilsNormalizeSearchQuery( this.$route.query );\n            \n            if ( searchObjectUtilsIsEmpty( search ) ) {\n                return null;\n            }\n\n            return {\n                ...search,\n                limit: searchConstants.DEFAULT.LIMIT\n            };\n        },\n        filterSearchParams() {\n            const filter = {\n                startDate: this.searchParams && this.searchParams.startDate ? this.searchParams.startDate : null,\n                endDate: this.searchParams && this.searchParams.endDate ? this.searchParams.endDate : null,\n                city: this.searchParams && this.searchParams.city ? cityObjectUtilsNormalizeForFilter( this.searchParams.city ) : null\n            };\n            \n            return filter;\n        }\n    },\n    methods: {\n        ...mapActions( {\n            updateEventsFilter:       `events/updateFilter`,\n            updateAttractionsFilter:  `attractions/updateFilter`,\n            updateVenuesFilter:       `venues/updateFilter`,\n        } ),\n        updateFilter( { filter = null, entityType = null } ) {\n            if ( !entityType || !filter ) {\n                return;\n            }\n\n            if ( entityType === entityConstants.TYPES.ATTRACTION ) {\n                this.updateAttractionsFilter( filter );\n            }\n            if ( entityType === entityConstants.TYPES.EVENT ) {\n                this.updateEventsFilter( filter );\n            }\n            if ( entityType === entityConstants.TYPES.VENUE ) {\n                this.updateVenuesFilter( filter );\n            }\n        },\n        changeRouteQuery( { queryParams = null } ) {\n            if ( !queryParams ) {\n                return;\n            }\n\n            const currentRoute = this.$router.currentRoute;\n            const queryObject = searchUtilsBuildSearchQueryObject( { ...currentRoute.query, ...queryParams } );\n            delete queryObject.cityExistsInApi;\n            \n            return this.$router.replace( {\n                name: currentRoute.name,\n                params: currentRoute.params,\n                query: queryObject\n            } );\n        },\n    }\n};\n\nexport default mixin;\n"]}]}