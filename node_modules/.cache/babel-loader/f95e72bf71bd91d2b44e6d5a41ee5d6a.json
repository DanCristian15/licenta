{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/plugins/TestIdPlugin.js","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/plugins/TestIdPlugin.js","mtime":1645805363902},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvY3Jpc3RpYW5kYW4vRGVza3RvcC9wcm9pZWN0LWxpY2VudGEtZnJvbnQvbm9kZV9tb2R1bGVzL0B2dWUvYmFiZWwtcHJlc2V0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwp2YXIgVGVzdElkUGx1Z2luID0gewogIGluc3RhbGw6IGZ1bmN0aW9uIGluc3RhbGwoVnVlKSB7CiAgICBpZiAodGhpcy5pbnN0YWxsZWQpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRoaXMuaW5zdGFsbGVkID0gdHJ1ZTsKICAgIFZ1ZS5taXhpbih7CiAgICAgIGJlZm9yZUNyZWF0ZTogZnVuY3Rpb24gYmVmb3JlQ3JlYXRlKCkgewogICAgICAgIGlmICh0aGlzLiRvcHRpb25zICYmIHRoaXMuJG9wdGlvbnMudGVzdElkT3B0aW9ucykgewogICAgICAgICAgdmFyIF90aGlzJCRvcHRpb25zJHRlc3RJZCA9IHRoaXMuJG9wdGlvbnMudGVzdElkT3B0aW9ucy5rZXlQcmVmaXgsCiAgICAgICAgICAgICAga2V5UHJlZml4ID0gX3RoaXMkJG9wdGlvbnMkdGVzdElkID09PSB2b2lkIDAgPyBudWxsIDogX3RoaXMkJG9wdGlvbnMkdGVzdElkOwogICAgICAgICAgdGhpcy5fdGVzdElkT3B0aW9ucyA9IHsKICAgICAgICAgICAga2V5UHJlZml4OiBrZXlQcmVmaXgKICAgICAgICAgIH07CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuX3Rlc3RJZE9wdGlvbnMgPSB7CiAgICAgICAgICAgIGtleVByZWZpeDogJycKICAgICAgICAgIH07CiAgICAgICAgfQogICAgICB9CiAgICB9KTsKCiAgICBWdWUucHJvdG90eXBlLiR0ZXN0SWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBpZHMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpOwogICAgICB2YXIga2V5UHJlZml4ID0gdGhpcy5fdGVzdElkT3B0aW9ucy5rZXlQcmVmaXg7CiAgICAgIHJldHVybiBba2V5UHJlZml4XS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KGlkcykpLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiAhIWl0ZW07CiAgICAgIH0pLmpvaW4oJy4nKTsKICAgIH07CiAgfQp9OwpleHBvcnQgZGVmYXVsdCBUZXN0SWRQbHVnaW47"},{"version":3,"sources":["/Users/cristiandan/Desktop/proiect-licenta-front/src/core/plugins/TestIdPlugin.js"],"names":["TestIdPlugin","install","Vue","installed","mixin","beforeCreate","$options","testIdOptions","keyPrefix","_testIdOptions","prototype","$testId","ids","Array","slice","call","arguments","filter","item","join"],"mappings":";;;;;AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,OADiB,mBACRC,GADQ,EACF;AACX,QAAK,KAAKC,SAAV,EAAsB;AAClB;AACH;;AAED,SAAKA,SAAL,GAAiB,IAAjB;AAEAD,IAAAA,GAAG,CAACE,KAAJ,CAAW;AACPC,MAAAA,YADO,0BACQ;AACX,YAAK,KAAKC,QAAL,IAAiB,KAAKA,QAAL,CAAcC,aAApC,EAAoD;AAAA,sCAG5C,KAAKD,QAAL,CAAcC,aAH8B,CAE5CC,SAF4C;AAAA,cAE5CA,SAF4C,sCAEhC,IAFgC;AAKhD,eAAKC,cAAL,GAAsB;AAClBD,YAAAA,SAAS,EAATA;AADkB,WAAtB;AAGH,SARD,MAQO;AACH,eAAKC,cAAL,GAAsB;AAClBD,YAAAA,SAAS,EAAE;AADO,WAAtB;AAGH;AACJ;AAfM,KAAX;;AAkBAN,IAAAA,GAAG,CAACQ,SAAJ,CAAcC,OAAd,GAAwB,YAAa;AACjC,UAAMC,GAAG,GAAGC,KAAK,CAACH,SAAN,CAAgBI,KAAhB,CAAsBC,IAAtB,CAA4BC,SAA5B,CAAZ;AADiC,UAEzBR,SAFyB,GAEX,KAAKC,cAFM,CAEzBD,SAFyB;AAIjC,aAAO,CAAEA,SAAF,4BAAgBI,GAAhB,GAAsBK,MAAtB,CAA8B,UAAAC,IAAI;AAAA,eAAI,CAAC,CAACA,IAAN;AAAA,OAAlC,EAA+CC,IAA/C,CAAqD,GAArD,CAAP;AACH,KALD;AAMH;AAhCgB,CAArB;AAmCA,eAAenB,YAAf","sourcesContent":["const TestIdPlugin = {\n    install( Vue ) {\n        if ( this.installed ) {\n            return;\n        }\n\n        this.installed = true;\n\n        Vue.mixin( {\n            beforeCreate() {\n                if ( this.$options && this.$options.testIdOptions ) {\n                    const {\n                        keyPrefix = null\n                    } = this.$options.testIdOptions;\n                    \n                    this._testIdOptions = {\n                        keyPrefix\n                    };\n                } else {\n                    this._testIdOptions = {\n                        keyPrefix: '' \n                    };\n                }\n            }\n        } );\n\n        Vue.prototype.$testId = function ( ) {\n            const ids = Array.prototype.slice.call( arguments );\n            const { keyPrefix } = this._testIdOptions;\n\n            return [ keyPrefix, ...ids ].filter( item => !!item ).join( '.' );\n        };\n    }\n};\n\nexport default TestIdPlugin;"]}]}