{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/core/api/apiServiceUser.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/api/apiServiceUser.js","mtime":1645805363871},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2NyaXN0aWFuZGFuL0Rlc2t0b3AvbGlmZXN0eWxlLXVpL25vZGVfbW9kdWxlcy9AdnVlL2JhYmVsLXByZXNldC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvY3Jpc3RpYW5kYW4vRGVza3RvcC9saWZlc3R5bGUtdWkvbm9kZV9tb2R1bGVzL0B2dWUvYmFiZWwtcHJlc2V0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBhcGlDb25zdGFudHMgZnJvbSAnQGNvcmUvdXRpbHMvY29uc3RhbnRzL2FwaSc7CmltcG9ydCBmZXRjaCBmcm9tICdAY29yZS91dGlscy9mZXRjaCc7CmltcG9ydCB7IGdldERlZmF1bHRHZXRQYXJhbXMgYXMgYXBpVXRpbHNHZXREZWZhdWx0R2V0UGFyYW1zLCBub3JtYWxpemVRdWVyeVBhcmFtcyBhcyBhcGlVdGlsc05vcm1hbGl6ZVF1ZXJ5UGFyYW1zLCBjaGVja1N0YXR1c1JhdyBhcyBhcGlVdGlsc0NoZWNrU3RhdHVzUmF3LCBjaGVja0Vycm9yIGFzIGFwaVV0aWxzQ2hlY2tFcnJvciB9IGZyb20gJ0Bjb3JlL3V0aWxzL2FwaVV0aWxzJzsKaW1wb3J0IHsgZ2VuZXJhdGVTZXNzaW9uSWQgYXMgc2Vzc2lvblV0aWxzR2VuZXJhdGVTZXNzaW9uSWQgfSBmcm9tICdAdXRpbHMvc2Vzc2lvblV0aWxzJzsKaW1wb3J0IHsgY3JlYXRlQXBpU2VydmljZSwgZmV0Y2hBUEksIGdldEFwaUNvbW1vbkhlYWRlcnMgfSBmcm9tICdAY29yZS9hcGkvX3V0aWxzJzsKdmFyIGRlZmF1bHRHZXRQYXJhbSA9IGFwaVV0aWxzR2V0RGVmYXVsdEdldFBhcmFtcygpOwp2YXIgYXBpID0gewogIGdldENhbmNlbFJlcXVlc3Q6IGZldGNoLmdldENhbmNlbFJlcXVlc3QsCiAgdXNlcjogewogICAgZ2V0VXNlclByb2ZpbGU6IGZ1bmN0aW9uIGdldFVzZXJQcm9maWxlKF9yZWYpIHsKICAgICAgdmFyIF9yZWYkZW1haWwgPSBfcmVmLmVtYWlsLAogICAgICAgICAgZW1haWwgPSBfcmVmJGVtYWlsID09PSB2b2lkIDAgPyAnJyA6IF9yZWYkZW1haWw7CiAgICAgIHJldHVybiBmZXRjaEFQSS5nZXQoIiIuY29uY2F0KGFwaUNvbnN0YW50cy5CQVNFX1VSTCwgIi9hcGkvd2FsbGV0LyIpLmNvbmNhdChlbWFpbCkpOwogICAgfSwKICAgIGdldFNlc3Npb246IGZ1bmN0aW9uIGdldFNlc3Npb24oX3JlZjIpIHsKICAgICAgdmFyIF9yZWYyJGVtYWlsID0gX3JlZjIuZW1haWwsCiAgICAgICAgICBlbWFpbCA9IF9yZWYyJGVtYWlsID09PSB2b2lkIDAgPyAnJyA6IF9yZWYyJGVtYWlsOwogICAgICB2YXIgaGVhZGVycyA9IHt9OwogICAgICBoZWFkZXJzW2FwaUNvbnN0YW50cy5IRUFERVJTLkdTVF9TRVNTSU9OX0lEXSA9IHNlc3Npb25VdGlsc0dlbmVyYXRlU2Vzc2lvbklkKCk7CiAgICAgIGhlYWRlcnNbYXBpQ29uc3RhbnRzLkhFQURFUlMuR1NUX0FOQUxZVElDU10gPSAxOwogICAgICByZXR1cm4gZmV0Y2gucmVxdWVzdCgiIi5jb25jYXQoYXBpQ29uc3RhbnRzLkJBU0VfVVJMLCAiL2FwaS91c2VyL3Nlc3Npb24iKSwgewogICAgICAgIHR5cGU6ICdHRVQnLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgdXNlcklkZW50aWZpZXI6IGVtYWlsCiAgICAgICAgfSwKICAgICAgICBoZWFkZXJzOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGdldEFwaUNvbW1vbkhlYWRlcnMoKSksIGhlYWRlcnMpCiAgICAgIH0pLnRoZW4oYXBpVXRpbHNDaGVja1N0YXR1c1JhdykuY2F0Y2goYXBpVXRpbHNDaGVja0Vycm9yKTsKICAgIH0sCiAgICBnZXRBbmFseXRpY3M6IGZ1bmN0aW9uIGdldEFuYWx5dGljcyhfcmVmMykgewogICAgICB2YXIgX3JlZjMkbGltaXQgPSBfcmVmMy5saW1pdCwKICAgICAgICAgIGxpbWl0ID0gX3JlZjMkbGltaXQgPT09IHZvaWQgMCA/IGRlZmF1bHRHZXRQYXJhbS5saW1pdCA6IF9yZWYzJGxpbWl0OwogICAgICByZXR1cm4gZmV0Y2hBUEkuZ2V0KCIiLmNvbmNhdChhcGlDb25zdGFudHMuQkFTRV9VUkwsICIvYXBpL3VzZXIvYW5hbHl0aWNzIiksIGFwaVV0aWxzTm9ybWFsaXplUXVlcnlQYXJhbXMoewogICAgICAgIGxpbWl0OiBsaW1pdAogICAgICB9KSk7CiAgICB9LAogICAgZGVsZXRlUmVjZW50bHlWaWV3ZWQ6IGZ1bmN0aW9uIGRlbGV0ZVJlY2VudGx5Vmlld2VkKGl0ZW1zKSB7CiAgICAgIHJldHVybiBmZXRjaEFQSS5kZWxldGUoIiIuY29uY2F0KGFwaUNvbnN0YW50cy5CQVNFX1VSTCwgIi9hcGkvdXNlci9hbmFseXRpY3MiKSwgewogICAgICAgIGl0ZW1zOiBpdGVtcwogICAgICB9KTsKICAgIH0KICB9Cn07CmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChfeCkgewogIHJldHVybiBfcmVmNC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfcmVmNCgpIHsKICBfcmVmNCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShjb25maWcpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgY3JlYXRlQXBpU2VydmljZShjb25maWcsIGFwaSkpOwoKICAgICAgICAgIGNhc2UgMToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CiAgcmV0dXJuIF9yZWY0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0="},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/core/api/apiServiceUser.js"],"names":["apiConstants","fetch","getDefaultGetParams","apiUtilsGetDefaultGetParams","normalizeQueryParams","apiUtilsNormalizeQueryParams","checkStatusRaw","apiUtilsCheckStatusRaw","checkError","apiUtilsCheckError","generateSessionId","sessionUtilsGenerateSessionId","createApiService","fetchAPI","getApiCommonHeaders","defaultGetParam","api","getCancelRequest","user","getUserProfile","email","get","BASE_URL","getSession","headers","HEADERS","GST_SESSION_ID","GST_ANALYTICS","request","type","params","userIdentifier","then","catch","getAnalytics","limit","deleteRecentlyViewed","items","delete","config"],"mappings":";;;;AAAA,OAAOA,YAAP,MAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SACIC,mBAAmB,IAAIC,2BAD3B,EAEIC,oBAAoB,IAAIC,4BAF5B,EAGIC,cAAc,IAAIC,sBAHtB,EAIIC,UAAU,IAAIC,kBAJlB,QAKO,sBALP;AAMA,SAASC,iBAAiB,IAAIC,6BAA9B,QAAmE,qBAAnE;AACA,SAASC,gBAAT,EAA2BC,QAA3B,EAAqCC,mBAArC,QAAgE,kBAAhE;AAEA,IAAMC,eAAe,GAAGZ,2BAA2B,EAAnD;AAEA,IAAIa,GAAG,GAAG;AACNC,EAAAA,gBAAgB,EAAEhB,KAAK,CAACgB,gBADlB;AAENC,EAAAA,IAAI,EAAE;AACFC,IAAAA,cAAc,EAAE,8BAET;AAAA,4BADHC,KACG;AAAA,UADHA,KACG,2BADK,EACL;AACH,aAAOP,QAAQ,CAACQ,GAAT,WAAiBrB,YAAY,CAACsB,QAA9B,yBAAqDF,KAArD,EAAP;AACH,KALC;AAMFG,IAAAA,UAAU,EAAE,2BAEL;AAAA,8BADHH,KACG;AAAA,UADHA,KACG,4BADK,EACL;AACH,UAAMI,OAAO,GAAG,EAAhB;AAEAA,MAAAA,OAAO,CAAExB,YAAY,CAACyB,OAAb,CAAqBC,cAAvB,CAAP,GAAiDf,6BAA6B,EAA9E;AACAa,MAAAA,OAAO,CAAExB,YAAY,CAACyB,OAAb,CAAqBE,aAAvB,CAAP,GAAgD,CAAhD;AAEA,aAAO1B,KAAK,CACP2B,OADE,WACU5B,YAAY,CAACsB,QADvB,wBACoD;AACnDO,QAAAA,IAAI,EAAE,KAD6C;AAEnDC,QAAAA,MAAM,EAAE;AACJC,UAAAA,cAAc,EAAEX;AADZ,SAF2C;AAKnDI,QAAAA,OAAO,kCAAOV,mBAAmB,EAA1B,GAAkCU,OAAlC;AAL4C,OADpD,EAQFQ,IARE,CAQKzB,sBARL,EASF0B,KATE,CASMxB,kBATN,CAAP;AAUH,KAxBC;AAyBFyB,IAAAA,YAAY,EAAE,6BAAyC;AAAA,8BAArCC,KAAqC;AAAA,UAArCA,KAAqC,4BAA7BpB,eAAe,CAACoB,KAAa;AACnD,aAAOtB,QAAQ,CAACQ,GAAT,WAAiBrB,YAAY,CAACsB,QAA9B,0BAA6DjB,4BAA4B,CAAE;AAAE8B,QAAAA,KAAK,EAALA;AAAF,OAAF,CAAzF,CAAP;AACH,KA3BC;AA4BFC,IAAAA,oBA5BE,gCA4BoBC,KA5BpB,EA4B4B;AAC1B,aAAOxB,QAAQ,CAACyB,MAAT,WAAoBtC,YAAY,CAACsB,QAAjC,0BAAgE;AAAEe,QAAAA,KAAK,EAALA;AAAF,OAAhE,CAAP;AACH;AA9BC;AAFA,CAAV;AAoCA;AAAA;AAAA;;;kEAAe,iBAAiBE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,6CACJ3B,gBAAgB,CAAE2B,MAAF,EAAUvB,GAAV,CADZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import apiConstants from '@core/utils/constants/api';\nimport fetch from '@core/utils/fetch';\nimport {\n    getDefaultGetParams as apiUtilsGetDefaultGetParams,\n    normalizeQueryParams as apiUtilsNormalizeQueryParams,\n    checkStatusRaw as apiUtilsCheckStatusRaw,\n    checkError as apiUtilsCheckError\n} from '@core/utils/apiUtils';\nimport { generateSessionId as sessionUtilsGenerateSessionId } from '@utils/sessionUtils';\nimport { createApiService, fetchAPI, getApiCommonHeaders } from '@core/api/_utils';\n\nconst defaultGetParam = apiUtilsGetDefaultGetParams( );\n\nlet api = {\n    getCancelRequest: fetch.getCancelRequest,\n    user: {\n        getUserProfile: ( {\n            email = ''\n        } ) => {\n            return fetchAPI.get( `${apiConstants.BASE_URL}/api/wallet/${email}` );\n        },\n        getSession: ( {\n            email = ''\n        } ) => {\n            const headers = { };\n\n            headers[ apiConstants.HEADERS.GST_SESSION_ID ] = sessionUtilsGenerateSessionId( );\n            headers[ apiConstants.HEADERS.GST_ANALYTICS ] = 1;\n\n            return fetch\n                .request( `${apiConstants.BASE_URL}/api/user/session`, {\n                    type: 'GET',\n                    params: {\n                        userIdentifier: email\n                    },\n                    headers: { ...getApiCommonHeaders( ), ...headers }\n                } )\n                .then ( apiUtilsCheckStatusRaw )\n                .catch ( apiUtilsCheckError );\n        },\n        getAnalytics: ( { limit = defaultGetParam.limit } ) => {\n            return fetchAPI.get( `${apiConstants.BASE_URL}/api/user/analytics`, apiUtilsNormalizeQueryParams( { limit } ) );\n        },\n        deleteRecentlyViewed( items ) {\n            return fetchAPI.delete( `${apiConstants.BASE_URL}/api/user/analytics`, { items } );\n        }\n    }\n};\n\nexport default async function ( config ) {\n    return createApiService( config, api );\n}"]}]}