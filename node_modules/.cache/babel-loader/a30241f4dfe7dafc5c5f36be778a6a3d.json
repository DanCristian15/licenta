{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/user/loggedUser.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/user/loggedUser.js","mtime":1649195146927},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CnZhciBTVE9SRV9OQU1FID0gJ2xvZ2dlZFVzZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogU1RPUkVfTkFNRSwKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICBsb2dnZWRVc2VyOiB7CiAgICAgIG5hbWU6ICcnLAogICAgICBlbWFpbDogJycsCiAgICAgIHBhc3N3b3JkOiAnJywKICAgICAgdXNlcm5hbWU6ICcnCiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldExvZ2dlZFVzZXI6IGZ1bmN0aW9uIHNldExvZ2dlZFVzZXIoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUubG9nZ2VkVXNlci5uYW1lID0gcGF5bG9hZC5uYW1lOwogICAgICBzdGF0ZS5sb2dnZWRVc2VyLmVtYWlsID0gcGF5bG9hZC5lbWFpbDsKICAgICAgc3RhdGUubG9nZ2VkVXNlci5wYXNzd29yZCA9IHBheWxvYWQucGFzc3dvcmQ7CiAgICAgIHN0YXRlLmxvZ2dlZFVzZXIudXNlcm5hbWUgPSBwYXlsb2FkLnVzZXJuYW1lOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgY29tbWl0U2V0TG9nZ2VkVXNlcjogZnVuY3Rpb24gY29tbWl0U2V0TG9nZ2VkVXNlcihfcmVmLCBwYXlsb2FkKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgY29tbWl0KCdzZXRMb2dnZWRVc2VyJywgcGF5bG9hZCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/user/loggedUser.js"],"names":["STORE_NAME","name","namespaced","state","loggedUser","email","password","username","mutations","setLoggedUser","payload","actions","commitSetLoggedUser","commit"],"mappings":";AACA,IAAMA,UAAU,GAAG,YAAnB;AAEA,eAAgB;AACZC,EAAAA,IAAI,EAAED,UADM;AAEZE,EAAAA,UAAU,EAAE,IAFA;AAGZC,EAAAA,KAAK,EAAE;AACHC,IAAAA,UAAU,EAAE;AACRH,MAAAA,IAAI,EAAE,EADE;AAERI,MAAAA,KAAK,EAAE,EAFC;AAGRC,MAAAA,QAAQ,EAAE,EAHF;AAIRC,MAAAA,QAAQ,EAAE;AAJF;AADT,GAHK;AAWZC,EAAAA,SAAS,EAAE;AACPC,IAAAA,aAAa,EAAE,uBAAEN,KAAF,EAASO,OAAT,EAAsB;AACjCP,MAAAA,KAAK,CAACC,UAAN,CAAiBH,IAAjB,GAAwBS,OAAO,CAACT,IAAhC;AACAE,MAAAA,KAAK,CAACC,UAAN,CAAiBC,KAAjB,GAAyBK,OAAO,CAACL,KAAjC;AACAF,MAAAA,KAAK,CAACC,UAAN,CAAiBE,QAAjB,GAA4BI,OAAO,CAACJ,QAApC;AACAH,MAAAA,KAAK,CAACC,UAAN,CAAiBG,QAAjB,GAA4BG,OAAO,CAACH,QAApC;AACH;AANM,GAXC;AAmBZI,EAAAA,OAAO,EAAE;AACLC,IAAAA,mBADK,qCAC4BF,OAD5B,EACsC;AAAA,UAApBG,MAAoB,QAApBA,MAAoB;AACvCA,MAAAA,MAAM,CAAE,eAAF,EAAmBH,OAAnB,CAAN;AACH;AAHI;AAnBG,CAAhB","sourcesContent":["\nconst STORE_NAME = 'loggedUser';\n\nexport default  {\n    name: STORE_NAME,\n    namespaced: true,\n    state: {\n        loggedUser: {\n            name: '',\n            email: '',\n            password: '',\n            username: ''\n        }\n    },\n    mutations: {\n        setLoggedUser: ( state, payload ) => {\n            state.loggedUser.name = payload.name;\n            state.loggedUser.email = payload.email;\n            state.loggedUser.password = payload.password;\n            state.loggedUser.username = payload.username;\n        }\n    },\n    actions: {\n        commitSetLoggedUser( { commit }, payload ) {\n            commit( 'setLoggedUser', payload );\n        }\n    }\n};"]}]}