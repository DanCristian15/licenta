{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/user/loggedUser.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/user/loggedUser.js","mtime":1649269771388},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CnZhciBTVE9SRV9OQU1FID0gJ2xvZ2dlZFVzZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogU1RPUkVfTkFNRSwKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICBpc0xvZ2dlZDogJycsCiAgICBsb2dnZWRVc2VyOiB7CiAgICAgIG5hbWU6ICcnLAogICAgICBlbWFpbDogJycsCiAgICAgIHBhc3N3b3JkOiAnJywKICAgICAgdXNlcm5hbWU6ICcnCiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBnZXRMb2dnZWRVc2VyOiBmdW5jdGlvbiBnZXRMb2dnZWRVc2VyKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5sb2dnZWRVc2VyOwogICAgfSwKICAgIGdldElzTG9nZ2VkOiBmdW5jdGlvbiBnZXRJc0xvZ2dlZChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuaXNMb2dnZWQ7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldExvZ2dlZFVzZXI6IGZ1bmN0aW9uIHNldExvZ2dlZFVzZXIoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUubG9nZ2VkVXNlci5uYW1lID0gcGF5bG9hZC5uYW1lOwogICAgICBzdGF0ZS5sb2dnZWRVc2VyLmVtYWlsID0gcGF5bG9hZC5lbWFpbDsKICAgICAgc3RhdGUubG9nZ2VkVXNlci5wYXNzd29yZCA9IHBheWxvYWQucGFzc3dvcmQ7CiAgICAgIHN0YXRlLmxvZ2dlZFVzZXIudXNlcm5hbWUgPSBwYXlsb2FkLnVzZXJuYW1lOwogICAgfSwKICAgIHNldElzTG9nZ2VkVG9UcnVlOiBmdW5jdGlvbiBzZXRJc0xvZ2dlZFRvVHJ1ZShzdGF0ZSkgewogICAgICBzdGF0ZS5pc0xvZ2dlZCA9IHRydWU7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBjb21taXRTZXRMb2dnZWRVc2VyOiBmdW5jdGlvbiBjb21taXRTZXRMb2dnZWRVc2VyKF9yZWYsIHBheWxvYWQpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICBjb21taXQoJ3NldExvZ2dlZFVzZXInLCBwYXlsb2FkKTsKICAgIH0sCiAgICBjb21taXRTZXRJc0xvZ2dlZFRvVHJ1ZTogZnVuY3Rpb24gY29tbWl0U2V0SXNMb2dnZWRUb1RydWUoX3JlZjIpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgY29tbWl0KCdzZXRJc0xvZ2dlZFRvVHJ1ZScpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/user/loggedUser.js"],"names":["STORE_NAME","name","namespaced","state","isLogged","loggedUser","email","password","username","getters","getLoggedUser","getIsLogged","mutations","setLoggedUser","payload","setIsLoggedToTrue","actions","commitSetLoggedUser","commit","commitSetIsLoggedToTrue"],"mappings":";AACA,IAAMA,UAAU,GAAG,YAAnB;AAEA,eAAgB;AACZC,EAAAA,IAAI,EAAED,UADM;AAEZE,EAAAA,UAAU,EAAE,IAFA;AAGZC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE,EADP;AAEHC,IAAAA,UAAU,EAAE;AACRJ,MAAAA,IAAI,EAAE,EADE;AAERK,MAAAA,KAAK,EAAE,EAFC;AAGRC,MAAAA,QAAQ,EAAE,EAHF;AAIRC,MAAAA,QAAQ,EAAE;AAJF;AAFT,GAHK;AAYZC,EAAAA,OAAO,EAAE;AACLC,IAAAA,aADK,yBACUP,KADV,EACkB;AACnB,aAAOA,KAAK,CAACE,UAAb;AACH,KAHI;AAILM,IAAAA,WAJK,uBAIQR,KAJR,EAIgB;AACjB,aAAOA,KAAK,CAACC,QAAb;AACH;AANI,GAZG;AAoBZQ,EAAAA,SAAS,EAAE;AACPC,IAAAA,aAAa,EAAE,uBAAEV,KAAF,EAASW,OAAT,EAAsB;AACjCX,MAAAA,KAAK,CAACE,UAAN,CAAiBJ,IAAjB,GAAwBa,OAAO,CAACb,IAAhC;AACAE,MAAAA,KAAK,CAACE,UAAN,CAAiBC,KAAjB,GAAyBQ,OAAO,CAACR,KAAjC;AACAH,MAAAA,KAAK,CAACE,UAAN,CAAiBE,QAAjB,GAA4BO,OAAO,CAACP,QAApC;AACAJ,MAAAA,KAAK,CAACE,UAAN,CAAiBG,QAAjB,GAA4BM,OAAO,CAACN,QAApC;AACH,KANM;AAOPO,IAAAA,iBAAiB,EAAE,2BAAEZ,KAAF,EAAa;AAC5BA,MAAAA,KAAK,CAACC,QAAN,GAAiB,IAAjB;AACH;AATM,GApBC;AA+BZY,EAAAA,OAAO,EAAE;AACLC,IAAAA,mBADK,qCAC4BH,OAD5B,EACsC;AAAA,UAApBI,MAAoB,QAApBA,MAAoB;AACvCA,MAAAA,MAAM,CAAE,eAAF,EAAmBJ,OAAnB,CAAN;AACH,KAHI;AAILK,IAAAA,uBAJK,0CAIiC;AAAA,UAAXD,MAAW,SAAXA,MAAW;AAClCA,MAAAA,MAAM,CAAE,mBAAF,CAAN;AACH;AANI;AA/BG,CAAhB","sourcesContent":["\nconst STORE_NAME = 'loggedUser';\n\nexport default  {\n    name: STORE_NAME,\n    namespaced: true,\n    state: {\n        isLogged: '',\n        loggedUser: {\n            name: '',\n            email: '',\n            password: '',\n            username: ''\n        }\n    },\n    getters: {\n        getLoggedUser( state ) {\n            return state.loggedUser;\n        },\n        getIsLogged( state ) {\n            return state.isLogged;\n        },\n    },\n    mutations: {\n        setLoggedUser: ( state, payload ) => {\n            state.loggedUser.name = payload.name;\n            state.loggedUser.email = payload.email;\n            state.loggedUser.password = payload.password;\n            state.loggedUser.username = payload.username;\n        },\n        setIsLoggedToTrue: ( state ) => {\n            state.isLogged = true;\n        }\n    },\n    actions: {\n        commitSetLoggedUser( { commit }, payload ) {\n            commit( 'setLoggedUser', payload );\n        },\n        commitSetIsLoggedToTrue( { commit } ) {\n            commit( 'setIsLoggedToTrue' );\n        }\n    }\n};"]}]}