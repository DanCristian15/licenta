{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/mixins/WarnBeforeLeave.js","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/mixins/WarnBeforeLeave.js","mtime":1645805363899},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9Vc2Vycy9jcmlzdGlhbmRhbi9EZXNrdG9wL3Byb2llY3QtbGljZW50YS1mcm9udC9ub2RlX21vZHVsZXMvQHZ1ZS9iYWJlbC1wcmVzZXQtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIjsKZXhwb3J0IHZhciBJMThOX0xFQVZFX01FU1NBR0VfS0VZID0gJ19jb21tb246bWVzc2FnZXMubGVhdmVSb3V0ZUNvbmZpcm0nOwovKioKICogY2FuIGJlIHVzZWQgb25seSBvbiBjb21wb25lbnRzIHRoYXQgYXJlIGRlY2xhcmVkIGluIHRoZSByb3V0ZXMKICovCgp2YXIgV2FybkJlZm9yZUxlYXZlID0gewogIGJlZm9yZVJvdXRlTGVhdmU6IGZ1bmN0aW9uIGJlZm9yZVJvdXRlTGVhdmUodG8sIGZyb20sIG5leHQpIHsKICAgIGlmICghdGhpcy53YXJuQmVmb3JlTGVhdmluZykgewogICAgICBuZXh0KCk7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB2YXIgYW5zd2VyID0gd2luZG93LmNvbmZpcm0odGhpcy53YXJuQmVmb3JlTGVhdmVNZXNzYWdlKTsKCiAgICBpZiAoYW5zd2VyKSB7CiAgICAgIHdpbmRvdy5vbmJlZm9yZXVubG9hZCA9IG51bGw7CiAgICAgIG5leHQoKTsKICAgIH0gZWxzZSB7CiAgICAgIG5leHQoZmFsc2UpOwogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHdhcm5CZWZvcmVMZWF2aW5nOiBmYWxzZSwKICAgICAgd2FybkJlZm9yZUxlYXZlTWVzc2FnZTogdGhpcy4kdChJMThOX0xFQVZFX01FU1NBR0VfS0VZKQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGJpbmRXYXJuQmVmb3JlWW91TGVhdmVNaXhpbjogZnVuY3Rpb24gYmluZFdhcm5CZWZvcmVZb3VMZWF2ZU1peGluKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIHdhdGNoUHJvcHMgPSBfdGhpcy4kb3B0aW9ucy53YXJuQmVmb3JlTGVhdmVNaXhpbk9wdGlvbnMud2F0Y2hEYXRhOwoKICAgICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIod2F0Y2hQcm9wcyksCiAgICAgICAgICAgIF9zdGVwOwoKICAgICAgICB0cnkgewogICAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgdmFyIHByb3AgPSBfc3RlcC52YWx1ZTsKCiAgICAgICAgICAgIHZhciBkaXNwb3NlciA9IF90aGlzLiR3YXRjaChwcm9wLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgX3RoaXMud2FybkJlZm9yZUxlYXZpbmcgPSB0cnVlOwogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgZGVlcDogdHJ1ZQogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIF90aGlzLndhdGNoZXJEaXNwb3NlcnMucHVzaChkaXNwb3Nlcik7CiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICAgIH0KICAgICAgfSwgMTAwMCk7CiAgICB9LAogICAgdW5iaW5kV2FybkJlZm9yZVlvdUxlYXZlTWl4aW46IGZ1bmN0aW9uIHVuYmluZFdhcm5CZWZvcmVZb3VMZWF2ZU1peGluKCkgewogICAgICB0aGlzLmNsZWFuV2FybkJlZm9yZVlvdUxlYXZlTWl4aW4oKTsKICAgIH0sCiAgICBmb3JjZVdhcm5CZWZvcmVMZWF2ZU1peGluOiBmdW5jdGlvbiBmb3JjZVdhcm5CZWZvcmVMZWF2ZU1peGluKCkgewogICAgICB0aGlzLndhcm5CZWZvcmVMZWF2aW5nID0gdHJ1ZTsKICAgIH0sCiAgICBjbGVhbldhcm5CZWZvcmVZb3VMZWF2ZU1peGluOiBmdW5jdGlvbiBjbGVhbldhcm5CZWZvcmVZb3VMZWF2ZU1peGluKCkgewogICAgICB2YXIgX2l0ZXJhdG9yMiA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRoaXMud2F0Y2hlckRpc3Bvc2VycyksCiAgICAgICAgICBfc3RlcDI7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yMi5zKCk7ICEoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgZGlzcG9zZXIgPSBfc3RlcDIudmFsdWU7CiAgICAgICAgICBkaXNwb3NlcigpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yMi5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yMi5mKCk7CiAgICAgIH0KCiAgICAgIHRoaXMud2FybkJlZm9yZUxlYXZpbmcgPSBmYWxzZTsKICAgICAgd2luZG93Lm9uYmVmb3JldW5sb2FkID0gbnVsbDsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICB0aGlzLndhdGNoZXJEaXNwb3NlcnMgPSBbXTsKICAgIHRoaXMuJHdhdGNoKCd3YXJuQmVmb3JlTGVhdmluZycsIGZ1bmN0aW9uIChuZXdWYWx1ZSkgewogICAgICBpZiAobmV3VmFsdWUpIHsKICAgICAgICB3aW5kb3cub25iZWZvcmV1bmxvYWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXR1cm4gX3RoaXMyLndhcm5CZWZvcmVMZWF2ZU1lc3NhZ2U7CiAgICAgICAgfTsKICAgICAgfSBlbHNlIHsKICAgICAgICB3aW5kb3cub25iZWZvcmV1bmxvYWQgPSBudWxsOwogICAgICB9CiAgICB9KTsKICB9LAogIGRlc3Ryb3llZDogZnVuY3Rpb24gZGVzdHJveWVkKCkgewogICAgdGhpcy5jbGVhbldhcm5CZWZvcmVZb3VMZWF2ZU1peGluKCk7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCBXYXJuQmVmb3JlTGVhdmU7"},{"version":3,"sources":["/Users/cristiandan/Desktop/proiect-licenta-front/src/core/mixins/WarnBeforeLeave.js"],"names":["I18N_LEAVE_MESSAGE_KEY","WarnBeforeLeave","beforeRouteLeave","to","from","next","warnBeforeLeaving","answer","window","confirm","warnBeforeLeaveMessage","onbeforeunload","data","$t","methods","bindWarnBeforeYouLeaveMixin","setTimeout","watchProps","$options","warnBeforeLeaveMixinOptions","watchData","prop","disposer","$watch","deep","watcherDisposers","push","unbindWarnBeforeYouLeaveMixin","cleanWarnBeforeYouLeaveMixin","forceWarnBeforeLeaveMixin","created","newValue","destroyed"],"mappings":";AAAA,OAAO,IAAMA,sBAAsB,GAAG,oCAA/B;AAEP;AACA;AACA;;AAEA,IAAMC,eAAe,GAAG;AACpBC,EAAAA,gBADoB,4BACDC,EADC,EACGC,IADH,EACSC,IADT,EACgB;AAChC,QAAK,CAAC,KAAKC,iBAAX,EAA+B;AAC3BD,MAAAA,IAAI;AACJ;AACH;;AAED,QAAME,MAAM,GAAGC,MAAM,CAACC,OAAP,CAAgB,KAAKC,sBAArB,CAAf;;AACA,QAAKH,MAAL,EAAc;AACVC,MAAAA,MAAM,CAACG,cAAP,GAAwB,IAAxB;AACAN,MAAAA,IAAI;AACP,KAHD,MAGO;AACHA,MAAAA,IAAI,CAAE,KAAF,CAAJ;AACH;AACJ,GAdmB;AAepBO,EAAAA,IAfoB,kBAeb;AACH,WAAO;AACHN,MAAAA,iBAAiB,EAAE,KADhB;AAEHI,MAAAA,sBAAsB,EAAE,KAAKG,EAAL,CAASb,sBAAT;AAFrB,KAAP;AAIH,GApBmB;AAqBpBc,EAAAA,OAAO,EAAE;AACLC,IAAAA,2BADK,yCACyB;AAAA;;AAC1BC,MAAAA,UAAU,CAAE,YAAM;AACd,YAAMC,UAAU,GAAG,KAAI,CAACC,QAAL,CAAcC,2BAAd,CAA0CC,SAA7D;;AADc,mDAEMH,UAFN;AAAA;;AAAA;AAEd,8DAAiC;AAAA,gBAArBI,IAAqB;;AAC7B,gBAAMC,QAAQ,GAAG,KAAI,CAACC,MAAL,CAAaF,IAAb,EAAmB,YAAM;AACtC,cAAA,KAAI,CAACf,iBAAL,GAAyB,IAAzB;AACH,aAFgB,EAEd;AAAEkB,cAAAA,IAAI,EAAE;AAAR,aAFc,CAAjB;;AAIA,YAAA,KAAI,CAACC,gBAAL,CAAsBC,IAAtB,CAA4BJ,QAA5B;AACH;AARa;AAAA;AAAA;AAAA;AAAA;AASjB,OATS,EASP,IATO,CAAV;AAUH,KAZI;AAaLK,IAAAA,6BAbK,2CAa2B;AAC5B,WAAKC,4BAAL;AACH,KAfI;AAgBLC,IAAAA,yBAhBK,uCAgBuB;AACxB,WAAKvB,iBAAL,GAAyB,IAAzB;AACH,KAlBI;AAmBLsB,IAAAA,4BAnBK,0CAmB0B;AAAA,kDACH,KAAKH,gBADF;AAAA;;AAAA;AAC3B,+DAAgD;AAAA,cAApCH,QAAoC;AAC5CA,UAAAA,QAAQ;AACX;AAH0B;AAAA;AAAA;AAAA;AAAA;;AAI3B,WAAKhB,iBAAL,GAAyB,KAAzB;AACAE,MAAAA,MAAM,CAACG,cAAP,GAAwB,IAAxB;AACH;AAzBI,GArBW;AAgDpBmB,EAAAA,OAhDoB,qBAgDV;AAAA;;AACN,SAAKL,gBAAL,GAAwB,EAAxB;AACA,SAAKF,MAAL,CAAa,mBAAb,EAAkC,UAAEQ,QAAF,EAAgB;AAC9C,UAAKA,QAAL,EAAgB;AACZvB,QAAAA,MAAM,CAACG,cAAP,GAAwB;AAAA,iBAAM,MAAI,CAACD,sBAAX;AAAA,SAAxB;AACH,OAFD,MAGK;AACDF,QAAAA,MAAM,CAACG,cAAP,GAAwB,IAAxB;AACH;AACJ,KAPD;AAQH,GA1DmB;AA2DpBqB,EAAAA,SA3DoB,uBA2DR;AACR,SAAKJ,4BAAL;AACH;AA7DmB,CAAxB;AAgEA,eAAe3B,eAAf","sourcesContent":["export const I18N_LEAVE_MESSAGE_KEY = '_common:messages.leaveRouteConfirm';\n\n/**\n * can be used only on components that are declared in the routes\n */\n\nconst WarnBeforeLeave = {\n    beforeRouteLeave ( to, from, next ) {\n        if ( !this.warnBeforeLeaving ) {\n            next( );\n            return;\n        }\n\n        const answer = window.confirm( this.warnBeforeLeaveMessage );\n        if ( answer ) {\n            window.onbeforeunload = null;\n            next( );\n        } else {\n            next( false );\n        }\n    },\n    data() {\n        return {\n            warnBeforeLeaving: false,\n            warnBeforeLeaveMessage: this.$t( I18N_LEAVE_MESSAGE_KEY )\n        };\n    },\n    methods: {\n        bindWarnBeforeYouLeaveMixin() {\n            setTimeout( () => {\n                const watchProps = this.$options.warnBeforeLeaveMixinOptions.watchData;\n                for ( const prop of watchProps ) {\n                    const disposer = this.$watch( prop, () => {\n                        this.warnBeforeLeaving = true;\n                    }, { deep: true } );\n\n                    this.watcherDisposers.push( disposer );\n                }\n            }, 1000 );\n        },\n        unbindWarnBeforeYouLeaveMixin() {\n            this.cleanWarnBeforeYouLeaveMixin( );\n        },\n        forceWarnBeforeLeaveMixin() {\n            this.warnBeforeLeaving = true;\n        },\n        cleanWarnBeforeYouLeaveMixin() {\n            for ( const disposer of this.watcherDisposers ) {\n                disposer();\n            }\n            this.warnBeforeLeaving = false;\n            window.onbeforeunload = null;\n        },\n    },\n    created() {\n        this.watcherDisposers = [];\n        this.$watch( 'warnBeforeLeaving', ( newValue ) => {\n            if ( newValue ) {\n                window.onbeforeunload = () => this.warnBeforeLeaveMessage;\n            }\n            else {\n                window.onbeforeunload = null;\n            }\n        } );\n    },\n    destroyed() {\n        this.cleanWarnBeforeYouLeaveMixin( );\n    }\n};\n\nexport default WarnBeforeLeave;\n"]}]}