{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/store/modules/user/userAnalytics.js","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/store/modules/user/userAnalytics.js","mtime":1645805363993},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvY3Jpc3RpYW5kYW4vRGVza3RvcC9wcm9pZWN0LWxpY2VudGEtZnJvbnQvbm9kZV9tb2R1bGVzL0B2dWUvYmFiZWwtcHJlc2V0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL2NyaXN0aWFuZGFuL0Rlc2t0b3AvcHJvaWVjdC1saWNlbnRhLWZyb250L25vZGVfbW9kdWxlcy9AdnVlL2JhYmVsLXByZXNldC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICIvVXNlcnMvY3Jpc3RpYW5kYW4vRGVza3RvcC9wcm9pZWN0LWxpY2VudGEtZnJvbnQvbm9kZV9tb2R1bGVzL0B2dWUvYmFiZWwtcHJlc2V0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOwoKdmFyIF9tdXRhdGlvbnM7Cgp2YXIgU1RPUkVfTkFNRSA9ICdhbmFseXRpY3MnOwppbXBvcnQgZW50aXR5Q29uc3RhbnRzIGZyb20gJ0Bjb3JlL3V0aWxzL2NvbnN0YW50cy9lbnRpdHknOwppbXBvcnQgc3RvcmVDb25zdGFudHMgZnJvbSAnQGNvcmUvdXRpbHMvY29uc3RhbnRzL3N0b3JlJzsKaW1wb3J0IHsgdHJhbnNmb3JtRnJvbVR5cGVBcGkgYXMgZW50aXR5VXRpbHNUcmFuc2Zvcm1Gcm9tVHlwZUFwaSB9IGZyb20gJ0Bjb3JlL3V0aWxzL2VudGl0eVV0aWxzJzsKaW1wb3J0IHsgaXNTdG9yZU91dERhdGVkIGFzIHN0b3JlVXRpbHNJc1N0b3JlT3V0RGF0ZWQgfSBmcm9tICdAY29yZS91dGlscy9zdG9yZVV0aWxzJzsKaW1wb3J0IGFwaVNlcnZpY2VVc2VyIGZyb20gJ0Bjb3JlL2FwaS9hcGlTZXJ2aWNlVXNlcic7CmltcG9ydCBtdXRhdGlvblR5cGVzIGZyb20gJ0Bjb3JlL2hlbHBlcnMvc3RvcmVGYWN0b3JpZXMvaGVscGVycy9tdXRhdGlvblR5cGVzJzsKaW1wb3J0IHsgbm9ybWFsaXplRXZlbnQgfSBmcm9tICdAY29yZS9kYXRhL3Jlc3BvbnNlL25vcm1hbGl6ZUV2ZW50JzsKaW1wb3J0IExvZ1NlcnZpY2UgZnJvbSAnQHNlcnZpY2VzL0xvZ1NlcnZpY2UnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogU1RPUkVfTkFNRSwKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICBsb2FkaW5nOiBmYWxzZSwKICAgIHN1Z2dlc3Rpb25zOiBbXSwKICAgIHNpbWlsYXJBdHRyYWN0aW9uczogW10sCiAgICBoYXNTaW1pbGFyQXR0cmFjdGlvbnM6IGZhbHNlLAogICAgdGltZXN0YW1wOiBudWxsLAogICAgcmVmcmVzaDogZmFsc2UKICB9LAogIG11dGF0aW9uczogKF9tdXRhdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIG11dGF0aW9uVHlwZXMuU0VUX0xPQURJTkcsIGZ1bmN0aW9uIChzdGF0ZSwgbG9hZGluZykgewogICAgc3RhdGUubG9hZGluZyA9IGxvYWRpbmc7CiAgfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCAic2V0U3VnZ2VzdGlvbnMiLCBmdW5jdGlvbiBzZXRTdWdnZXN0aW9ucyhzdGF0ZSwgbGlzdCkgewogICAgc3RhdGUuc3VnZ2VzdGlvbnMgPSBsaXN0Lm1hcChmdW5jdGlvbiAoX3JlZikgewogICAgICB2YXIgdHlwZSA9IF9yZWYudHlwZSwKICAgICAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZiwgWyJ0eXBlIl0pOwoKICAgICAgdmFyIG5ld1R5cGUgPSBlbnRpdHlVdGlsc1RyYW5zZm9ybUZyb21UeXBlQXBpKHR5cGUpOwogICAgICByZXR1cm4gewogICAgICAgIHR5cGU6IG5ld1R5cGUsCiAgICAgICAgZGF0YTogbmV3VHlwZSA9PT0gZW50aXR5Q29uc3RhbnRzLlRZUEVTLkVWRU5UID8gbm9ybWFsaXplRXZlbnQocmVzdCkgOiByZXN0CiAgICAgIH07CiAgICB9KTsKICB9KSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsICJzZXRTaW1pbGFyQXR0cmFjdGlvbnMiLCBmdW5jdGlvbiBzZXRTaW1pbGFyQXR0cmFjdGlvbnMoc3RhdGUsIGxpc3QpIHsKICAgIHN0YXRlLnNpbWlsYXJBdHRyYWN0aW9ucyA9IGxpc3QuZmlsdGVyKGZ1bmN0aW9uIChfcmVmMikgewogICAgICB2YXIgdHlwZSA9IF9yZWYyLnR5cGU7CiAgICAgIHJldHVybiBlbnRpdHlVdGlsc1RyYW5zZm9ybUZyb21UeXBlQXBpKHR5cGUpID09PSBlbnRpdHlDb25zdGFudHMuVFlQRVMuQVRUUkFDVElPTjsKICAgIH0pOwogICAgc3RhdGUuaGFzU2ltaWxhckF0dHJhY3Rpb25zID0gISFzdGF0ZS5zaW1pbGFyQXR0cmFjdGlvbnMubGVuZ3RoOwogIH0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgbXV0YXRpb25UeXBlcy5VUERBVEVfVElNRVNUQU1QLCBmdW5jdGlvbiAoc3RhdGUpIHsKICAgIHN0YXRlLnRpbWVzdGFtcCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOwogIH0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgbXV0YXRpb25UeXBlcy5TRVRfUkVGUkVTSCwgZnVuY3Rpb24gKHN0YXRlLCB2YWx1ZSkgewogICAgc3RhdGUucmVmcmVzaCA9IHZhbHVlOwogIH0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgbXV0YXRpb25UeXBlcy5DTEVBUiwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgICBzdGF0ZS5sb2FkaW5nID0gZmFsc2U7CiAgICBzdGF0ZS5zdWdnZXN0aW9ucyA9IFtdOwogICAgc3RhdGUuc2ltaWxhckF0dHJhY3Rpb25zID0gW107CiAgICBzdGF0ZS5oYXNTaW1pbGFyQXR0cmFjdGlvbnMgPSBmYWxzZTsKICAgIHN0YXRlLnRpbWVzdGFtcCA9IG51bGw7CiAgICBzdGF0ZS5yZWZyZXNoID0gZmFsc2U7CiAgfSksIF9tdXRhdGlvbnMpLAogIGFjdGlvbnM6IHsKICAgIGdldDogZnVuY3Rpb24gZ2V0KF9yZWYzKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgc3RhdGUsIG5lZWRSZWZyZXNoLCBhcGksIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYzLmNvbW1pdCwgc3RhdGUgPSBfcmVmMy5zdGF0ZTsKICAgICAgICAgICAgICAgIG5lZWRSZWZyZXNoID0gc3RhdGUucmVmcmVzaCB8fCBzdG9yZVV0aWxzSXNTdG9yZU91dERhdGVkKHN0YXRlLnRpbWVzdGFtcCwgc3RvcmVDb25zdGFudHMuUkVGUkVTSF9USU1FKTsKCiAgICAgICAgICAgICAgICBpZiAoISghc3RhdGUubG9hZGluZyAmJiBuZWVkUmVmcmVzaCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIxOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5TRVRfTE9BRElORywgdHJ1ZSk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBhcGlTZXJ2aWNlVXNlcignJyk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIGFwaSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkudXNlci5nZXRBbmFseXRpY3MoewogICAgICAgICAgICAgICAgICBsaW1pdDogNTQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5zdWNjZXNzKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNjsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRTdWdnZXN0aW9ucycsIHJlc3BvbnNlLmRhdGEuc3VnZ2VzdGlvbnMuc2xpY2UoMCwgMjApKTsKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0U2ltaWxhckF0dHJhY3Rpb25zJywgcmVzcG9uc2UuZGF0YS5zaW1pbGFyLnNsaWNlKDAsIDU0KSk7CiAgICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5VUERBVEVfVElNRVNUQU1QKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxOTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgICAgTG9nU2VydmljZS5kZWJ1ZygncHJvYmxlbSBsb2FkaW5nIGFuYWx5dGljcyBkYXRhIGZvciB0aGUgdXNlcicpOwogICAgICAgICAgICAgICAgY29tbWl0KG11dGF0aW9uVHlwZXMuU0VUX0xPQURJTkcsIGZhbHNlKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGZhbHNlKTsKCiAgICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLlNFVF9MT0FESU5HLCBmYWxzZSk7CiAgICAgICAgICAgICAgICBjb21taXQobXV0YXRpb25UeXBlcy5TRVRfUkVGUkVTSCwgZmFsc2UpOwoKICAgICAgICAgICAgICBjYXNlIDIxOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgewogICAgICAgICAgICAgICAgICBzdWdnZXN0aW9uczogc3RhdGUuc3VnZ2VzdGlvbnMsCiAgICAgICAgICAgICAgICAgIHNpbWlsYXJBdHRyYWN0aW9uczogc3RhdGUuc2ltaWxhckF0dHJhY3Rpb25zCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBzZXRSZWZyZXNoOiBmdW5jdGlvbiBzZXRSZWZyZXNoKF9yZWY0LCByZWZyZXNoKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICAgIGNvbW1pdChtdXRhdGlvblR5cGVzLlNFVF9SRUZSRVNILCByZWZyZXNoKTsKICAgIH0KICB9LAogIF9wZXJzaXN0ZW50OiB7CiAgICBnZXREYXRhVG9TYXZlOiBmdW5jdGlvbiBnZXREYXRhVG9TYXZlKHN0YXRlKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgaGFzU2ltaWxhckF0dHJhY3Rpb25zOiBzdGF0ZVtTVE9SRV9OQU1FXS5oYXNTaW1pbGFyQXR0cmFjdGlvbnMKICAgICAgfTsKICAgIH0sCiAgICBnZXREYXRhVG9Mb2FkOiBmdW5jdGlvbiBnZXREYXRhVG9Mb2FkKGRhdGEpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBoYXNTaW1pbGFyQXR0cmFjdGlvbnM6IGRhdGEuaGFzU2ltaWxhckF0dHJhY3Rpb25zCiAgICAgIH07CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/cristiandan/Desktop/proiect-licenta-front/src/core/store/modules/user/userAnalytics.js"],"names":["STORE_NAME","entityConstants","storeConstants","transformFromTypeApi","entityUtilsTransformFromTypeApi","isStoreOutDated","storeUtilsIsStoreOutDated","apiServiceUser","mutationTypes","normalizeEvent","LogService","name","namespaced","state","loading","suggestions","similarAttractions","hasSimilarAttractions","timestamp","refresh","mutations","SET_LOADING","list","map","type","rest","newType","data","TYPES","EVENT","filter","ATTRACTION","length","UPDATE_TIMESTAMP","Date","getTime","SET_REFRESH","value","CLEAR","actions","get","commit","needRefresh","REFRESH_TIME","api","user","getAnalytics","limit","response","success","slice","similar","debug","setRefresh","_persistent","getDataToSave","getDataToLoad"],"mappings":"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","sourcesContent":["const STORE_NAME = 'analytics';\nimport entityConstants from '@core/utils/constants/entity';\nimport storeConstants from '@core/utils/constants/store';\nimport {\n    transformFromTypeApi as entityUtilsTransformFromTypeApi\n} from '@core/utils/entityUtils';\nimport { isStoreOutDated as storeUtilsIsStoreOutDated } from '@core/utils/storeUtils';\nimport apiServiceUser from '@core/api/apiServiceUser';\nimport mutationTypes from '@core/helpers/storeFactories/helpers/mutationTypes';\nimport { normalizeEvent } from '@core/data/response/normalizeEvent';\nimport LogService from '@services/LogService';\n\nexport default {\n    name: STORE_NAME,\n    namespaced: true,\n    state: {\n        loading: false,\n        suggestions: [ ],\n        similarAttractions: [ ],\n        hasSimilarAttractions: false,\n        timestamp: null,\n        refresh: false\n    },\n    mutations: {\n        [mutationTypes.SET_LOADING]( state, loading ) {\n            state.loading = loading;\n        },\n        setSuggestions( state, list ) {\n            state.suggestions = list.map( ( { type, ...rest } ) => {\n                const newType = entityUtilsTransformFromTypeApi( type );\n\n                return {\n                    type: newType,\n                    data: newType === entityConstants.TYPES.EVENT ? normalizeEvent( rest ) : rest\n                };\n            } );\n        },\n        setSimilarAttractions( state, list ) {\n            state.similarAttractions = list.filter( ( { type } ) => entityUtilsTransformFromTypeApi( type ) === entityConstants.TYPES.ATTRACTION );\n            state.hasSimilarAttractions = !!state.similarAttractions.length;\n        },\n        [mutationTypes.UPDATE_TIMESTAMP]( state ) {\n            state.timestamp = new Date( ).getTime( );\n        },\n        [mutationTypes.SET_REFRESH]( state, value ) {\n            state.refresh = value;\n        },\n        [mutationTypes.CLEAR]( state ) {\n            state.loading = false;\n            state.suggestions = [ ];\n            state.similarAttractions = [ ];\n            state.hasSimilarAttractions = false;\n            state.timestamp = null;\n            state.refresh = false;\n        }\n    },\n    actions: {\n        async get( { commit, state } ) {\n            let needRefresh = state.refresh || storeUtilsIsStoreOutDated( state.timestamp, storeConstants.REFRESH_TIME );\n\n            if ( !state.loading && needRefresh ) {\n                commit( mutationTypes.SET_LOADING, true );\n                const api = await apiServiceUser( '' );\n                const response = await api.user.getAnalytics( { limit: 54 } );\n\n                if ( response.success ) {\n                    commit( 'setSuggestions', response.data.suggestions.slice( 0, 20 ) );\n                    commit( 'setSimilarAttractions', response.data.similar.slice( 0, 54 ) );\n                    commit( mutationTypes.UPDATE_TIMESTAMP );\n                } else {\n                    LogService.debug( 'problem loading analytics data for the user' );\n                    commit( mutationTypes.SET_LOADING, false );\n                    return false;\n                }\n                commit( mutationTypes.SET_LOADING, false );\n                commit( mutationTypes.SET_REFRESH, false );\n            }\n            return {\n                suggestions: state.suggestions,\n                similarAttractions: state.similarAttractions,\n            };\n        },\n        setRefresh( { commit }, refresh ) {\n            commit( mutationTypes.SET_REFRESH, refresh );\n        }\n    },\n    _persistent: {\n        getDataToSave: ( state ) => {\n            return {\n                hasSimilarAttractions: state[STORE_NAME].hasSimilarAttractions,\n            };\n        },\n        getDataToLoad: ( data ) => {\n            return {\n                hasSimilarAttractions: data.hasSimilarAttractions,\n            };\n        }\n    }\n};\n"]}]}