{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/core/api/apiServiceMock.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/api/apiServiceMock.js","mtime":1645805363870},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9jcmlzdGlhbmRhbi9EZXNrdG9wL2xpZmVzdHlsZS11aS9ub2RlX21vZHVsZXMvQHZ1ZS9iYWJlbC1wcmVzZXQtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvY3Jpc3RpYW5kYW4vRGVza3RvcC9saWZlc3R5bGUtdWkvbm9kZV9tb2R1bGVzL0B2dWUvYmFiZWwtcHJlc2V0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgeyBub3JtYWxpemVTdWNjZXNzIGFzIGFwaVV0aWxzTm9ybWFsaXplU3VjY2Vzcywgbm9ybWFsaXplTGlzdFN1Y2Nlc3MgYXMgYXBpVXRpbHNOb3JtYWxpemVMaXN0U3VjY2Vzcywgbm9ybWFsaXplRXJyb3IgYXMgYXBpVXRpbHNOb3JtYWxpemVFcnJvciB9IGZyb20gJ0Bjb3JlL3V0aWxzL2FwaVV0aWxzJzsKaW1wb3J0IExvZ1NlcnZpY2UgZnJvbSAnQHNlcnZpY2VzL0xvZ1NlcnZpY2UnOwppbXBvcnQgeyBhdHRyYWN0aW9uc01vY2tEYXRhLCBjYXRlZ29yaWVzTW9ja0RhdGEsIGNpdGllc01vY2tEYXRhLCBjYXJ0TW9ja0RhdGEsIGV2ZW50c01vY2tEYXRhLCB0aWNrZXRzTW9ja0RhdGEsIHZlbnVlc01vY2tEYXRhLCBzdGF0ZXNNb2NrRGF0YSwgY291bnRyaWVzTW9ja0RhdGEsIHNoaXBwaW5nT3B0aW9uc01vY2tEYXRhLCBob3RlbHNNb2NrRGF0YSB9IGZyb20gJy4vbW9ja0RhdGEnOwp2YXIgZGVmZXJMb2FkaW5nVGltZSA9IDIgKiAxMDAwOwp2YXIgRkFLRV9TVEFURSA9IHsKICBhdHRyYWN0aW9uczogYXR0cmFjdGlvbnNNb2NrRGF0YSwKICBjYXRlZ29yaWVzOiBjYXRlZ29yaWVzTW9ja0RhdGEsCiAgY2l0aWVzOiBjaXRpZXNNb2NrRGF0YSwKICBjYXJ0OiBjYXJ0TW9ja0RhdGEsCiAgZXZlbnRzOiBldmVudHNNb2NrRGF0YSwKICB0aWNrZXRzOiB0aWNrZXRzTW9ja0RhdGEsCiAgdmVudWVzOiB2ZW51ZXNNb2NrRGF0YSwKICBzdGF0ZXM6IHN0YXRlc01vY2tEYXRhLAogIGNvdW50cmllczogY291bnRyaWVzTW9ja0RhdGEsCiAgc2hpcHBpbmdPcHRpb25zOiBzaGlwcGluZ09wdGlvbnNNb2NrRGF0YSwKICBob3RlbHM6IGhvdGVsc01vY2tEYXRhCn07Cgp2YXIgY3JlYXRlTW9kdWxlR2V0TWV0aG9kcyA9IGZ1bmN0aW9uIGNyZWF0ZU1vZHVsZUdldE1ldGhvZHMoZW50aXR5KSB7CiAgcmV0dXJuIHsKICAgIGdldDogZnVuY3Rpb24gZ2V0KF9yZWYpIHsKICAgICAgdmFyIF9yZWYka2V5d29yZCA9IF9yZWYua2V5d29yZCwKICAgICAgICAgIGtleXdvcmQgPSBfcmVmJGtleXdvcmQgPT09IHZvaWQgMCA/ICcnIDogX3JlZiRrZXl3b3JkLAogICAgICAgICAgX3JlZiRvZmZzZXQgPSBfcmVmLm9mZnNldCwKICAgICAgICAgIG9mZnNldCA9IF9yZWYkb2Zmc2V0ID09PSB2b2lkIDAgPyAwIDogX3JlZiRvZmZzZXQsCiAgICAgICAgICBfcmVmJGxpbWl0ID0gX3JlZi5saW1pdCwKICAgICAgICAgIGxpbWl0ID0gX3JlZiRsaW1pdCA9PT0gdm9pZCAwID8gNTAwMCA6IF9yZWYkbGltaXQsCiAgICAgICAgICBfcmVmJGNhdGVnb3J5ID0gX3JlZi5jYXRlZ29yeSwKICAgICAgICAgIGNhdGVnb3J5ID0gX3JlZiRjYXRlZ29yeSA9PT0gdm9pZCAwID8gJycgOiBfcmVmJGNhdGVnb3J5OwogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciByZXNwb25zZURhdGEgPSBlbnRpdHkuZGF0YS5pdGVtczsKCiAgICAgICAgICBpZiAoa2V5d29yZCkgewogICAgICAgICAgICByZXNwb25zZURhdGEgPSByZXNwb25zZURhdGEuZmlsdGVyKGVudGl0eS5maWx0ZXJCeUtleXdvcmQoa2V5d29yZCkpOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChjYXRlZ29yeSkgewogICAgICAgICAgICByZXNwb25zZURhdGEgPSByZXNwb25zZURhdGEuZmlsdGVyKGVudGl0eS5maWx0ZXJCeUNhdGVnb3J5KGNhdGVnb3J5KSk7CiAgICAgICAgICB9CgogICAgICAgICAgcmVzb2x2ZShhcGlVdGlsc05vcm1hbGl6ZUxpc3RTdWNjZXNzKHsKICAgICAgICAgICAgZGF0YTogewogICAgICAgICAgICAgIGl0ZW1zOiBfdG9Db25zdW1hYmxlQXJyYXkocmVzcG9uc2VEYXRhKS5zcGxpY2Uob2Zmc2V0LCBsaW1pdCksCiAgICAgICAgICAgICAgdG90YWxDb3VudDogZW50aXR5LmRhdGEudG90YWxDb3VudCA/IGVudGl0eS5kYXRhLnRvdGFsQ291bnQgOiBlbnRpdHkuZGF0YS5pdGVtcy5sZW5ndGgKICAgICAgICAgICAgfQogICAgICAgICAgfSkpOwogICAgICAgIH0sIGRlZmVyTG9hZGluZ1RpbWUpOwogICAgICB9KTsKICAgIH0sCiAgICBvbmU6IGZ1bmN0aW9uIG9uZShpZCkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciBpdGVtID0gZW50aXR5LmRhdGEuaXRlbXMuZmlsdGVyKGZ1bmN0aW9uIChvYmopIHsKICAgICAgICAgICAgcmV0dXJuIG9iai5pZCA9PSBpZDsKICAgICAgICAgIH0pWzBdOwoKICAgICAgICAgIGlmIChpdGVtKSB7CiAgICAgICAgICAgIHJlc29sdmUoYXBpVXRpbHNOb3JtYWxpemVTdWNjZXNzKHsKICAgICAgICAgICAgICBkYXRhOiBpdGVtCiAgICAgICAgICAgIH0pKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJlc29sdmUoYXBpVXRpbHNOb3JtYWxpemVFcnJvcih7CiAgICAgICAgICAgICAgbWVzc2FnZTogJ0l0ZW0gbm90IGZvdW5kJwogICAgICAgICAgICB9KSk7CiAgICAgICAgICB9CiAgICAgICAgfSwgZGVmZXJMb2FkaW5nVGltZSk7CiAgICAgIH0pOwogICAgfQogIH07Cn07CgpleHBvcnQgZGVmYXVsdCB7CiAgZ2V0Q2FuY2VsUmVxdWVzdDogZnVuY3Rpb24gZ2V0Q2FuY2VsUmVxdWVzdCgpIHsKICAgIHJldHVybiB7CiAgICAgIHRva2VuOiAnJywKICAgICAgY2FuY2VsOiBmdW5jdGlvbiBjYW5jZWwoKSB7fQogICAgfTsKICB9LAogIGF0dHJhY3Rpb25zOiBjcmVhdGVNb2R1bGVHZXRNZXRob2RzKEZBS0VfU1RBVEUuYXR0cmFjdGlvbnMsIHt9KSwKICBjYXJ0OiB7CiAgICBhZGRJdGVtOiBmdW5jdGlvbiBhZGRJdGVtKF9yZWYyKSB7CiAgICAgIHZhciBldmVudElkID0gX3JlZjIuZXZlbnRJZCwKICAgICAgICAgIHRpY2tldFR5cGVJZCA9IF9yZWYyLnRpY2tldFR5cGVJZCwKICAgICAgICAgIHF1YW50aXR5ID0gX3JlZjIucXVhbnRpdHksCiAgICAgICAgICBzZWF0cyA9IF9yZWYyLnNlYXRzLAogICAgICAgICAgcm93ID0gX3JlZjIucm93LAogICAgICAgICAgc2VjdGlvbiA9IF9yZWYyLnNlY3Rpb247CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlCiAgICAgICAgTG9nU2VydmljZS5kZWJ1ZygnQXJndW1lbnRzIHJlc2VydmUgdGlja2V0JywgZXZlbnRJZCwgdGlja2V0VHlwZUlkLCBxdWFudGl0eSwgc2VhdHMsIHJvdywgc2VjdGlvbik7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXNvbHZlKGFwaVV0aWxzTm9ybWFsaXplU3VjY2Vzcyh7CiAgICAgICAgICAgIGRhdGE6IEZBS0VfU1RBVEUuY2FydAogICAgICAgICAgfSkpOwogICAgICAgIH0sIGRlZmVyTG9hZGluZ1RpbWUpOwogICAgICB9KTsKICAgIH0sCiAgICBjaGVja291dDogZnVuY3Rpb24gY2hlY2tvdXQoaWQsIGRhdGEpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGUKICAgICAgICBMb2dTZXJ2aWNlLmRlYnVnKCdBcmd1bWVudHMgcmVzZXJ2ZSB0aWNrZXQnLCBpZCwgZGF0YSk7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXNvbHZlKGFwaVV0aWxzTm9ybWFsaXplU3VjY2Vzcyh7CiAgICAgICAgICAgIGRhdGE6IHt9CiAgICAgICAgICB9KSk7CiAgICAgICAgfSwgZGVmZXJMb2FkaW5nVGltZSk7CiAgICAgIH0pOwogICAgfSwKICAgIGRlbGV0ZTogZnVuY3Rpb24gX2RlbGV0ZShpZCkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZQogICAgICAgIExvZ1NlcnZpY2UuZGVidWcoJ0FyZ3VtZW50cyByZXNlcnZlIHRpY2tldCcsIGlkKTsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJlc29sdmUoYXBpVXRpbHNOb3JtYWxpemVTdWNjZXNzKHsKICAgICAgICAgICAgZGF0YToge30KICAgICAgICAgIH0pKTsKICAgICAgICB9LCBkZWZlckxvYWRpbmdUaW1lKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBjYXRlZ29yaWVzOiBjcmVhdGVNb2R1bGVHZXRNZXRob2RzKEZBS0VfU1RBVEUuY2F0ZWdvcmllcywge30pLAogIGNpdGllczogY3JlYXRlTW9kdWxlR2V0TWV0aG9kcyhGQUtFX1NUQVRFLmNpdGllcywge30pLAogIGV2ZW50czogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBjcmVhdGVNb2R1bGVHZXRNZXRob2RzKEZBS0VfU1RBVEUuZXZlbnRzKSksIHt9LCB7CiAgICBpbmZvRGV0YWlsczogZnVuY3Rpb24gaW5mb0RldGFpbHMoKSB7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgdmFyIGRhdGEgPSBGQUtFX1NUQVRFLmV2ZW50cy5pbmZvRGV0YWlsc0RhdGE7CiAgICAgICAgICByZXNvbHZlKGFwaVV0aWxzTm9ybWFsaXplU3VjY2Vzcyh7CiAgICAgICAgICAgIGRhdGE6IGRhdGEKICAgICAgICAgIH0pKTsKICAgICAgICB9LCBkZWZlckxvYWRpbmdUaW1lKTsKICAgICAgfSk7CiAgICB9LAogICAgZGF0ZXM6IGZ1bmN0aW9uIGRhdGVzKCkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciBpdGVtcyA9IEZBS0VfU1RBVEUuZXZlbnRzLmRhdGVzRGF0YS5pdGVtczsKICAgICAgICAgIHJlc29sdmUoYXBpVXRpbHNOb3JtYWxpemVTdWNjZXNzKHsKICAgICAgICAgICAgZGF0YTogewogICAgICAgICAgICAgIGl0ZW1zOiBpdGVtcwogICAgICAgICAgICB9CiAgICAgICAgICB9KSk7CiAgICAgICAgfSwgZGVmZXJMb2FkaW5nVGltZSk7CiAgICAgIH0pOwogICAgfQogIH0pLAogIHBheW1lbnRzOiB7CiAgICBnZXRDbGllbnRUb2tlbjogZnVuY3Rpb24gZ2V0Q2xpZW50VG9rZW4oKSB7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgcmVzb2x2ZShhcGlVdGlsc05vcm1hbGl6ZVN1Y2Nlc3MoewogICAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgICAgY2xpZW50VG9rZW46ICdleUoyWlhKemFXOXVJam95TENKaGRYUm9iM0pwZW1GMGFXOXVSbWx1WjJWeWNISnBiblFpT2lJMU1qZ3hPREF5T1Rka1lqYzVNakpqT1RKbE1UZzNZbVZoWVRCalpUZzNNRFEwWWpjeVpqazNNV0U1TlRkaU1tTXdNemMxTURKaE9ERmhNR1ExTkRsbWZHTnlaV0YwWldSZllYUTlNakF5TUMwd015MHhNbFF4TkRvek5Eb3pPUzR6TnpneE9EVTJORFlyTURBd01GeDFNREF5Tm0xbGNtTm9ZVzUwWDJGalkyOTFiblJmYVdROWRHbGphMlYwYldGemRHVnliR3hqVlZORVhIVXdNREkyYldWeVkyaGhiblJmYVdROU5UZDViV00yYUdOcU5XcHJNelIwZEZ4MU1EQXlObkIxWW14cFkxOXJaWGs5ZUhCNE9YWnpiV3RpY200eWNuTjNhaUlzSW1OdmJtWnBaMVZ5YkNJNkltaDBkSEJ6T2k4dllYQnBMbUp5WVdsdWRISmxaV2RoZEdWM1lYa3VZMjl0T2pRME15OXRaWEpqYUdGdWRITXZOVGQ1YldNMmFHTnFOV3ByTXpSMGRDOWpiR2xsYm5SZllYQnBMM1l4TDJOdmJtWnBaM1Z5WVhScGIyNGlMQ0puY21Gd2FGRk1JanA3SW5WeWJDSTZJbWgwZEhCek9pOHZjR0Y1YldWdWRITXVZbkpoYVc1MGNtVmxMV0Z3YVM1amIyMHZaM0poY0doeGJDSXNJbVJoZEdVaU9pSXlNREU0TFRBMUxUQTRJbjBzSW1Ob1lXeHNaVzVuWlhNaU9sc2lZM1oySWwwc0ltVnVkbWx5YjI1dFpXNTBJam9pY0hKdlpIVmpkR2x2YmlJc0ltTnNhV1Z1ZEVGd2FWVnliQ0k2SW1oMGRIQnpPaTh2WVhCcExtSnlZV2x1ZEhKbFpXZGhkR1YzWVhrdVkyOXRPalEwTXk5dFpYSmphR0Z1ZEhNdk5UZDViV00yYUdOcU5XcHJNelIwZEM5amJHbGxiblJmWVhCcElpd2lZWE56WlhSelZYSnNJam9pYUhSMGNITTZMeTloYzNObGRITXVZbkpoYVc1MGNtVmxaMkYwWlhkaGVTNWpiMjBpTENKaGRYUm9WWEpzSWpvaWFIUjBjSE02THk5aGRYUm9MblpsYm0xdkxtTnZiU0lzSW1GdVlXeDVkR2xqY3lJNmV5SjFjbXdpT2lKb2RIUndjem92TDJOc2FXVnVkQzFoYm1Gc2VYUnBZM011WW5KaGFXNTBjbVZsWjJGMFpYZGhlUzVqYjIwdk5UZDViV00yYUdOcU5XcHJNelIwZENKOUxDSjBhSEpsWlVSVFpXTjFjbVZGYm1GaWJHVmtJanAwY25WbExDSndZWGx3WVd4RmJtRmliR1ZrSWpwMGNuVmxMQ0p3WVhsd1lXd2lPbnNpWkdsemNHeGhlVTVoYldVaU9pSlVhV05yWlhSdFlYTjBaWElzSUV4TVF5SXNJbU5zYVdWdWRFbGtJam9pUVZocU1rMUdNSEZsYVVveFoyNXBjelpJTUZGUmRGazBORXQzUkVkRmJHRXRNalJtVm1rNFRUaHRTRWhtY1dKbFh6QjNVMms1ZEdKTk5FeHFhRFl3ZVd0UVFubGphMTlKUkUxbWJIVjVZVmtpTENKd2NtbDJZV041VlhKc0lqb2lhSFIwY0RvdkwzUnBZMnRsZEcxaGMzUmxjaTVqYjIwaUxDSjFjMlZ5UVdkeVpXVnRaVzUwVlhKc0lqb2lhSFIwY0RvdkwzUnBZMnRsZEcxaGMzUmxjaTVqYjIwaUxDSmlZWE5sVlhKc0lqb2lhSFIwY0hNNkx5OWhjM05sZEhNdVluSmhhVzUwY21WbFoyRjBaWGRoZVM1amIyMGlMQ0poYzNObGRITlZjbXdpT2lKb2RIUndjem92TDJOb1pXTnJiM1YwTG5CaGVYQmhiQzVqYjIwaUxDSmthWEpsWTNSQ1lYTmxWWEpzSWpwdWRXeHNMQ0poYkd4dmQwaDBkSEFpT21aaGJITmxMQ0psYm5acGNtOXViV1Z1ZEU1dlRtVjBkMjl5YXlJNlptRnNjMlVzSW1WdWRtbHliMjV0Wlc1MElqb2liR2wyWlNJc0luVnVkbVYwZEdWa1RXVnlZMmhoYm5RaU9tWmhiSE5sTENKaWNtRnBiblJ5WldWRGJHbGxiblJKWkNJNklrRlNTM0paVWtSb00wRkhXRVI2VnpkelQxOHpZbE5yY1MxVk1VTTNTRWRmZFZkT1F5MTZOVGRNYWxsVFJFNVZUMU5oVDNSSllUbHhObFp3VnlJc0ltSnBiR3hwYm1kQlozSmxaVzFsYm5SelJXNWhZbXhsWkNJNmRISjFaU3dpYldWeVkyaGhiblJCWTJOdmRXNTBTV1FpT2lKMGFXTnJaWFJ0WVhOMFpYSnNiR05WVTBRaUxDSmpkWEp5Wlc1amVVbHpiME52WkdVaU9pSlZVMFFpZlN3aWJXVnlZMmhoYm5SSlpDSTZJalUzZVcxak5taGphalZxYXpNMGRIUWlMQ0oyWlc1dGJ5STZJbTltWmlJc0ltRndjR3hsVUdGNUlqcDdJbk4wWVhSMWN5STZJbkJ5YjJSMVkzUnBiMjRpTENKamIzVnVkSEo1UTI5a1pTSTZJbFZUSWl3aVkzVnljbVZ1WTNsRGIyUmxJam9pVlZORUlpd2liV1Z5WTJoaGJuUkpaR1Z1ZEdsbWFXVnlJam9pYldWeVkyaGhiblF1WTI5dExuUnViM2NpTENKemRYQndiM0owWldST1pYUjNiM0pyY3lJNld5SjJhWE5oSWl3aWJXRnpkR1Z5WTJGeVpDSXNJbUZ0WlhnaUxDSmthWE5qYjNabGNpSmRmU3dpYldWeVkyaGhiblJCWTJOdmRXNTBTV1FpT2lKMGFXTnJaWFJ0WVhOMFpYSnNiR05WVTBRaWZRPT0nLAogICAgICAgICAgICAgIHByb3ZpZGVySWQ6ICdCUkFJTlRSRUUnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pKTsKICAgICAgICB9LCAwLjUgKiAxMDAwKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICB0aWNrZXRzOiB7CiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXNvbHZlKGFwaVV0aWxzTm9ybWFsaXplU3VjY2Vzcyh7CiAgICAgICAgICAgIGRhdGE6IEZBS0VfU1RBVEUudGlja2V0cy5kYXRhCiAgICAgICAgICB9KSk7CiAgICAgICAgfSwgZGVmZXJMb2FkaW5nVGltZSk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgdmVudWVzOiBjcmVhdGVNb2R1bGVHZXRNZXRob2RzKEZBS0VfU1RBVEUudmVudWVzLCB7fSksCiAgc3RhdGVzOiBjcmVhdGVNb2R1bGVHZXRNZXRob2RzKEZBS0VfU1RBVEUuc3RhdGVzLCB7fSksCiAgY291bnRyaWVzOiBjcmVhdGVNb2R1bGVHZXRNZXRob2RzKEZBS0VfU1RBVEUuY291bnRyaWVzLCB7fSksCiAgaG90ZWxzOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGNyZWF0ZU1vZHVsZUdldE1ldGhvZHMoRkFLRV9TVEFURS5ob3RlbHMsIHt9KSksIHt9LCB7CiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXNvbHZlKGFwaVV0aWxzTm9ybWFsaXplU3VjY2Vzcyh7CiAgICAgICAgICAgIGRhdGE6IEZBS0VfU1RBVEUuaG90ZWxzLmRhdGEKICAgICAgICAgIH0pKTsKICAgICAgICB9LCBkZWZlckxvYWRpbmdUaW1lKTsKICAgICAgfSk7CiAgICB9CiAgfSksCiAgc2hpcHBpbmdPcHRpb25zOiB7CiAgICBnZXQ6IGZ1bmN0aW9uIGdldChfcmVmMykgewogICAgICB2YXIgX3JlZjMkY291bnRyeSA9IF9yZWYzLmNvdW50cnksCiAgICAgICAgICBjb3VudHJ5ID0gX3JlZjMkY291bnRyeSA9PT0gdm9pZCAwID8gJycgOiBfcmVmMyRjb3VudHJ5OwogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIGlmIChjb3VudHJ5ICE9PSAnQ0EnKSB7CiAgICAgICAgICAgIHZhciBpdGVtcyA9IEZBS0VfU1RBVEUuc2hpcHBpbmdPcHRpb25zLmRhdGEuaXRlbXM7CiAgICAgICAgICAgIHJlc29sdmUoYXBpVXRpbHNOb3JtYWxpemVTdWNjZXNzKHsKICAgICAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgICAgICBpdGVtczogaXRlbXMKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHZhciBfaXRlbXMgPSBbXTsKICAgICAgICAgICAgcmVzb2x2ZShhcGlVdGlsc05vcm1hbGl6ZVN1Y2Nlc3MoewogICAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAgIGl0ZW1zOiBfaXRlbXMKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pKTsKICAgICAgICAgIH0KICAgICAgICB9LCBkZWZlckxvYWRpbmdUaW1lKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/core/api/apiServiceMock.js"],"names":["normalizeSuccess","apiUtilsNormalizeSuccess","normalizeListSuccess","apiUtilsNormalizeListSuccess","normalizeError","apiUtilsNormalizeError","LogService","attractionsMockData","categoriesMockData","citiesMockData","cartMockData","eventsMockData","ticketsMockData","venuesMockData","statesMockData","countriesMockData","shippingOptionsMockData","hotelsMockData","deferLoadingTime","FAKE_STATE","attractions","categories","cities","cart","events","tickets","venues","states","countries","shippingOptions","hotels","createModuleGetMethods","entity","get","keyword","offset","limit","category","Promise","resolve","setTimeout","responseData","data","items","filter","filterByKeyword","filterByCategory","splice","totalCount","length","one","id","item","obj","message","getCancelRequest","token","cancel","addItem","eventId","ticketTypeId","quantity","seats","row","section","debug","checkout","delete","infoDetails","infoDetailsData","dates","datesData","payments","getClientToken","clientToken","providerId","country"],"mappings":"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","sourcesContent":["import {\n    normalizeSuccess as apiUtilsNormalizeSuccess,\n    normalizeListSuccess as apiUtilsNormalizeListSuccess,\n    normalizeError as apiUtilsNormalizeError\n} from '@core/utils/apiUtils';\n\nimport LogService from '@services/LogService';\nimport {\n    attractionsMockData,\n    categoriesMockData,\n    citiesMockData,\n    cartMockData,\n    eventsMockData,\n    ticketsMockData,\n    venuesMockData,\n    statesMockData,\n    countriesMockData,\n    shippingOptionsMockData,\n    hotelsMockData,\n} from './mockData';\n\nconst deferLoadingTime = 2 * 1000;\n\nconst FAKE_STATE = {\n    attractions: attractionsMockData,\n    categories: categoriesMockData,\n    cities: citiesMockData,\n    cart: cartMockData,\n    events: eventsMockData,\n    tickets: ticketsMockData,\n    venues: venuesMockData,\n    states: statesMockData,\n    countries: countriesMockData,\n    shippingOptions: shippingOptionsMockData,\n    hotels: hotelsMockData\n};\n\nconst createModuleGetMethods = ( entity ) => {\n    return {\n        get: ( { keyword = '', offset = 0, limit = 5000, category = '' } )            => new Promise( resolve => {\n            setTimeout( ( ) => {\n                let responseData = entity.data.items;\n                if ( keyword ) {\n                    responseData = responseData.filter ( entity.filterByKeyword( keyword ) );\n                }\n                if ( category ) {\n                    responseData = responseData.filter ( entity.filterByCategory( category ) );\n                }\n                resolve( apiUtilsNormalizeListSuccess( {\n                    data: {\n                        items:[ ...responseData ].splice( offset, limit ),\n                        totalCount: entity.data.totalCount ? entity.data.totalCount : entity.data.items.length\n                    }\n                } ) );\n            }, deferLoadingTime );\n        } ),\n        one: ( id )         =>  new Promise( resolve => {\n            setTimeout( ( ) => {\n                let item = entity.data.items.filter( obj => obj.id == id )[ 0 ];\n\n                if ( item ) {\n                    resolve( apiUtilsNormalizeSuccess( { data: item } ) );\n                } else {\n                    resolve ( apiUtilsNormalizeError( { message: 'Item not found' } ) );\n                }\n\n            }, deferLoadingTime );\n        } )\n    };\n};\n\nexport default {\n    getCancelRequest: ( ) => {\n        return {\n            token: '',\n            cancel: ( ) => { }\n        };\n    },\n    attractions:    createModuleGetMethods( FAKE_STATE.attractions, { } ),\n    cart: {\n        addItem: ( { eventId, ticketTypeId, quantity, seats, row, section  } ) => {\n            return new Promise( ( resolve ) => {\n                // eslint-disable-next-line no-console\n                LogService.debug( 'Arguments reserve ticket', eventId, ticketTypeId, quantity, seats, row, section );\n                setTimeout( ( ) => {\n                    resolve( apiUtilsNormalizeSuccess( {\n                        data: FAKE_STATE.cart\n                    } ) );\n                }, deferLoadingTime );\n            } );\n        },\n        checkout: ( id, data ) => {\n            return new Promise( resolve => {\n                // eslint-disable-next-line no-console\n                LogService.debug( 'Arguments reserve ticket', id, data );\n                setTimeout( ( ) => {\n                    resolve ( apiUtilsNormalizeSuccess ( { data: {} } ) );\n                }, deferLoadingTime );\n            } );\n        },\n        delete: ( id ) => {\n            return new Promise( resolve => {\n                // eslint-disable-next-line no-console\n                LogService.debug( 'Arguments reserve ticket', id );\n                setTimeout( ( ) => {\n                    resolve ( apiUtilsNormalizeSuccess ( { data: {} } ) );\n                }, deferLoadingTime );\n            } );\n        }\n    },\n    categories:     createModuleGetMethods( FAKE_STATE.categories, { } ),\n    cities:         createModuleGetMethods( FAKE_STATE.cities, { } ),\n    events: {\n        ...createModuleGetMethods( FAKE_STATE.events ),\n        infoDetails: ( ) => {\n            return new Promise( ( resolve ) => {\n                setTimeout( () => {\n                    let data = FAKE_STATE.events.infoDetailsData;\n                    resolve( apiUtilsNormalizeSuccess( { data: data } ) );\n                }, deferLoadingTime );\n            } );\n        },\n        dates: ( ) => {\n            return new Promise( resolve => {\n                setTimeout( () => {\n                    let items = FAKE_STATE.events.datesData.items;\n                    resolve( apiUtilsNormalizeSuccess( { data: { items: items } } ) );\n                }, deferLoadingTime );\n            } );\n        }\n    },\n    payments: {\n        getClientToken: ( ) => {\n            return new Promise( ( resolve ) => {\n                setTimeout( ( ) => {\n                    resolve ( apiUtilsNormalizeSuccess( {\n                        data : {\n                            clientToken: 'eyJ2ZXJzaW9uIjoyLCJhdXRob3JpemF0aW9uRmluZ2VycHJpbnQiOiI1MjgxODAyOTdkYjc5MjJjOTJlMTg3YmVhYTBjZTg3MDQ0YjcyZjk3MWE5NTdiMmMwMzc1MDJhODFhMGQ1NDlmfGNyZWF0ZWRfYXQ9MjAyMC0wMy0xMlQxNDozNDozOS4zNzgxODU2NDYrMDAwMFx1MDAyNm1lcmNoYW50X2FjY291bnRfaWQ9dGlja2V0bWFzdGVybGxjVVNEXHUwMDI2bWVyY2hhbnRfaWQ9NTd5bWM2aGNqNWprMzR0dFx1MDAyNnB1YmxpY19rZXk9eHB4OXZzbWticm4ycnN3aiIsImNvbmZpZ1VybCI6Imh0dHBzOi8vYXBpLmJyYWludHJlZWdhdGV3YXkuY29tOjQ0My9tZXJjaGFudHMvNTd5bWM2aGNqNWprMzR0dC9jbGllbnRfYXBpL3YxL2NvbmZpZ3VyYXRpb24iLCJncmFwaFFMIjp7InVybCI6Imh0dHBzOi8vcGF5bWVudHMuYnJhaW50cmVlLWFwaS5jb20vZ3JhcGhxbCIsImRhdGUiOiIyMDE4LTA1LTA4In0sImNoYWxsZW5nZXMiOlsiY3Z2Il0sImVudmlyb25tZW50IjoicHJvZHVjdGlvbiIsImNsaWVudEFwaVVybCI6Imh0dHBzOi8vYXBpLmJyYWludHJlZWdhdGV3YXkuY29tOjQ0My9tZXJjaGFudHMvNTd5bWM2aGNqNWprMzR0dC9jbGllbnRfYXBpIiwiYXNzZXRzVXJsIjoiaHR0cHM6Ly9hc3NldHMuYnJhaW50cmVlZ2F0ZXdheS5jb20iLCJhdXRoVXJsIjoiaHR0cHM6Ly9hdXRoLnZlbm1vLmNvbSIsImFuYWx5dGljcyI6eyJ1cmwiOiJodHRwczovL2NsaWVudC1hbmFseXRpY3MuYnJhaW50cmVlZ2F0ZXdheS5jb20vNTd5bWM2aGNqNWprMzR0dCJ9LCJ0aHJlZURTZWN1cmVFbmFibGVkIjp0cnVlLCJwYXlwYWxFbmFibGVkIjp0cnVlLCJwYXlwYWwiOnsiZGlzcGxheU5hbWUiOiJUaWNrZXRtYXN0ZXIsIExMQyIsImNsaWVudElkIjoiQVhqMk1GMHFlaUoxZ25pczZIMFFRdFk0NEt3REdFbGEtMjRmVmk4TThtSEhmcWJlXzB3U2k5dGJNNExqaDYweWtQQnlja19JRE1mbHV5YVkiLCJwcml2YWN5VXJsIjoiaHR0cDovL3RpY2tldG1hc3Rlci5jb20iLCJ1c2VyQWdyZWVtZW50VXJsIjoiaHR0cDovL3RpY2tldG1hc3Rlci5jb20iLCJiYXNlVXJsIjoiaHR0cHM6Ly9hc3NldHMuYnJhaW50cmVlZ2F0ZXdheS5jb20iLCJhc3NldHNVcmwiOiJodHRwczovL2NoZWNrb3V0LnBheXBhbC5jb20iLCJkaXJlY3RCYXNlVXJsIjpudWxsLCJhbGxvd0h0dHAiOmZhbHNlLCJlbnZpcm9ubWVudE5vTmV0d29yayI6ZmFsc2UsImVudmlyb25tZW50IjoibGl2ZSIsInVudmV0dGVkTWVyY2hhbnQiOmZhbHNlLCJicmFpbnRyZWVDbGllbnRJZCI6IkFSS3JZUkRoM0FHWER6VzdzT18zYlNrcS1VMUM3SEdfdVdOQy16NTdMallTRE5VT1NhT3RJYTlxNlZwVyIsImJpbGxpbmdBZ3JlZW1lbnRzRW5hYmxlZCI6dHJ1ZSwibWVyY2hhbnRBY2NvdW50SWQiOiJ0aWNrZXRtYXN0ZXJsbGNVU0QiLCJjdXJyZW5jeUlzb0NvZGUiOiJVU0QifSwibWVyY2hhbnRJZCI6IjU3eW1jNmhjajVqazM0dHQiLCJ2ZW5tbyI6Im9mZiIsImFwcGxlUGF5Ijp7InN0YXR1cyI6InByb2R1Y3Rpb24iLCJjb3VudHJ5Q29kZSI6IlVTIiwiY3VycmVuY3lDb2RlIjoiVVNEIiwibWVyY2hhbnRJZGVudGlmaWVyIjoibWVyY2hhbnQuY29tLnRub3ciLCJzdXBwb3J0ZWROZXR3b3JrcyI6WyJ2aXNhIiwibWFzdGVyY2FyZCIsImFtZXgiLCJkaXNjb3ZlciJdfSwibWVyY2hhbnRBY2NvdW50SWQiOiJ0aWNrZXRtYXN0ZXJsbGNVU0QifQ==',\n                            providerId: 'BRAINTREE'\n                        }\n                    } ) );\n                }, 0.5 * 1000 );\n            } );\n\n        }\n    },\n    tickets:   {\n        get: ( ) => new Promise( resolve => {\n            setTimeout( ( ) => {\n                resolve( apiUtilsNormalizeSuccess( { data : FAKE_STATE.tickets.data } ) );\n            }, deferLoadingTime );\n        } ),\n    },\n    venues:         createModuleGetMethods( FAKE_STATE.venues, { } ),\n    states:         createModuleGetMethods( FAKE_STATE.states, { } ),\n    countries:      createModuleGetMethods( FAKE_STATE.countries, {} ),\n    hotels:         {\n        ...createModuleGetMethods( FAKE_STATE.hotels, { } ),\n        get: ( ) => new Promise( resolve => {\n            setTimeout( ( ) => {\n                resolve( apiUtilsNormalizeSuccess ( { data: FAKE_STATE.hotels.data } ) );\n            }, deferLoadingTime );\n        } ),\n    },\n    shippingOptions: {\n        get: ( { country = '' } ) => new Promise( resolve => {\n            setTimeout( ( ) => {\n                if ( country !== 'CA' ) {\n                    let items = FAKE_STATE.shippingOptions.data.items;\n                    resolve( apiUtilsNormalizeSuccess( { data: { items: items } } ) );\n                } else {\n                    let items = [];\n                    resolve( apiUtilsNormalizeSuccess( { data: { items: items } } ) );\n                }\n            }, deferLoadingTime );\n        } )\n    }\n};\n"]}]}