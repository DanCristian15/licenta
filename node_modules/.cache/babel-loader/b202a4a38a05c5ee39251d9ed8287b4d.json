{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-clamp/Clamp.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-clamp/Clamp.js","mtime":1637061216197},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-clamp/Clamp.js"],"names":["addListener","removeListener","name","props","tag","type","String","default","autoresize","Boolean","maxLines","Number","maxHeight","ellipsis","expanded","data","offset","text","getText","localExpanded","computed","clampedText","slice","isClamped","length","realText","realMaxHeight","watch","val","clampAt","update","$emit","handler","$nextTick","immediate","mounted","init","$watch","vm","join","updated","applyChange","beforeDestroy","cleanUp","methods","contents","$slots","$el","unregisterResizeCallback","isOverflow","search","expand","collapse","toggle","getLines","Object","keys","$refs","content","getClientRects","reduce","prev","top","bottom","key","scrollHeight","offsetHeight","filter","node","isComment","moveEdge","steps","textContent","stepToFit","fill","clamp","range","from","to","target","Math","floor","render","h","$isServer","ref","attrs","trim","scope","clamped","before","$scopedSlots","unshift","Array","isArray","after","push","lines","style","boxShadow","overflow"],"mappings":"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","sourcesContent":["import { addListener, removeListener } from 'resize-detector'\n\nexport default {\n  name: 'vue-clamp',\n  props: {\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    autoresize: {\n      type: Boolean,\n      default: false\n    },\n    maxLines: Number,\n    maxHeight: [String, Number],\n    ellipsis: {\n      type: String,\n      default: '…'\n    },\n    expanded: Boolean\n  },\n  data () {\n    return {\n      offset: null,\n      text: this.getText(),\n      localExpanded: !!this.expanded\n    }\n  },\n  computed: {\n    clampedText () {\n      return this.text.slice(0, this.offset) + this.ellipsis\n    },\n    isClamped () {\n      if (!this.text) {\n        return false\n      }\n      return this.offset !== this.text.length\n    },\n    realText () {\n      return this.isClamped ? this.clampedText : this.text\n    },\n    realMaxHeight () {\n      if (this.localExpanded) {\n        return null\n      }\n      const { maxHeight } = this\n      if (!maxHeight) {\n        return null\n      }\n      return typeof maxHeight === 'number' ? `${maxHeight}px` : maxHeight\n    }\n  },\n  watch: {\n    expanded (val) {\n      this.localExpanded = val\n    },\n    localExpanded (val) {\n      if (val) {\n        this.clampAt(this.text.length)\n      } else {\n        this.update()\n      }\n      if (this.expanded !== val) {\n        this.$emit('update:expanded', val)\n      }\n    },\n    isClamped: {\n      handler (val) {\n        this.$nextTick(() => this.$emit('clampchange', val))\n      },\n      immediate: true\n    }\n  },\n  mounted () {\n    this.init()\n\n    this.$watch(\n      (vm) => [vm.maxLines, vm.maxHeight, vm.ellipsis, vm.isClamped].join(),\n      this.update\n    )\n    this.$watch((vm) => [vm.tag, vm.text, vm.autoresize].join(), this.init)\n  },\n  updated () {\n    this.text = this.getText()\n    this.applyChange()\n  },\n  beforeDestroy () {\n    this.cleanUp()\n  },\n  methods: {\n    init () {\n      const contents = this.$slots.default\n      if (!contents) {\n        return\n      }\n\n      this.offset = this.text.length\n\n      this.cleanUp()\n\n      if (this.autoresize) {\n        addListener(this.$el, this.update)\n        this.unregisterResizeCallback = () => {\n          removeListener(this.$el, this.update)\n        }\n      }\n      this.update()\n    },\n    update () {\n      if (this.localExpanded) {\n        return\n      }\n      this.applyChange()\n      if (this.isOverflow() || this.isClamped) {\n        this.search()\n      }\n    },\n    expand () {\n      this.localExpanded = true\n    },\n    collapse () {\n      this.localExpanded = false\n    },\n    toggle () {\n      this.localExpanded = !this.localExpanded\n    },\n    getLines () {\n      return Object.keys(\n        [...this.$refs.content.getClientRects()].reduce(\n          (prev, { top, bottom }) => {\n            const key = `${top}/${bottom}`\n            if (!prev[key]) {\n              prev[key] = true\n            }\n            return prev\n          },\n          {}\n        )\n      ).length\n    },\n    isOverflow () {\n      if (!this.maxLines && !this.maxHeight) {\n        return false\n      }\n\n      if (this.maxLines) {\n        if (this.getLines() > this.maxLines) {\n          return true\n        }\n      }\n\n      if (this.maxHeight) {\n        if (this.$el.scrollHeight > this.$el.offsetHeight) {\n          return true\n        }\n      }\n      return false\n    },\n    getText () {\n      // Look for the first non-empty text node\n      const [content] = (this.$slots.default || []).filter(\n        (node) => !node.tag && !node.isComment\n      )\n      return content ? content.text : ''\n    },\n    moveEdge (steps) {\n      this.clampAt(this.offset + steps)\n    },\n    clampAt (offset) {\n      this.offset = offset\n      this.applyChange()\n    },\n    applyChange () {\n      this.$refs.text.textContent = this.realText\n    },\n    stepToFit () {\n      this.fill()\n      this.clamp()\n    },\n    fill () {\n      while (\n        (!this.isOverflow() || this.getLines() < 2) &&\n        this.offset < this.text.length\n      ) {\n        this.moveEdge(1)\n      }\n    },\n    clamp () {\n      while (this.isOverflow() && this.getLines() > 1 && this.offset > 0) {\n        this.moveEdge(-1)\n      }\n    },\n    search (...range) {\n      const [from = 0, to = this.offset] = range\n      if (to - from <= 3) {\n        this.stepToFit()\n        return\n      }\n      const target = Math.floor((to + from) / 2)\n      this.clampAt(target)\n      if (this.isOverflow()) {\n        this.search(from, target)\n      } else {\n        this.search(target, to)\n      }\n    },\n    cleanUp () {\n      if (this.unregisterResizeCallback) {\n        this.unregisterResizeCallback()\n      }\n    }\n  },\n  render (h) {\n    const contents = [\n      h(\n        'span',\n        this.$isServer\n          ? {}\n          : {\n            ref: 'text',\n            attrs: {\n              'aria-label': this.text.trim()\n            }\n          },\n        this.$isServer ? this.text : this.realText\n      )\n    ]\n\n    const { expand, collapse, toggle } = this\n    const scope = {\n      expand,\n      collapse,\n      toggle,\n      clamped: this.isClamped,\n      expanded: this.localExpanded\n    }\n    const before = this.$scopedSlots.before\n      ? this.$scopedSlots.before(scope)\n      : this.$slots.before\n    if (before) {\n      contents.unshift(...(Array.isArray(before) ? before : [before]))\n    }\n    const after = this.$scopedSlots.after\n      ? this.$scopedSlots.after(scope)\n      : this.$slots.after\n    if (after) {\n      contents.push(...(Array.isArray(after) ? after : [after]))\n    }\n    const lines = [\n      h(\n        'span',\n        {\n          style: {\n            boxShadow: 'transparent 0 0'\n          },\n          ref: 'content'\n        },\n        contents\n      )\n    ]\n    return h(\n      this.tag,\n      {\n        style: {\n          maxHeight: this.realMaxHeight,\n          overflow: 'hidden'\n        }\n      },\n      lines\n    )\n  }\n}\n"]}]}