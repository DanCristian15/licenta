{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/modals/LoginModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/shared/components/modals/LoginModal.vue","mtime":1649601410555},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvY3Jpc3RpYW5kYW4vRGVza3RvcC9saWZlc3R5bGUtdWkvbm9kZV9tb2R1bGVzL0B2dWUvYmFiZWwtcHJlc2V0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9jcmlzdGlhbmRhbi9EZXNrdG9wL2xpZmVzdHlsZS11aS9ub2RlX21vZHVsZXMvQHZ1ZS9iYWJlbC1wcmVzZXQtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgcmVxdWlyZWQsIGVtYWlsIH0gZnJvbSAndnVlbGlkYXRlL2xpYi92YWxpZGF0b3JzJzsKaW1wb3J0IHsgbWFwQWN0aW9ucywgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgSGVhZGVyVmFyaWFudDEgZnJvbSAnQGNvcmUvc2hhcmVkL2NvbXBvbmVudHMvbW9kYWxzL2xheW91dC9IZWFkZXJWYXJpYW50MS52dWUnOwppbXBvcnQgQ2xvc2VNb2RhbE9uUm91dGVDaGFuZ2VNaXhpbiBmcm9tICdAY29yZS9taXhpbnMvbW9kYWxzL0Nsb3NlTW9kYWxPblJvdXRlQ2hhbmdlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdMb2dpbk1vZGFsJywKICB0ZXN0SWRPcHRpb25zOiB7CiAgICBrZXlQcmVmaXg6ICdzaGFyZWQuY29tcG9uZW50cy5tb2RhbHMubG9naW5Nb2RhbCcKICB9LAogIGkxOG5PcHRpb25zOiB7CiAgICBuYW1lc3BhY2VzOiAnc2hhcmVkJywKICAgIGtleVByZWZpeDogJ2NvbXBvbmVudHMubW9kYWxzLmxvZ2luJwogIH0sCiAgY29tcG9uZW50czogewogICAgSGVhZGVyVmFyaWFudDE6IEhlYWRlclZhcmlhbnQxCiAgfSwKICBtaXhpbnM6IFtDbG9zZU1vZGFsT25Sb3V0ZUNoYW5nZU1peGluXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZW1haWw6ICcnLAogICAgICBzZXJ2ZXJFcnJvcjogJycsCiAgICAgIHBhc3N3b3JkOiAnJwogICAgfTsKICB9LAogIHZhbGlkYXRpb25zOiBmdW5jdGlvbiB2YWxpZGF0aW9ucygpIHsKICAgIHZhciByZXQgPSB7CiAgICAgIGVtYWlsOiB7CiAgICAgICAgcmVxdWlyZWQ6IHJlcXVpcmVkLAogICAgICAgIGVtYWlsOiBlbWFpbCwKICAgICAgICBzZXJ2ZXJGYWlsZWQ6IGZ1bmN0aW9uIHNlcnZlckZhaWxlZCgpIHsKICAgICAgICAgIHJldHVybiAhdGhpcy5zZXJ2ZXJFcnJvci5sZW5ndGg7CiAgICAgICAgfQogICAgICB9LAogICAgICBwYXNzd29yZDogewogICAgICAgIHJlcXVpcmVkOiByZXF1aXJlZCwKICAgICAgICBzZXJ2ZXJGYWlsZWQ6IGZ1bmN0aW9uIHNlcnZlckZhaWxlZCgpIHsKICAgICAgICAgIHJldHVybiAhdGhpcy5zZXJ2ZXJFcnJvci5sZW5ndGg7CiAgICAgICAgfQogICAgICB9CiAgICB9OwogICAgcmV0dXJuIHJldDsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKHsKICAgIGxvYWRpbmdQcm9maWxlOiAndXNlci9wcm9maWxlL2xvYWRpbmcnLAogICAgZ2V0UHJvZmlsZUhhc0Vycm9yOiAndXNlci9wcm9maWxlL2hhc0Vycm9yJywKICAgIGdldFVzZXJzOiAndXNlci9zaWduVXAvZ2V0VXNlcnMnCiAgfSkpLAogIHdhdGNoOiB7CiAgICAnZW1haWwnOiBmdW5jdGlvbiBlbWFpbCgpIHsKICAgICAgdGhpcy5zZXJ2ZXJFcnJvciA9ICcnOwogICAgfSwKICAgICdwYXNzd29yZCc6IGZ1bmN0aW9uIHBhc3N3b3JkKCkgewogICAgICB0aGlzLnNlcnZlckVycm9yID0gJyc7CiAgICB9CiAgfSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcEFjdGlvbnMoewogICAgY29tbWl0U2V0TG9nZ2VkVXNlcjogJ3VzZXIvbG9nZ2VkVXNlci9jb21taXRTZXRMb2dnZWRVc2VyJywKICAgIHVzZXJMb2dpbjogJ3VzZXIvbG9naW4nLAogICAgc2hvd0xvYWRpbmdPdmVybGF5OiAnYXBwU3RhdGUvc2V0TG9hZGluZycKICB9KSksIHt9LCB7CiAgICBnb1RvU2lnblVwUGFnZTogZnVuY3Rpb24gZ29Ub1NpZ25VcFBhZ2UoKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBuYW1lOiAnc2lnblVwJwogICAgICB9KTsKICAgIH0sCiAgICByZXF1aXJlZEVycm9yOiBmdW5jdGlvbiByZXF1aXJlZEVycm9yKF9yZWYpIHsKICAgICAgdmFyIGZpZWxkID0gX3JlZi5maWVsZDsKICAgICAgdmFyIGVycm9ycyA9IFtdOwogICAgICBpZiAoIXRoaXMuJHZbIiIuY29uY2F0KGZpZWxkKV0uJGRpcnR5KSByZXR1cm4gZXJyb3JzOwogICAgICAhdGhpcy4kdlsiIi5jb25jYXQoZmllbGQpXS5yZXF1aXJlZCAmJiBlcnJvcnMucHVzaCh0aGlzLiR0KCdfY29tbW9uOmZvcm1FcnJvcnMucmVxdWlyZWRGaWVsZCcsIHsKICAgICAgICBmaWVsZDogdGhpcy4kdCgiX2NvbW1vbjpmb3JtLmxhYmVscy4iLmNvbmNhdChmaWVsZCkpLAogICAgICAgIGludGVycG9sYXRpb246IHsKICAgICAgICAgIGVzY2FwZVZhbHVlOiBmYWxzZQogICAgICAgIH0KICAgICAgfSkpOwogICAgICByZXR1cm4gZXJyb3JzOwogICAgfSwKICAgIGVtYWlsRXJyb3I6IGZ1bmN0aW9uIGVtYWlsRXJyb3IoX3JlZjIpIHsKICAgICAgdmFyIGZpZWxkID0gX3JlZjIuZmllbGQ7CiAgICAgIHZhciBlcnJvcnMgPSBbXTsKICAgICAgaWYgKCF0aGlzLiR2WyIiLmNvbmNhdChmaWVsZCldLiRkaXJ0eSkgcmV0dXJuIGVycm9yczsKICAgICAgIXRoaXMuJHZbIiIuY29uY2F0KGZpZWxkKV0uZW1haWwgJiYgZXJyb3JzLnB1c2godGhpcy4kdCgnX2NvbW1vbjpmb3JtRXJyb3JzLmVtYWlsJywgewogICAgICAgIGZpZWxkOiB0aGlzLiR0KCJfY29tbW9uOmZvcm0ubGFiZWxzLiIuY29uY2F0KGZpZWxkKSksCiAgICAgICAgaW50ZXJwb2xhdGlvbjogewogICAgICAgICAgZXNjYXBlVmFsdWU6IGZhbHNlCiAgICAgICAgfQogICAgICB9KSk7CiAgICAgIHJldHVybiBlcnJvcnM7CiAgICB9LAogICAgZW1haWxTZXJ2ZXJFcnJvcjogZnVuY3Rpb24gZW1haWxTZXJ2ZXJFcnJvcigpIHsKICAgICAgdmFyIGVycm9ycyA9IFtdOwoKICAgICAgaWYgKHRoaXMuc2VydmVyRXJyb3IubGVuZ3RoKSB7CiAgICAgICAgZXJyb3JzLnB1c2godGhpcy5zZXJ2ZXJFcnJvcik7CiAgICAgIH0KCiAgICAgIHJldHVybiBlcnJvcnM7CiAgICB9LAogICAgdmFsaWRhdGU6IGZ1bmN0aW9uIHZhbGlkYXRlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy4kdi4kdG91Y2goKTsKICAgICAgdmFyIHVzZXJzID0gdGhpcy5nZXRVc2VyczsKICAgICAgdmFyIG1hdGNoID0gZmFsc2U7CiAgICAgIHVzZXJzLmZvckVhY2goZnVuY3Rpb24gKHVzZXIpIHsKICAgICAgICBpZiAodXNlci5lbWFpbCA9PT0gX3RoaXMuZW1haWwgJiYgdXNlci5wYXNzd29yZCA9PT0gX3RoaXMucGFzc3dvcmQpIHsKICAgICAgICAgIG1hdGNoID0gdHJ1ZTsKCiAgICAgICAgICBfdGhpcy5jb21taXRTZXRMb2dnZWRVc2VyKHsKICAgICAgICAgICAgbmFtZTogdXNlci5uYW1lLAogICAgICAgICAgICBwYXNzd29yZDogdXNlci5wYXNzd29yZCwKICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXIudXNlcm5hbWUsCiAgICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgICBpZiAoIW1hdGNoKSByZXR1cm4gdGhpcy4kdi5pbnZhbGlkO2Vsc2UgcmV0dXJuICF0aGlzLiR2LmludmFsaWQ7CiAgICB9LAogICAgb25Mb2dpblN1Ym1pdDogZnVuY3Rpb24gb25Mb2dpblN1Ym1pdChldmVudCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwoKICAgICAgICAgICAgICAgIGlmIChfdGhpczIudmFsaWRhdGUoKSkgewogICAgICAgICAgICAgICAgICBfdGhpczIuJHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAnaG9tZScKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBfdGhpczIuc2hvd0xvYWRpbmdPdmVybGF5KGZhbHNlKTsKCiAgICAgICAgICAgICAgICAgIF90aGlzMi4kdi4kcmVzZXQoKTsKCiAgICAgICAgICAgICAgICAgIF90aGlzMi5zZXJ2ZXJFcnJvciA9IF90aGlzMi4kdCgnbWVzc2FnZXMubm9FbWFpbCcpOwoKICAgICAgICAgICAgICAgICAgX3RoaXMyLiR2LiR0b3VjaCgpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSkKfTs="},{"version":3,"sources":["LoginModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-card class=\"gst-login-modal d-flex flex-column\" color=\"text\">\n        <!-- TODO:  This is a test modal to test out login\n            This modal will be updated in another task\n         -->\n        <HeaderVariant1 class=\"mb-3\" title=\"Login\" @close=\"$emit('close')\" />\n        <div class=\"d-flex align-center ml-6 mb-2\">\n            <div>\n                If you don't have an account please sign up!\n            </div>\n\n            <button class=\"sign-up-button ml-2\" @click=\"goToSignUpPage\">\n                Sign up\n            </button>\n        </div>\n        <v-card-text class=\"flex-grow-0 content-max-width px-4 pb-2\" :style=\"{ color:'inherit'}\">\n            <form>\n                <v-text-field\n                    v-model=\"email\"\n                    :data-test-id=\"$testId('input.email')\"\n                    color=\"black\"\n                    class=\"gst-input--secondary gst-input\"\n                    :label=\"$t('_common:form.labels.email')\"\n                    :error-messages=\"[\n                        ...requiredError({ field: 'email'}),\n                        ...emailError({ field: 'email'}),\n                        ...emailServerError()\n                    ]\"\n                    required\n                    outlined />\n                <v-text-field\n                    v-model=\"password\"\n                    class=\"gst-input--secondary gst-input\"\n                    type=\"password\"\n                    color=\"black\"\n                    required\n                    outlined\n                    placeholder=\"Password\"\n                    :error-messages=\"[\n                        ...requiredError({ field: 'password' }),\n                        ...emailServerError()\n                    ]\" />\n                <v-btn\n                    center\n                    text\n                    outlined\n                    :data-test-id=\"$testId('button.submit')\"\n                    class=\"text-capitalize gst-login-btn float-right\"\n                    color=\"#ADACAC\"\n                    type=\"submit\"\n                    v-bind=\"$attrs\"\n                    @click.native=\"onLoginSubmit\">\n                    {{ $t('_common:buttons.login') }}\n                </v-btn>\n            </form>\n        </v-card-text>\n    </v-card>\n</template>\n<script>\n    import { required, email } from 'vuelidate/lib/validators';\n    import { mapActions, mapGetters } from 'vuex';\n    import HeaderVariant1 from '@core/shared/components/modals/layout/HeaderVariant1.vue';\n    import CloseModalOnRouteChangeMixin from '@core/mixins/modals/CloseModalOnRouteChange';\n\n    export default {\n        name: 'LoginModal',\n        testIdOptions: {\n            keyPrefix: 'shared.components.modals.loginModal'\n        },\n        i18nOptions: {\n            namespaces: 'shared',\n            keyPrefix: 'components.modals.login',\n        },\n        components: {\n            HeaderVariant1\n        },\n        mixins: [ CloseModalOnRouteChangeMixin ],\n        data: function() {\n            return {\n                email: '',\n                serverError: '',\n                password: ''\n            };\n        },\n        validations() {\n            const ret = {\n                email: {\n                    required,\n                    email,\n                    serverFailed : function() {\n                        return !this.serverError.length;\n                    }\n                },\n                password: {\n                    required,\n                    serverFailed : function() {\n                        return !this.serverError.length;\n                    }\n                },\n            };\n\n            return ret;\n        },\n        computed: {\n            ...mapGetters( {\n                loadingProfile: 'user/profile/loading',\n                getProfileHasError: 'user/profile/hasError',\n                getUsers: 'user/signUp/getUsers'\n            } )\n        },\n        watch: {\n            'email': function ( ) {\n                this.serverError = '';\n            },\n            'password': function ( ) {\n                this.serverError = '';\n            }\n        },\n        methods: {\n            ...mapActions( {\n                commitSetLoggedUser         : 'user/loggedUser/commitSetLoggedUser',\n                userLogin                   : 'user/login',\n                showLoadingOverlay          : 'appState/setLoading',\n            } ),\n            goToSignUpPage() {\n                this.$router.push( { name: 'signUp' } );\n            },\n            requiredError( { field } ) {\n                let errors = [];\n                if ( !this.$v[`${field}`].$dirty ) return errors;\n                !this.$v[`${field}`].required   && errors.push ( this.$t( '_common:formErrors.requiredField', { field: this.$t( `_common:form.labels.${field}` ), interpolation : { escapeValue: false } } ) );\n                return errors;\n            },\n            emailError( { field } ) {\n                let errors = [];\n                if ( !this.$v[`${field}`].$dirty ) return errors;\n                !this.$v[`${field}`].email  && errors.push( this.$t( '_common:formErrors.email', { field: this.$t( `_common:form.labels.${field}` ), interpolation: { escapeValue: false } } ) );\n                return errors;\n            },\n            emailServerError( ) {\n                let errors = [];\n                if ( this.serverError.length ) {\n                    errors.push( this.serverError );\n                }\n                return errors;\n            },\n            validate( ) {\n                this.$v.$touch();\n                let users = this.getUsers;\n                let match = false;\n                users.forEach( user => {\n                    if ( user.email === this.email &&  user.password === this.password ) {\n                        match = true;\n                        this.commitSetLoggedUser( { name: user.name, password: user.password, username: user.username, email: user.email } );\n                    }\n                } );\n\n                if ( !match )\n                    return this.$v.invalid;\n                else\n                    return !this.$v.invalid;\n\n\n            },\n            async onLoginSubmit( event ) {\n                event.preventDefault();\n                event.stopPropagation( );\n\n                if ( this.validate() ) {\n                    this.$router.push( { name: 'home' } );\n                } else {\n                    this.showLoadingOverlay ( false );\n                    this.$v.$reset();\n                    this.serverError = this.$t( 'messages.noEmail' );\n                    this.$v.$touch();\n                }\n\n            },\n        }\n    };\n</script>\n<style lang=\"scss\" scoped>\n    @import \"@scssVariables\";\n\n    .gst-login-modal__toolbar {\n        border-bottom: 1px solid theme-color( 'quinary' );\n    }\n\n    .gst-login-modal__title {\n        font-weight: font-weight( 'medium' );\n    }\n\n    .gst-login-btn.v-btn.v-btn--outlined {\n        font-weight: font-weight( 'medium' );\n        border-radius: border-radius( 'm' ) !important;\n        min-height: 44px;\n\n        &.v-btn--disabled {\n            color: theme-color( 'primary' ) !important;\n            border-color: theme-color( 'primary' );\n            opacity: 0.4;\n        }\n    }\n\n    .gst-login-btn.v-btn.v-btn--outlined:not([disabled]) {\n        border-color: #ADACAC;\n    }\n\n    .sign-up-button {\n        height: 30px;\n        width: 70px;\n        background-color: #ADACAC;\n        border-radius: border-radius( 'm' ) !important;\n    }\n</style>\n\n<style lang=\"scss\">\n    @import \"@scssVariables\";\n\n    .gst-login-modal__icon-close .gst-svg-icon {\n        fill: theme-color( 'tertiary' );\n    }\n\n    .gst-login-modal__header .v-toolbar__content {\n        justify-content: end;\n    }\n\n    .gst-login-modal {\n        .gst-login-modal__close.v-btn {\n            min-width: auto;\n        }\n    }\n</style>\n"],"sourceRoot":"src/core/shared/components/modals"}]}