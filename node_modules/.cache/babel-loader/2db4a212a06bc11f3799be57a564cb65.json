{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/core/data/response/normalizeOrder.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/data/response/normalizeOrder.js","mtime":1645805363884},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0IHsgcGFyc2VEYXRlU3RyaW5nIGFzIGRhdGVVdGlsc1BhcnNlRGF0ZVN0cmluZyB9IGZyb20gJ0Bjb3JlL3V0aWxzL2RhdGVVdGlscyc7CmltcG9ydCB7IG5vcm1hbGl6ZU9yZGVySXRlbSB9IGZyb20gJ0Bjb3JlL2RhdGEvcmVzcG9uc2Uvbm9ybWFsaXplT3JkZXJJdGVtJzsKaW1wb3J0IHsgbm9ybWFsaXplQ2hhcmdlIH0gZnJvbSAnQC9jb3JlL2RhdGEvcmVzcG9uc2Uvbm9ybWFsaXplQ2hhcmdlJzsKLyoqCiAqIE9yZGVyCiAqCiAqIE5vcm1hbGl6ZSBPcmRlciBPYmplY3QKICovCgpleHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplT3JkZXIoZGF0YSkgewogIHJldHVybiB7CiAgICBjcmVhdGVkOiBkYXRlVXRpbHNQYXJzZURhdGVTdHJpbmcoZGF0YS5jcmVhdGVkKSwKICAgIGNyZWF0ZWRBdDogZGF0ZVV0aWxzUGFyc2VEYXRlU3RyaW5nKGRhdGEuY3JlYXRlZEF0KSwKICAgIGN1cnJlbmN5OiBkYXRhLmN1cnJlbmN5LAogICAgaWQ6IGRhdGEuaWQsCiAgICBpdGVtczogZGF0YS5pdGVtcy5tYXAobm9ybWFsaXplT3JkZXJJdGVtKSwKICAgIHBheW1lbnRDYXNoOiBkYXRhLnBheW1lbnRDYXNoLAogICAgcGF5bWVudFBvaW50czogZGF0YS5wb2ludHNQYXltZW50LAogICAgcGF5bWVudFN0YXR1czogZGF0YS5wYXltZW50U3RhdHVzLAogICAgcG9pbnRzRWFybmVkOiBkYXRhLnBvaW50c0Vhcm5lZCwKICAgIHBheW1lbnRJbmZvOiBub3JtYWxpemVQYXltZW50SW5mbyhkYXRhLnBheW1lbnRJbmZvIHx8IHt9KSwKICAgIHN0YXR1czogZGF0YS5vcmRlclN0YXR1cywKICAgIHRvdGFsQW1vdW50OiBkYXRhLnRvdGFsUHJpY2UsCiAgICB0b3RhbFRheGVzOiBkYXRhLnRvdGFsVGF4ZXMsCiAgICB1c2VySWQ6IGRhdGEudXNlcklkLAogICAgY2hhcmdlczogZGF0YS5pdGVtcy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgaXRlbSkgewogICAgICByZXR1cm4gYWNjID0gYWNjLmNvbmNhdChpdGVtLmNoYXJnZXMubWFwKG5vcm1hbGl6ZUNoYXJnZSkpOwogICAgfSwgW10pCiAgfTsKfQoKZnVuY3Rpb24gbm9ybWFsaXplUGF5bWVudEluZm8oaW5mbykgewogIHJldHVybiB7CiAgICBjYXJkOiB7CiAgICAgIGV4cGlyZU1vbnRoOiBpbmZvLmNhcmRFeHBpcmVNb250aCwKICAgICAgZXhwaXJlWWVhcjogaW5mby5jYXJkRXhwaXJlWWVhciwKICAgICAgbGFzdDQ6IGluZm8uY2FyZExhc3Q0LAogICAgICB0eXBlOiBpbmZvLmNhcmRUeXBlCiAgICB9CiAgfTsKfQ=="},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/core/data/response/normalizeOrder.js"],"names":["parseDateString","dateUtilsParseDateString","normalizeOrderItem","normalizeCharge","normalizeOrder","data","created","createdAt","currency","id","items","map","paymentCash","paymentPoints","pointsPayment","paymentStatus","pointsEarned","paymentInfo","normalizePaymentInfo","status","orderStatus","totalAmount","totalPrice","totalTaxes","userId","charges","reduce","acc","item","concat","info","card","expireMonth","cardExpireMonth","expireYear","cardExpireYear","last4","cardLast4","type","cardType"],"mappings":";;AAAA,SACIA,eAAe,IAAIC,wBADvB,QAEO,uBAFP;AAGA,SAASC,kBAAT,QAAmC,wCAAnC;AACA,SAASC,eAAT,QAAgC,sCAAhC;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,cAAT,CAAyBC,IAAzB,EAAgC;AACnC,SAAO;AACHC,IAAAA,OAAO,EAASL,wBAAwB,CAAEI,IAAI,CAACC,OAAP,CADrC;AAEHC,IAAAA,SAAS,EAAON,wBAAwB,CAAEI,IAAI,CAACE,SAAP,CAFrC;AAGHC,IAAAA,QAAQ,EAAQH,IAAI,CAACG,QAHlB;AAIHC,IAAAA,EAAE,EAAcJ,IAAI,CAACI,EAJlB;AAKHC,IAAAA,KAAK,EAAWL,IAAI,CAACK,KAAL,CAAWC,GAAX,CAAgBT,kBAAhB,CALb;AAMHU,IAAAA,WAAW,EAAKP,IAAI,CAACO,WANlB;AAOHC,IAAAA,aAAa,EAAGR,IAAI,CAACS,aAPlB;AAQHC,IAAAA,aAAa,EAAGV,IAAI,CAACU,aARlB;AASHC,IAAAA,YAAY,EAAIX,IAAI,CAACW,YATlB;AAUHC,IAAAA,WAAW,EAAKC,oBAAoB,CAAEb,IAAI,CAACY,WAAL,IAAoB,EAAtB,CAVjC;AAWHE,IAAAA,MAAM,EAAUd,IAAI,CAACe,WAXlB;AAYHC,IAAAA,WAAW,EAAKhB,IAAI,CAACiB,UAZlB;AAaHC,IAAAA,UAAU,EAAMlB,IAAI,CAACkB,UAblB;AAcHC,IAAAA,MAAM,EAAUnB,IAAI,CAACmB,MAdlB;AAeHC,IAAAA,OAAO,EAASpB,IAAI,CAACK,KAAL,CAAWgB,MAAX,CAAmB,UAAEC,GAAF,EAAOC,IAAP,EAAiB;AAChD,aAAOD,GAAG,GAAGA,GAAG,CAACE,MAAJ,CAAYD,IAAI,CAACH,OAAL,CAAad,GAAb,CAAkBR,eAAlB,CAAZ,CAAb;AACH,KAFe,EAEb,EAFa;AAfb,GAAP;AAmBH;;AAGD,SAASe,oBAAT,CAA+BY,IAA/B,EAAsC;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAE;AACFC,MAAAA,WAAW,EAASF,IAAI,CAACG,eADvB;AAEFC,MAAAA,UAAU,EAAUJ,IAAI,CAACK,cAFvB;AAGFC,MAAAA,KAAK,EAAeN,IAAI,CAACO,SAHvB;AAIFC,MAAAA,IAAI,EAAgBR,IAAI,CAACS;AAJvB;AADH,GAAP;AAQH","sourcesContent":["import {\n    parseDateString as dateUtilsParseDateString\n} from '@core/utils/dateUtils';\nimport { normalizeOrderItem } from '@core/data/response/normalizeOrderItem';\nimport { normalizeCharge } from '@/core/data/response/normalizeCharge';\n\n/**\n * Order\n *\n * Normalize Order Object\n */\n\nexport function normalizeOrder( data ) {\n    return {\n        created:        dateUtilsParseDateString( data.created ),\n        createdAt:      dateUtilsParseDateString( data.createdAt ),\n        currency:       data.currency,\n        id:             data.id,\n        items:          data.items.map( normalizeOrderItem ),\n        paymentCash:    data.paymentCash,\n        paymentPoints:  data.pointsPayment,\n        paymentStatus:  data.paymentStatus,\n        pointsEarned:   data.pointsEarned,\n        paymentInfo:    normalizePaymentInfo( data.paymentInfo || { } ),\n        status:         data.orderStatus,\n        totalAmount:    data.totalPrice,\n        totalTaxes:     data.totalTaxes,\n        userId:         data.userId,\n        charges:        data.items.reduce( ( acc, item ) => {\n            return acc = acc.concat( item.charges.map( normalizeCharge ) );\n        }, [] ),\n    };\n}\n\n\nfunction normalizePaymentInfo( info ) {\n    return {\n        card: {\n            expireMonth:        info.cardExpireMonth,\n            expireYear:         info.cardExpireYear,\n            last4:              info.cardLast4,\n            type:               info.cardType,\n        },\n    };\n}"]}]}