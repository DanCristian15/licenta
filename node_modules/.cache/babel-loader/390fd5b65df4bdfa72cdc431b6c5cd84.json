{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/user/signUp.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/user/signUp.js","mtime":1648835865509},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvY3Jpc3RpYW5kYW4vRGVza3RvcC9saWZlc3R5bGUtdWkvbm9kZV9tb2R1bGVzL0B2dWUvYmFiZWwtcHJlc2V0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwovLyBpbXBvcnQgYXBpU2VydmljZVVzZXIgZnJvbSAnQGNvcmUvYXBpL2FwaVNlcnZpY2VVc2VyJzsKaW1wb3J0IG11dGF0aW9uVHlwZXMgZnJvbSAnQGNvcmUvaGVscGVycy9zdG9yZUZhY3Rvcmllcy9oZWxwZXJzL211dGF0aW9uVHlwZXMnOyAvLyBpbXBvcnQgTG9nU2VydmljZSBmcm9tICdAc2VydmljZXMvTG9nU2VydmljZSc7Cgp2YXIgU1RPUkVfTkFNRSA9ICdzaWduVXAnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogU1RPUkVfTkFNRSwKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICB1c2VyOiB7CiAgICAgIGZ1bGxOYW1lOiBudWxsLAogICAgICBlbWFpbDogbnVsbCwKICAgICAgdXNlcm5hbWU6IG51bGwsCiAgICAgIHBhc3N3b3JkOiBudWxsCiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBnZXRGdWxsTmFtZTogZnVuY3Rpb24gZ2V0RnVsbE5hbWUoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnVzZXIuZnVsbE5hbWU7CiAgICB9LAogICAgZ2V0UGFzc3dvcmQ6IGZ1bmN0aW9uIGdldFBhc3N3b3JkKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS51c2VyLnBhc3N3b3JkOwogICAgfSwKICAgIGdldFVzZXJuYW1lOiBmdW5jdGlvbiBnZXRVc2VybmFtZShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudXNlci51c2VybmFtZTsKICAgIH0sCiAgICBnZXRFbWFpbDogZnVuY3Rpb24gZ2V0RW1haWwoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnVzZXIuZW1haWw7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IF9kZWZpbmVQcm9wZXJ0eSh7CiAgICBzZXRVc2VyOiBmdW5jdGlvbiBzZXRVc2VyKHN0YXRlLCBmdWxsTmFtZSwgdXNlcm5hbWUsIGVtYWlsLCBwYXNzd29yZCkgewogICAgICBzdGF0ZS51c2VyLmZ1bGxOYW1lID0gZnVsbE5hbWU7CiAgICAgIHN0YXRlLnVzZXIudXNlcm5hbWUgPSB1c2VybmFtZTsKICAgICAgc3RhdGUudXNlci5lbWFpbCA9IGVtYWlsOwogICAgICBzdGF0ZS51c2VyLnBhc3N3b3JkID0gcGFzc3dvcmQ7CiAgICB9CiAgfSwgbXV0YXRpb25UeXBlcy5DTEVBUiwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgICBzdGF0ZS51c2VyLmZ1bGxOYW1lID0gbnVsbDsKICAgIHN0YXRlLnVzZXIuZW1haWwgPSBudWxsOwogICAgc3RhdGUudXNlci5wYXNzd29yZCA9IG51bGw7CiAgICBzdGF0ZS51c2VyLnVzZXJuYW1lID0gbnVsbDsKICB9KSwKICBhY3Rpb25zOiB7CiAgICBhZGRVc2VyOiBmdW5jdGlvbiBhZGRVc2VyKF9yZWYpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICBjb21taXQoJ3NldFVzZXInKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/user/signUp.js"],"names":["mutationTypes","STORE_NAME","name","namespaced","state","user","fullName","email","username","password","getters","getFullName","getPassword","getUsername","getEmail","mutations","setUser","CLEAR","actions","addUser","commit"],"mappings":";AAAA;AACA,OAAOA,aAAP,MAA0B,oDAA1B,C,CACA;;AAEA,IAAMC,UAAU,GAAG,QAAnB;AAEA,eAAe;AACXC,EAAAA,IAAI,EAAED,UADK;AAEXE,EAAAA,UAAU,EAAE,IAFD;AAGXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAE;AACFC,MAAAA,QAAQ,EAAE,IADR;AAEFC,MAAAA,KAAK,EAAE,IAFL;AAGFC,MAAAA,QAAQ,EAAE,IAHR;AAIFC,MAAAA,QAAQ,EAAE;AAJR;AADH,GAHI;AAWXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,WAAW,EAAE,qBAAAP,KAAK;AAAA,aAAIA,KAAK,CAACC,IAAN,CAAWC,QAAf;AAAA,KADb;AAELM,IAAAA,WAAW,EAAE,qBAAAR,KAAK;AAAA,aAAIA,KAAK,CAACC,IAAN,CAAWI,QAAf;AAAA,KAFb;AAGLI,IAAAA,WAAW,EAAE,qBAAAT,KAAK;AAAA,aAAIA,KAAK,CAACC,IAAN,CAAWG,QAAf;AAAA,KAHb;AAILM,IAAAA,QAAQ,EAAE,kBAAAV,KAAK;AAAA,aAAIA,KAAK,CAACC,IAAN,CAAWE,KAAf;AAAA;AAJV,GAXE;AAiBXQ,EAAAA,SAAS;AACLC,IAAAA,OADK,mBACIZ,KADJ,EACWE,QADX,EACqBE,QADrB,EAC+BD,KAD/B,EACsCE,QADtC,EACiD;AAClDL,MAAAA,KAAK,CAACC,IAAN,CAAWC,QAAX,GAAsBA,QAAtB;AACAF,MAAAA,KAAK,CAACC,IAAN,CAAWG,QAAX,GAAsBA,QAAtB;AACAJ,MAAAA,KAAK,CAACC,IAAN,CAAWE,KAAX,GAAmBA,KAAnB;AACAH,MAAAA,KAAK,CAACC,IAAN,CAAWI,QAAX,GAAsBA,QAAtB;AACH;AANI,KAOJT,aAAa,CAACiB,KAPV,YAOkBb,KAPlB,EAO0B;AAC3BA,IAAAA,KAAK,CAACC,IAAN,CAAWC,QAAX,GAAsB,IAAtB;AACAF,IAAAA,KAAK,CAACC,IAAN,CAAWE,KAAX,GAAmB,IAAnB;AACAH,IAAAA,KAAK,CAACC,IAAN,CAAWI,QAAX,GAAsB,IAAtB;AACAL,IAAAA,KAAK,CAACC,IAAN,CAAWG,QAAX,GAAsB,IAAtB;AACH,GAZI,CAjBE;AA+BXU,EAAAA,OAAO,EAAE;AACLC,IAAAA,OADK,yBACiB;AAAA,UAAXC,MAAW,QAAXA,MAAW;AAClBA,MAAAA,MAAM,CAAE,SAAF,CAAN;AACH;AAHI;AA/BE,CAAf","sourcesContent":["// import apiServiceUser from '@core/api/apiServiceUser';\nimport mutationTypes from '@core/helpers/storeFactories/helpers/mutationTypes';\n// import LogService from '@services/LogService';\n\nconst STORE_NAME = 'signUp';\n\nexport default {\n    name: STORE_NAME,\n    namespaced: true,\n    state: {\n        user: {\n            fullName: null,\n            email: null,\n            username: null,\n            password: null\n        }\n    },\n    getters: {\n        getFullName: state => state.user.fullName,\n        getPassword: state => state.user.password,\n        getUsername: state => state.user.username,\n        getEmail: state => state.user.email\n    },\n    mutations: {\n        setUser( state, fullName, username, email, password ) {\n            state.user.fullName = fullName;\n            state.user.username = username;\n            state.user.email = email;\n            state.user.password = password;\n        },\n        [mutationTypes.CLEAR]( state ) {\n            state.user.fullName = null;\n            state.user.email = null;\n            state.user.password = null;\n            state.user.username = null;\n        }\n    },\n    actions: {\n        addUser( { commit } ) {\n            commit( 'setUser' );\n        }\n    }\n};"]}]}