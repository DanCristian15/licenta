{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/unregisterServiceWorker.js","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/unregisterServiceWorker.js","mtime":1645805363995},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiKTsKCi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi8KdmFyIF9yZXF1aXJlID0gcmVxdWlyZSgnQGNvcmUvc2VydmljZXMnKSwKICAgIExvZ1NlcnZpY2UgPSBfcmVxdWlyZS5Mb2dTZXJ2aWNlOwovKioKICogT2xkIHNlcnZpY2Ugd29ya2VyIGJlZm9yZSBicmFuZGluZwogKiBXZSBuZWVkIHRvIGRlbGV0ZSB0aGUgb2xkIHNlcnZpY2Ugd29ya2VyCiAqLwoKCmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7CiAgbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIuZ2V0UmVnaXN0cmF0aW9ucygpLnRoZW4oZnVuY3Rpb24gKHJlZ2lzdHJhdGlvbnMpIHsKICAgIHZhciBmb3VuZCA9IGZhbHNlOwogICAgTG9nU2VydmljZS5sb2coJ1RyeWluZyB0byBmaW5kIGFueSBTVycpOwogICAgcmVnaXN0cmF0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChzdykgewogICAgICBzdy51bnJlZ2lzdGVyKCk7CiAgICAgIGZvdW5kID0gdHJ1ZTsKICAgIH0pOwoKICAgIGlmIChmb3VuZCkgewogICAgICBMb2dTZXJ2aWNlLmxvZygnU1cgRm91bmQgcmVsb2FkaW5nLi4uJyk7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQodHJ1ZSk7CiAgICAgIH0sIDEwMDApOwogICAgfSBlbHNlIHsKICAgICAgTG9nU2VydmljZS5sb2coJ1NXIG5vdCBmb3VuZCcpOwogICAgfQogIH0pOwp9"},{"version":3,"sources":["/Users/cristiandan/Desktop/proiect-licenta-front/src/core/unregisterServiceWorker.js"],"names":["require","LogService","process","env","NODE_ENV","navigator","serviceWorker","getRegistrations","then","registrations","found","log","forEach","sw","unregister","setTimeout","window","location","reload"],"mappings":";;AAAA;eAEuBA,OAAO,CAAE,gBAAF,C;IAAtBC,U,YAAAA,U;AAER;AACA;AACA;AACA;;;AAEA,IAAKC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA9B,EAA6C;AACzCC,EAAAA,SAAS,CAACC,aAAV,CAAwBC,gBAAxB,GACKC,IADL,CACW,UAAAC,aAAa,EAAI;AACpB,QAAIC,KAAK,GAAG,KAAZ;AACAT,IAAAA,UAAU,CAACU,GAAX,CAAgB,uBAAhB;AACAF,IAAAA,aAAa,CAACG,OAAd,CAAuB,UAAAC,EAAE,EAAI;AACzBA,MAAAA,EAAE,CAACC,UAAH;AACAJ,MAAAA,KAAK,GAAG,IAAR;AACH,KAHD;;AAIA,QAAKA,KAAL,EAAa;AACTT,MAAAA,UAAU,CAACU,GAAX,CAAgB,uBAAhB;AACAI,MAAAA,UAAU,CAAE,YAAO;AACfC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAwB,IAAxB;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KALD,MAKO;AACHjB,MAAAA,UAAU,CAACU,GAAX,CAAgB,cAAhB;AACH;AACJ,GAhBL;AAiBH","sourcesContent":["/* eslint-disable no-console */\n\nconst { LogService } = require( '@core/services' );\n\n/**\n * Old service worker before branding\n * We need to delete the old service worker\n */\n\nif ( process.env.NODE_ENV === 'production' ) {\n    navigator.serviceWorker.getRegistrations( )\n        .then( registrations => {\n            let found = false;\n            LogService.log( 'Trying to find any SW' );\n            registrations.forEach( sw => {\n                sw.unregister( );\n                found = true;\n            } );\n            if ( found ) {\n                LogService.log( 'SW Found reloading...' );\n                setTimeout( ( ) => {\n                    window.location.reload( true );\n                }, 1000 );\n            } else {\n                LogService.log( 'SW not found' );\n            }\n        } );\n}\n"]}]}