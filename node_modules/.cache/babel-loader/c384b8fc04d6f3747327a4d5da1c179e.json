{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/core/utils/apiUtils.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/utils/apiUtils.js","mtime":1645805363995},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgZnJvbSAiL1VzZXJzL2NyaXN0aWFuZGFuL0Rlc2t0b3AvbGlmZXN0eWxlLXVpL25vZGVfbW9kdWxlcy9AdnVlL2JhYmVsLXByZXNldC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2NyaXN0aWFuZGFuL0Rlc2t0b3AvbGlmZXN0eWxlLXVpL25vZGVfbW9kdWxlcy9AdnVlL2JhYmVsLXByZXNldC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgZmV0Y2ggZnJvbSAnQGNvcmUvdXRpbHMvZmV0Y2gnOwppbXBvcnQgeyBmb3JtYXRRdWVyeVBhcmFtIGFzIGRhdGVVdGlsc0Zvcm1hdFF1ZXJ5UGFyYW0gfSBmcm9tICdAY29yZS91dGlscy9kYXRlVXRpbHMnOwppbXBvcnQgYXBpQ29uc3RhbnRzIGZyb20gJy4vY29uc3RhbnRzL2FwaSc7CmV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemVMaXN0U3VjY2VzcyhfcmVmKSB7CiAgdmFyIGRhdGEgPSBfcmVmLmRhdGE7CiAgcmV0dXJuIHsKICAgIHN1Y2Nlc3M6IHRydWUsCiAgICBkYXRhOiB7CiAgICAgIGxpc3Q6IGRhdGEuaXRlbXMsCiAgICAgIHRvdGFsQ291bnQ6IGRhdGEudG90YWxDb3VudAogICAgfQogIH07Cn0KZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZVN1Y2Nlc3MoX3JlZjIpIHsKICB2YXIgZGF0YSA9IF9yZWYyLmRhdGE7CiAgcmV0dXJuIHsKICAgIHN1Y2Nlc3M6IHRydWUsCiAgICBkYXRhOiBkYXRhCiAgfTsKfQpleHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplU3VjY2Vzc1JhdyhyZXNwb25zZSkgewogIHJldHVybiB7CiAgICBzdWNjZXNzOiB0cnVlLAogICAgZGF0YTogcmVzcG9uc2UKICB9Owp9CmV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemVFcnJvcihfcmVmMykgewogIHZhciB0aXRsZSA9IF9yZWYzLnRpdGxlLAogICAgICBkZXRhaWwgPSBfcmVmMy5kZXRhaWwsCiAgICAgIGRhdGEgPSBfcmVmMy5kYXRhLAogICAgICBzdGF0dXMgPSBfcmVmMy5zdGF0dXMsCiAgICAgIF9yZWYzJGNhbmNlbCA9IF9yZWYzLmNhbmNlbCwKICAgICAgY2FuY2VsID0gX3JlZjMkY2FuY2VsID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYzJGNhbmNlbCwKICAgICAgX3JlZjMkY29kZSA9IF9yZWYzLmNvZGUsCiAgICAgIGNvZGUgPSBfcmVmMyRjb2RlID09PSB2b2lkIDAgPyBudWxsIDogX3JlZjMkY29kZTsKICByZXR1cm4gewogICAgc3VjY2VzczogZmFsc2UsCiAgICB0aXRsZTogdGl0bGUsCiAgICBtZXNzYWdlOiBkZXRhaWwsCiAgICBkZXRhaWw6IGRhdGEsCiAgICBzdGF0dXM6IHN0YXR1cywKICAgIGNvZGU6IGNvZGUsCiAgICBjYW5jZWw6IGNhbmNlbAogIH07Cn0KZXhwb3J0IGZ1bmN0aW9uIGdldERlZmF1bHRHZXRQYXJhbXMoKSB7CiAgcmV0dXJuIHsKICAgIGtleXdvcmQ6IGFwaUNvbnN0YW50cy5HRVRfREVGQVVMVF9QQVJBTVMuS0VZV09SRCwKICAgIGxpbWl0OiBhcGlDb25zdGFudHMuR0VUX0RFRkFVTFRfUEFSQU1TLkxJTUlULAogICAgb2Zmc2V0OiBhcGlDb25zdGFudHMuR0VUX0RFRkFVTFRfUEFSQU1TLk9GRlNFVAogIH07Cn0KZXhwb3J0IGZ1bmN0aW9uIGdldERlZmF1bHRHZXRQYXJhbXNXaXRoQ291bnQoKSB7CiAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgZ2V0RGVmYXVsdEdldFBhcmFtcygpKSwge30sIHsKICAgIGNvdW50OiBmYWxzZQogIH0pOwp9CmV4cG9ydCBmdW5jdGlvbiBjbGVhblF1ZXJ5UGFyYW1zKHBhcmFtcykgewogIHZhciByZXQgPSBfb2JqZWN0U3ByZWFkKHt9LCBwYXJhbXMpOwoKICBmb3IgKHZhciBrZXkgaW4gcmV0KSB7CiAgICBpZiAocmV0W2tleV0gPT09IG51bGwgfHwgcmV0W2tleV0gPT09IHVuZGVmaW5lZCB8fCByZXRba2V5XSA9PT0gJycpIHsKICAgICAgZGVsZXRlIHJldFtrZXldOwogICAgfQogIH0KCiAgcmV0dXJuIHJldDsKfQpleHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplUXVlcnlQYXJhbXMoZGF0YSkgewogIHZhciByZXQgPSBfb2JqZWN0U3ByZWFkKHt9LCBkYXRhKTsKCiAgcmV0LnN0YXJ0RGF0ZSA9IHJldC5zdGFydERhdGUgJiYgZGF0ZVV0aWxzRm9ybWF0UXVlcnlQYXJhbShyZXQuc3RhcnREYXRlKTsKICByZXQuZW5kRGF0ZSA9IHJldC5lbmREYXRlICYmIGRhdGVVdGlsc0Zvcm1hdFF1ZXJ5UGFyYW0ocmV0LmVuZERhdGUpOwogIHJldHVybiBjbGVhblF1ZXJ5UGFyYW1zKHJldCk7Cn0KZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZVF1ZXJ5UGFyYW1zV2l0aENpdHkoX3JlZjQpIHsKICB2YXIgY2l0eSA9IF9yZWY0LmNpdHksCiAgICAgIGNvdW50cnlDb2RlID0gX3JlZjQuY291bnRyeUNvZGUsCiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZjQsIFsiY2l0eSIsICJjb3VudHJ5Q29kZSJdKTsKCiAgaWYgKGNpdHkgJiYgY2l0eS5uYW1lKSB7CiAgICByZXR1cm4gbm9ybWFsaXplUXVlcnlQYXJhbXMoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCByZXN0KSwge30sIHsKICAgICAgY2l0eU5hbWU6IGNpdHkubmFtZSwKICAgICAgc3RhdGVDb2RlOiBjaXR5LnN0YXRlQ29kZSwKICAgICAgY291bnRyeUNvZGU6IGNpdHkuY291bnRyeUNvZGUKICAgIH0pKTsKICB9IGVsc2UgewogICAgcmV0dXJuIG5vcm1hbGl6ZVF1ZXJ5UGFyYW1zKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgcmVzdCksIHt9LCB7CiAgICAgIGNvdW50cnlDb2RlOiBjb3VudHJ5Q29kZQogICAgfSkpOwogIH0KfQpleHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplUXVlcnlQYXJhbXNXaXRoQ2l0eUxvY2F0aW9uKF9yZWY1KSB7CiAgdmFyIGNpdHkgPSBfcmVmNS5jaXR5LAogICAgICBjb3VudHJ5Q29kZSA9IF9yZWY1LmNvdW50cnlDb2RlLAogICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWY1LCBbImNpdHkiLCAiY291bnRyeUNvZGUiXSk7CgogIGlmIChjaXR5ICYmICFjaXR5LmV4aXN0c0luQXBpICYmIGNpdHkubG9jYXRpb24gJiYgY2l0eS5sb2NhdGlvbi5sYXRpdHVkZSAmJiBjaXR5LmxvY2F0aW9uLmxvbmdpdHVkZSkgewogICAgcmV0dXJuIG5vcm1hbGl6ZVF1ZXJ5UGFyYW1zKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgcmVzdCksIHt9LCB7CiAgICAgIGxhdDogY2l0eS5sb2NhdGlvbi5sYXRpdHVkZSwKICAgICAgbG9uZzogY2l0eS5sb2NhdGlvbi5sb25naXR1ZGUsCiAgICAgIHJhbmdlOiBjaXR5LmxvY2F0aW9uLnJhbmdlIHx8IG51bGwKICAgIH0pKTsKICB9CgogIGlmIChjaXR5ICYmIGNpdHkubmFtZSkgewogICAgcmV0dXJuIG5vcm1hbGl6ZVF1ZXJ5UGFyYW1zKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgcmVzdCksIHt9LCB7CiAgICAgIGNpdHlOYW1lOiBjaXR5Lm5hbWUsCiAgICAgIHN0YXRlQ29kZTogY2l0eS5zdGF0ZUNvZGUsCiAgICAgIGNvdW50cnlDb2RlOiBjaXR5LmNvdW50cnlDb2RlCiAgICB9KSk7CiAgfQoKICByZXR1cm4gbm9ybWFsaXplUXVlcnlQYXJhbXMoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCByZXN0KSwge30sIHsKICAgIGNvdW50cnlDb2RlOiBjb3VudHJ5Q29kZQogIH0pKTsKfQpleHBvcnQgZnVuY3Rpb24gY2hlY2tTdGF0dXNMaXN0KHJlc3BvbnNlKSB7CiAgdmFyIGRhdGEgPSByZXNwb25zZS5kYXRhOwogIHJldHVybiByZXNwb25zZS5zdGF0dXMgPT09IDIwMCA/IG5vcm1hbGl6ZUxpc3RTdWNjZXNzKHsKICAgIGRhdGE6IGRhdGEKICB9KSA6IG5vcm1hbGl6ZUVycm9yKGRhdGEpOwp9CmV4cG9ydCBmdW5jdGlvbiBjaGVja1N0YXR1cyhyZXNwb25zZSkgewogIHZhciBkYXRhID0gcmVzcG9uc2UuZGF0YTsKICByZXR1cm4gcmVzcG9uc2Uuc3RhdHVzID09PSAyMDAgPyBub3JtYWxpemVTdWNjZXNzKHsKICAgIGRhdGE6IGRhdGEKICB9KSA6IG5vcm1hbGl6ZUVycm9yKGRhdGEpOwp9CmV4cG9ydCBmdW5jdGlvbiBjaGVja1N0YXR1c1JhdyhyZXNwb25zZSkgewogIHZhciBkYXRhID0gcmVzcG9uc2UuZGF0YTsKICByZXR1cm4gcmVzcG9uc2Uuc3RhdHVzID09PSAyMDAgPyBub3JtYWxpemVTdWNjZXNzUmF3KGRhdGEpIDogbm9ybWFsaXplRXJyb3IoZGF0YSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGNoZWNrRXJyb3IoZXJyb3IpIHsKICBpZiAoZmV0Y2guaXNSZXF1ZXN0Q2FuY2VsKGVycm9yKSkgewogICAgcmV0dXJuIG5vcm1hbGl6ZUVycm9yKHsKICAgICAgY2FuY2VsOiB0cnVlCiAgICB9KTsKICB9CgogIHJldHVybiBub3JtYWxpemVFcnJvcihlcnJvci5yZXNwb25zZSAmJiBlcnJvci5yZXNwb25zZS5kYXRhID8gZXJyb3IucmVzcG9uc2UuZGF0YSA6IGVycm9yKTsKfQ=="},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/core/utils/apiUtils.js"],"names":["fetch","formatQueryParam","dateUtilsFormatQueryParam","apiConstants","normalizeListSuccess","data","success","list","items","totalCount","normalizeSuccess","normalizeSuccessRaw","response","normalizeError","title","detail","status","cancel","code","message","getDefaultGetParams","keyword","GET_DEFAULT_PARAMS","KEYWORD","limit","LIMIT","offset","OFFSET","getDefaultGetParamsWithCount","count","cleanQueryParams","params","ret","key","undefined","normalizeQueryParams","startDate","endDate","normalizeQueryParamsWithCity","city","countryCode","rest","name","cityName","stateCode","normalizeQueryParamsWithCityLocation","existsInApi","location","latitude","longitude","lat","long","range","checkStatusList","checkStatus","checkStatusRaw","checkError","error","isRequestCancel"],"mappings":"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","sourcesContent":["import fetch from '@core/utils/fetch';\nimport { formatQueryParam as dateUtilsFormatQueryParam } from '@core/utils/dateUtils';\nimport apiConstants from './constants/api';\n\nexport function normalizeListSuccess ( { data } ) {\n    return {\n        success:    true,\n        data: {\n            list: data.items,\n            totalCount: data.totalCount\n        }\n    };\n}\n\nexport function normalizeSuccess ( { data } ) {\n    return {\n        success:    true,\n        data\n    };\n}\n\nexport function normalizeSuccessRaw ( response ) {\n    return {\n        success: true,\n        data: response\n    };\n}\n\nexport function normalizeError ( { title, detail, data, status, cancel = false, code = null } ) {\n    return {\n        success:    false,\n        title:      title,\n        message:    detail,\n        detail:     data,\n        status:     status,\n        code:       code,\n        cancel\n    };\n}\n\nexport function getDefaultGetParams ( ) {\n    return {\n        keyword:    apiConstants.GET_DEFAULT_PARAMS.KEYWORD,\n        limit:      apiConstants.GET_DEFAULT_PARAMS.LIMIT,\n        offset:     apiConstants.GET_DEFAULT_PARAMS.OFFSET\n    };\n}\n\nexport function getDefaultGetParamsWithCount ( ) {\n    return {\n        ...getDefaultGetParams( ),\n        count: false\n    };\n}\n\nexport function cleanQueryParams ( params ) {\n    const ret = { ...params };\n\n    for ( let key in ret ) {\n        if ( ret[key] === null || ret[key] === undefined || ret[key] === '' ) {\n            delete ret[key];\n        }\n    }\n\n    return ret;\n}\n\nexport function normalizeQueryParams ( data ) {\n    const ret = { ...data };\n\n    ret.startDate = ret.startDate && dateUtilsFormatQueryParam ( ret.startDate );\n    ret.endDate  =  ret.endDate && dateUtilsFormatQueryParam ( ret.endDate );\n\n    return cleanQueryParams( ret );\n}\n\nexport function normalizeQueryParamsWithCity ( { city, countryCode, ...rest } ) {\n    if ( city && city.name ) {\n        return normalizeQueryParams( {\n            ...rest,\n            cityName: city.name,\n            stateCode: city.stateCode,\n            countryCode: city.countryCode,\n        } );\n    } else {\n        return normalizeQueryParams( {\n            ...rest,\n            countryCode: countryCode,\n        } );\n    }\n}\n\nexport function normalizeQueryParamsWithCityLocation ( { city, countryCode, ...rest } ) {\n    if ( city && !city.existsInApi && city.location && city.location.latitude && city.location.longitude ) {\n        return normalizeQueryParams( {\n            ...rest,\n            lat: city.location.latitude,\n            long: city.location.longitude,\n            range: city.location.range || null,\n        } );\n    }\n    if ( city && city.name ) {\n        return normalizeQueryParams( {\n            ...rest,\n            cityName: city.name,\n            stateCode: city.stateCode,\n            countryCode: city.countryCode,\n        } );\n    }\n\n    return normalizeQueryParams( {\n        ...rest,\n        countryCode: countryCode,\n    } );\n}\n\nexport function checkStatusList ( response ) {\n    let data = response.data;\n    return response.status === 200 ? normalizeListSuccess ( { data } ) : normalizeError ( data );\n}\n\nexport function checkStatus ( response ) {\n    let data = response.data;\n    return response.status === 200 ? normalizeSuccess ( { data } ) : normalizeError ( data );\n}\n\nexport function checkStatusRaw ( response ) {\n    let data = response.data;\n\n    return response.status === 200 ? normalizeSuccessRaw ( data ) : normalizeError ( data );\n}\n\nexport function checkError ( error ) {\n    if ( fetch.isRequestCancel( error ) ) {\n        return normalizeError ( { cancel: true } ); \n    }\n        \n    return normalizeError  ( error.response && error.response.data ? error.response.data : error );\n}"]}]}