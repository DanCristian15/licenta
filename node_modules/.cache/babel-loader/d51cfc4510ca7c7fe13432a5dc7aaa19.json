{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/user/userFavoriteEntities.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/user/userFavoriteEntities.js","mtime":1645805363993},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/user/userFavoriteEntities.js"],"names":["Vue","debounce","memoize","wrap","property","entityConstants","apiServiceFavourites","normalizeEvent","LogService","toggleDebounced","type","id","add","commit","getters","isFavoriteBackend","api","favorites","addEntity","deleteEntity","func","payload","STORE_NAME","name","namespaced","state","ids","TYPES","ATTRACTION","EVENT","idsBackend","totalCount","totalCountList","list","mutations","addId","set","createdAt","Date","getTime","deleteId","delete","setIds","reduce","acc","addIdBackend","deleteIdBackend","setIdsBackend","clearList","appendPageToList","pageData","map","setTotalCount","setTotalCountList","isFavorite","totalFavoriteFromList","filter","item","length","isAllItemsLoaded","actions","toggle","dispatch","root","entity","get","refresh","loadNextPage","search","needsRefresh","needsLoadNextPage","restSearch","offset","response","success","data","debug","getIds","allLoaded","limit","items"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport debounce from 'lodash/debounce';\nimport memoize from 'lodash/memoize';\nimport wrap from 'lodash/wrap';\nimport property from 'lodash/property';\nimport entityConstants from '@core/utils/constants/entity';\nimport apiServiceFavourites from '@core/api/apiServiceFavourites';\nimport { normalizeEvent } from '@core/data/response/normalizeEvent';\nimport LogService from '@services/LogService';\n\n\nconst toggleDebounced = wrap( memoize( function ( ) {\n    return debounce( async ( { type, id, add, commit, getters } ) => {\n        if ( add && !getters.isFavoriteBackend( type, id ) ) {\n            commit( 'addIdBackend', { type, id } );\n            const api = await apiServiceFavourites( '' );\n            api.favorites.addEntity( type, id );\n        }\n        if ( !add && getters.isFavoriteBackend( type, id ) ) {\n            commit( 'deleteIdBackend', { type, id } );\n            const api = await apiServiceFavourites( '' );\n            api.favorites.deleteEntity( type, id );\n        }\n    }, 500 );\n}, property( [ 'entity' ] ) ), function ( func, payload ) {\n    return func( payload )( payload );\n} );\n\n\nconst STORE_NAME = 'favoriteEntities';\n\nexport default {\n    name: STORE_NAME,\n    namespaced: true,\n    state: {\n        ids: {\n            [ entityConstants.TYPES.ATTRACTION ]: { },\n            [ entityConstants.TYPES.EVENT ]: { }\n        },\n        idsBackend: {\n            [ entityConstants.TYPES.ATTRACTION ]: { },\n            [ entityConstants.TYPES.EVENT ]: { }\n        },\n        totalCount: {\n            [ entityConstants.TYPES.ATTRACTION ]: 0,\n            [ entityConstants.TYPES.EVENT ]: 0\n        },\n        totalCountList: {\n            [ entityConstants.TYPES.ATTRACTION ]: 0,\n            [ entityConstants.TYPES.EVENT ]: 0\n        },\n        list: {\n            [entityConstants.TYPES.ATTRACTION]: [],\n            [entityConstants.TYPES.EVENT]: []\n        },\n    },\n    mutations: {\n        addId( state, { type, id } ) {\n            Vue.set( state.ids[type], id, { createdAt: new Date( ).getTime( ) } );\n            state.totalCount[ type ] = state.totalCount[ type ] + 1;\n            state.totalCountList[ type ] = state.totalCountList[ type ] + 1;\n        },\n        deleteId( state, { type, id } ) {\n            Vue.delete( state.ids[type], id );\n            state.totalCount[ type ] = state.totalCount[ type ] - 1;\n            state.totalCountList[ type ] = state.totalCountList[ type ] - 1;\n        },\n        setIds( state, { type, list } ) {\n            state.ids[ type ] = list.reduce( ( acc, id ) => {\n                acc[ id ] = true;\n                return acc;\n            }, { } );\n        },\n        addIdBackend( state, { type, id } ) {\n            Vue.set( state.idsBackend[type], id, { createdAt: new Date( ).getTime( ) } );\n        },\n        deleteIdBackend( state, { type, id } ) {\n            Vue.delete( state.idsBackend[type], id );\n        },\n        setIdsBackend( state, { type, list } ) {\n            state.idsBackend[ type ] = list.reduce( ( acc, id ) => {\n                acc[ id ] = true;\n                return acc;\n            }, { } );\n        },\n        clearList( state, { type } ) {\n            state.list[ type ] = [ ];\n        },\n        appendPageToList( state, { type, pageData } ) {\n            const list = type === entityConstants.TYPES.EVENT ? pageData.map( normalizeEvent ) : pageData;\n\n            state.list[ type ] = [\n                ...state.list[ type ],\n                ...list\n            ];\n        },\n        setTotalCount( state, { type, totalCount } ) {\n            state.totalCount[type] = totalCount;\n        },\n        setTotalCountList( state, { type, totalCount } ) {\n            state.totalCountList[type] = totalCount;\n        },\n    },\n    getters: {\n        isFavorite: ( state ) => ( type, id ) => {\n            if ( state.ids[ type ] ) {\n                return !!state.ids[ type ][ id ];\n            }\n            return false;\n        },\n        isFavoriteBackend: ( state ) => ( type, id ) => {\n            if ( state.idsBackend[ type ] ) {\n                return !!state.idsBackend[ type ][ id ];\n            }\n            return false;\n        },\n        totalFavoriteFromList: state => ( type ) => {\n            return state.list[ type ].filter( item => !!state.ids[ type ][ item.id ] ).length;\n        },\n        isAllItemsLoaded: ( state, getters ) => ( type ) => {\n            return getters.totalFavoriteFromList( type ) >= state.totalCountList [ type ];\n        }\n    },\n    actions: {\n        toggle( { state, getters, commit, dispatch }, { type, id } ) {\n            if ( state.ids[ type ] ) {\n                dispatch( 'user/analytics/setRefresh', true, { root: true } );\n                if ( state.ids[ type] [ id ] ) {\n                    commit( 'deleteId', { type, id } );\n                    toggleDebounced( { entity: `${type}|${id}`, type, id, add: false, commit, getters } );\n                } else {\n                    commit( 'addId', { type, id } );\n                    toggleDebounced( { entity: `${type}|${id}`, type, id, add: true, commit, getters } );\n                }\n            }\n            return getters.isFavorite( type, id );\n        },\n        get: async ( { commit, state, getters }, { refresh = false, loadNextPage = false, search } = {} ) => {\n            const needsRefresh = refresh;\n            const needsLoadNextPage = needsRefresh || loadNextPage;\n            const { type, filter, ...restSearch } = search;\n\n            if ( needsRefresh ) {\n                commit( 'clearList', { type } );\n            }\n\n            if ( needsLoadNextPage ) {\n                const api = await apiServiceFavourites( '' );\n                const response = await api.favorites.get( {\n                    type,\n                    offset: getters.totalFavoriteFromList( type ),\n                    ...filter,\n                    ...restSearch\n                } );\n\n                if ( response.success ) {\n                    const { list, totalCount } = response.data;\n                    if ( needsRefresh ) {\n                        commit( 'clearList', { type } );\n                    }\n                    if ( !filter ) {\n                        commit( 'setTotalCount', { type, totalCount: totalCount } );\n                    }\n                    commit( 'setTotalCountList', { type, totalCount: totalCount } );\n                    commit( 'appendPageToList', { type, pageData: list } );\n\n                    return state.list[ type ];\n                } else {\n                    LogService.debug( 'problem loading favorite entities' );\n                    return false;\n                }\n            }\n        },\n        getIds: async( { commit }, { type } ) => {\n            let allLoaded = false;\n            let list = [ ];\n            const limit = 100;\n\n            while ( !allLoaded ) {\n                const api = await apiServiceFavourites( '' );\n                const { success, data } = await api.favorites.getIds( { type, offset: list.length, limit } );\n                if( !success ) {\n                    allLoaded = true;\n                } else {\n                    list = [ ...list, ...data.items ];\n                    allLoaded = data.items.length < limit;\n                }\n            }\n\n            commit( 'setIds', { type, list } );\n            commit( 'setIdsBackend', { type, list } );\n        }\n    }\n};\n"]}]}