{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/user/userBrowsingHistory.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/user/userBrowsingHistory.js","mtime":1645805363993},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9jcmlzdGlhbmRhbi9EZXNrdG9wL2xpZmVzdHlsZS11aS9ub2RlX21vZHVsZXMvQHZ1ZS9iYWJlbC1wcmVzZXQtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2NyaXN0aWFuZGFuL0Rlc2t0b3AvbGlmZXN0eWxlLXVpL25vZGVfbW9kdWxlcy9AdnVlL2JhYmVsLXByZXNldC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIi9Vc2Vycy9jcmlzdGlhbmRhbi9EZXNrdG9wL2xpZmVzdHlsZS11aS9ub2RlX21vZHVsZXMvQHZ1ZS9iYWJlbC1wcmVzZXQtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CnZhciBTVE9SRV9OQU1FID0gJ2Jyb3dzaW5nSGlzdG9yeSc7CmltcG9ydCBlbnRpdHlDb25zdGFudHMgZnJvbSAnQGNvcmUvdXRpbHMvY29uc3RhbnRzL2VudGl0eSc7CmltcG9ydCB7IHRyYW5zZm9ybVRvVHlwZUFwaSBhcyBlbnRpdHlVdGlsc1RyYW5zZm9ybVRvVHlwZUFwaSB9IGZyb20gJ0Bjb3JlL3V0aWxzL2VudGl0eVV0aWxzJzsKaW1wb3J0IGFwaVNlcnZpY2VVc2VyIGZyb20gJ0Bjb3JlL2FwaS9hcGlTZXJ2aWNlVXNlcic7CmltcG9ydCB7IG5vcm1hbGl6ZUV2ZW50IH0gZnJvbSAnQGNvcmUvZGF0YS9yZXNwb25zZS9ub3JtYWxpemVFdmVudCc7CnZhciBNQVhfTEFTVF9DSVRJRVMgPSA0Owp2YXIgTUFYX0VOVElUSUVTX1BFUl9UWVBFID0gMjQ7CnZhciBzdG9yZSA9IHsKICBuYW1lOiBTVE9SRV9OQU1FLAogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHsKICAgIGNpdGllczogW10sCiAgICBlbnRpdGllczogW10KICB9LAogIGdldHRlcnM6IHsKICAgIGVudGl0aWVzRXZlbnRzQW5kQXR0cmFjdGlvbjogZnVuY3Rpb24gZW50aXRpZXNFdmVudHNBbmRBdHRyYWN0aW9uKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5lbnRpdGllcy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS50eXBlID09PSBlbnRpdHlDb25zdGFudHMuVFlQRVMuRVZFTlQgfHwgaXRlbS50eXBlID09PSBlbnRpdHlDb25zdGFudHMuVFlQRVMuQVRUUkFDVElPTjsKICAgICAgfSkuc3BsaWNlKDAsIE1BWF9FTlRJVElFU19QRVJfVFlQRSk7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIGFkZENpdHk6IGZ1bmN0aW9uIGFkZENpdHkoc3RhdGUsIGNpdHkpIHsKICAgICAgc3RhdGUuY2l0aWVzID0gW2NpdHldLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoc3RhdGUuY2l0aWVzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLm5hbWUgIT09IGNpdHkubmFtZSAmJiBpdGVtLnN0YXRlQ29kZSAhPT0gY2l0eS5zdGF0ZUNvZGUgJiYgaXRlbS5jb3VudHJ5Q29kZSAhPT0gY2l0eS5jb3VudHJ5Q29kZTsKICAgICAgfSkuc2xpY2UoMCwgTUFYX0xBU1RfQ0lUSUVTIC0gMSkpKTsKICAgIH0sCiAgICBhZGRFbnRpdHk6IGZ1bmN0aW9uIGFkZEVudGl0eShzdGF0ZSwgX3JlZikgewogICAgICB2YXIgZW50aXR5VHlwZSA9IF9yZWYuZW50aXR5VHlwZSwKICAgICAgICAgIGRhdGEgPSBfcmVmLmRhdGE7CiAgICAgIHZhciByZWR1Y2VyID0gewogICAgICAgIHRvdGFsczoge30sCiAgICAgICAgaXRlbXM6IFt7CiAgICAgICAgICB0eXBlOiBlbnRpdHlUeXBlLAogICAgICAgICAgZGF0YTogZGF0YQogICAgICAgIH1dCiAgICAgIH07CiAgICAgIHJlZHVjZXIudG90YWxzW2VudGl0eVR5cGVdID0gMTsKICAgICAgc3RhdGUuZW50aXRpZXMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIGlmIChlbnRpdHlUeXBlICE9PSBpdGVtLnR5cGUgfHwgZGF0YS5pZCAhPT0gaXRlbS5kYXRhLmlkICYmIHJlZHVjZXIudG90YWxzW2l0ZW0udHlwZV0gPCBNQVhfRU5USVRJRVNfUEVSX1RZUEUpIHsKICAgICAgICAgIHJlZHVjZXIuaXRlbXMucHVzaChpdGVtKTsKICAgICAgICAgIHJlZHVjZXIudG90YWxzW2l0ZW0udHlwZV0gPSByZWR1Y2VyLnRvdGFsc1tlbnRpdHlUeXBlXSArIDE7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgc3RhdGUuZW50aXRpZXMgPSBfdG9Db25zdW1hYmxlQXJyYXkocmVkdWNlci5pdGVtcyk7CiAgICB9LAogICAgZGVsZXRlRW50aXR5OiBmdW5jdGlvbiBkZWxldGVFbnRpdHkoc3RhdGUsIF9yZWYyKSB7CiAgICAgIHZhciBlbnRpdHlUeXBlID0gX3JlZjIuZW50aXR5VHlwZSwKICAgICAgICAgIGVudGl0eUlkID0gX3JlZjIuZW50aXR5SWQ7CiAgICAgIHN0YXRlLmVudGl0aWVzID0gc3RhdGUuZW50aXRpZXMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGVudGl0eVR5cGUgIT09IGl0ZW0udHlwZSB8fCBlbnRpdHlJZCAhPT0gaXRlbS5kYXRhLmlkOwogICAgICB9KTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGFkZEVudGl0eTogZnVuY3Rpb24gYWRkRW50aXR5KF9yZWYzLCBfcmVmNCkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICB2YXIgZW50aXR5VHlwZSA9IF9yZWY0LmVudGl0eVR5cGUsCiAgICAgICAgICBkYXRhID0gX3JlZjQuZGF0YTsKICAgICAgY29tbWl0KCdhZGRFbnRpdHknLCB7CiAgICAgICAgZW50aXR5VHlwZTogZW50aXR5VHlwZSwKICAgICAgICBkYXRhOiBkYXRhCiAgICAgIH0pOwogICAgfSwKICAgIGRlbGV0ZUVudGl0eTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2RlbGV0ZUVudGl0eSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShfcmVmNSwgX3JlZjYpIHsKICAgICAgICB2YXIgY29tbWl0LCBlbnRpdHlUeXBlLCBlbnRpdHlJZCwgYXBpOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY1LmNvbW1pdDsKICAgICAgICAgICAgICAgIGVudGl0eVR5cGUgPSBfcmVmNi5lbnRpdHlUeXBlLCBlbnRpdHlJZCA9IF9yZWY2LmVudGl0eUlkOwogICAgICAgICAgICAgICAgY29tbWl0KCdkZWxldGVFbnRpdHknLCB7CiAgICAgICAgICAgICAgICAgIGVudGl0eVR5cGU6IGVudGl0eVR5cGUsCiAgICAgICAgICAgICAgICAgIGVudGl0eUlkOiBlbnRpdHlJZAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGlTZXJ2aWNlVXNlcignJyk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIGFwaSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBhcGkudXNlci5kZWxldGVSZWNlbnRseVZpZXdlZChbewogICAgICAgICAgICAgICAgICB0eXBlOiBlbnRpdHlVdGlsc1RyYW5zZm9ybVRvVHlwZUFwaShlbnRpdHlUeXBlKSwKICAgICAgICAgICAgICAgICAgaWQ6IGVudGl0eUlkCiAgICAgICAgICAgICAgICB9XSk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBkZWxldGVFbnRpdHkoX3gsIF94MikgewogICAgICAgIHJldHVybiBfZGVsZXRlRW50aXR5LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBkZWxldGVFbnRpdHk7CiAgICB9KCksCiAgICBhZGRDaXR5OiBmdW5jdGlvbiBhZGRDaXR5KF9yZWY3LCBjaXR5KSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmNy5jb21taXQ7CiAgICAgIGNvbW1pdCgnYWRkQ2l0eScsIGNpdHkpOwogICAgfQogIH0sCiAgX3BlcnNpc3RlbnQ6IHsKICAgIGdldERhdGFUb1NhdmU6IGZ1bmN0aW9uIGdldERhdGFUb1NhdmUoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlW1NUT1JFX05BTUVdOwogICAgfSwKICAgIGdldERhdGFUb0xvYWQ6IGZ1bmN0aW9uIGdldERhdGFUb0xvYWQoX3JlZjgpIHsKICAgICAgdmFyIF9yZWY4JGNpdGllcyA9IF9yZWY4LmNpdGllcywKICAgICAgICAgIGNpdGllcyA9IF9yZWY4JGNpdGllcyA9PT0gdm9pZCAwID8gW10gOiBfcmVmOCRjaXRpZXMsCiAgICAgICAgICBfcmVmOCRlbnRpdGllcyA9IF9yZWY4LmVudGl0aWVzLAogICAgICAgICAgZW50aXRpZXMgPSBfcmVmOCRlbnRpdGllcyA9PT0gdm9pZCAwID8gW10gOiBfcmVmOCRlbnRpdGllczsKICAgICAgdmFyIG5vdyA9IG5ldyBEYXRlKCk7CiAgICAgIHJldHVybiB7CiAgICAgICAgY2l0aWVzOiBjaXRpZXMsCiAgICAgICAgZW50aXRpZXM6IGVudGl0aWVzLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgaWYgKGl0ZW0udHlwZSA9PT0gZW50aXR5Q29uc3RhbnRzLlRZUEVTLkVWRU5UKSB7CiAgICAgICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGl0ZW0pLCB7fSwgewogICAgICAgICAgICAgIGRhdGE6IG5vcm1hbGl6ZUV2ZW50KGl0ZW0uZGF0YSkKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CgogICAgICAgICAgcmV0dXJuIGl0ZW07CiAgICAgICAgfSkuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICBpZiAoaXRlbS50eXBlID09PSBlbnRpdHlDb25zdGFudHMuVFlQRVMuRVZFTlQpIHsKICAgICAgICAgICAgdmFyIGV2ZW50RGF0ZSA9IGl0ZW0uZGF0YS5zdGFydERhdGVUaW1lQXQgfHwgaXRlbS5kYXRhLnN0YXJ0RGF0ZVRpbWU7CiAgICAgICAgICAgIHJldHVybiBldmVudERhdGUgPyBldmVudERhdGUuZ2V0VGltZSgpID4gbm93LmdldFRpbWUoKSA6IGZhbHNlOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgIH0pCiAgICAgIH07CiAgICB9CiAgfQp9OwpleHBvcnQgZGVmYXVsdCBzdG9yZTs="},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/user/userBrowsingHistory.js"],"names":["STORE_NAME","entityConstants","transformToTypeApi","entityUtilsTransformToTypeApi","apiServiceUser","normalizeEvent","MAX_LAST_CITIES","MAX_ENTITIES_PER_TYPE","store","name","namespaced","state","cities","entities","getters","entitiesEventsAndAttraction","filter","item","type","TYPES","EVENT","ATTRACTION","splice","mutations","addCity","city","stateCode","countryCode","slice","addEntity","entityType","data","reducer","totals","items","forEach","id","push","deleteEntity","entityId","actions","commit","api","user","deleteRecentlyViewed","_persistent","getDataToSave","getDataToLoad","now","Date","map","eventDate","startDateTimeAt","startDateTime","getTime"],"mappings":"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","sourcesContent":["const STORE_NAME = 'browsingHistory';\nimport entityConstants from '@core/utils/constants/entity';\nimport {\n    transformToTypeApi as entityUtilsTransformToTypeApi\n} from '@core/utils/entityUtils';\nimport apiServiceUser from '@core/api/apiServiceUser';\nimport { normalizeEvent } from '@core/data/response/normalizeEvent';\n\nconst MAX_LAST_CITIES = 4;\nconst MAX_ENTITIES_PER_TYPE = 24;\n\nconst store = {\n    name: STORE_NAME,\n    namespaced: true,\n    state: {\n        cities: [ ],\n        entities: [ ]\n    },\n    getters: {\n        entitiesEventsAndAttraction: state => {\n            return state.entities\n                .filter( item => item.type === entityConstants.TYPES.EVENT || item.type === entityConstants.TYPES.ATTRACTION )\n                .splice( 0, MAX_ENTITIES_PER_TYPE );\n        }\n    },\n    mutations: {\n        addCity ( state, city ) {\n            state.cities = [\n                city,\n                ...( state.cities\n                    .filter( item => item.name !== city.name && item.stateCode !== city.stateCode && item.countryCode !== city.countryCode )\n                    .slice( 0, MAX_LAST_CITIES - 1 )\n                )\n            ];\n        },\n        addEntity ( state, { entityType, data } ) {\n            const reducer = {\n                totals: { },\n                items: [ { type: entityType, data } ]\n            };\n            reducer.totals[ entityType ] = 1;\n            state.entities.forEach( item => {\n                if ( entityType !== item.type || data.id !== item.data.id && reducer.totals[ item.type ] < MAX_ENTITIES_PER_TYPE ) {\n                    reducer.items.push( item );\n                    reducer.totals[ item.type ] = reducer.totals[ entityType ] + 1;\n                }\n            } );\n\n            state.entities = [ ...reducer.items ];\n\n        },\n        deleteEntity ( state, { entityType, entityId } ) {\n            state.entities = state.entities\n                .filter( item => entityType !== item.type || entityId !== item.data.id );\n        }\n    },\n    actions: {\n        addEntity( { commit }, { entityType, data } ) {\n            commit( 'addEntity', { entityType, data } );\n        },\n        deleteEntity: async ( { commit }, { entityType, entityId } ) => {\n            commit( 'deleteEntity', { entityType, entityId } );\n            const api = await apiServiceUser( '' );\n            api.user.deleteRecentlyViewed( [ { type: entityUtilsTransformToTypeApi( entityType ), id: entityId } ] );\n        },\n        addCity( { commit }, city ) {\n            commit( 'addCity', city );\n        }\n    },\n    _persistent: {\n        getDataToSave: ( state ) => {\n            return state[ STORE_NAME ];\n        },\n        getDataToLoad: ( { cities = [ ], entities = [ ] } ) => {\n            const now = new Date( );\n\n            return {\n                cities: cities,\n                entities: entities\n                    .map( item => {\n                        if ( item.type === entityConstants.TYPES.EVENT ) {\n                            return {\n                                ...item,\n                                data: normalizeEvent( item.data )\n                            };\n                        }\n                        return item;\n                    } )\n                    .filter( item => {\n                        if ( item.type === entityConstants.TYPES.EVENT ) {\n                            const eventDate = item.data.startDateTimeAt || item.data.startDateTime;\n\n                            return eventDate ? eventDate.getTime( ) > now.getTime( ) : false;\n                        }\n\n                        return true;\n                    } )\n            };\n        }\n    }\n};\n\n\nexport default store;"]}]}