{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/store/modules/categories.js","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/store/modules/categories.js","mtime":1645805363990},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2NyaXN0aWFuZGFuL0Rlc2t0b3AvcHJvaWVjdC1saWNlbnRhLWZyb250L25vZGVfbW9kdWxlcy9AdnVlL2JhYmVsLXByZXNldC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgc3RvcmVDb25zdGFudHMgZnJvbSAnQGNvcmUvdXRpbHMvY29uc3RhbnRzL3N0b3JlJzsKaW1wb3J0IHsgaXNTdG9yZU91dERhdGVkIGFzIHN0b3JlVXRpbHNJc1N0b3JlT3V0RGF0ZWQgfSBmcm9tICdAY29yZS91dGlscy9zdG9yZVV0aWxzJzsKaW1wb3J0IGFwaVNlcnZpY2VDYXRlZ29yaWVzIGZyb20gJ0Bjb3JlL2FwaS9hcGlTZXJ2aWNlQ2F0ZWdvcmllcyc7CmltcG9ydCBMb2dTZXJ2aWNlIGZyb20gJ0BzZXJ2aWNlcy9Mb2dTZXJ2aWNlJzsKdmFyIFJFRlJFU0hfVElNRSA9IHN0b3JlQ29uc3RhbnRzLlJFRlJFU0hfVElNRTsKdmFyIFNUT1JFX05BTUUgPSAnY2F0ZWdvcmllcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiBTVE9SRV9OQU1FLAogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHsKICAgIGxpc3Q6IFtdLAogICAgdGltZXN0YW1wOiAwLAogICAgbG9hZGluZzogZmFsc2UsCiAgICByZWZyZXNoOiBmYWxzZQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBzZXRMb2FkaW5nOiBmdW5jdGlvbiBzZXRMb2FkaW5nKHN0YXRlLCBsb2FkaW5nKSB7CiAgICAgIHN0YXRlLmxvYWRpbmcgPSBsb2FkaW5nOwogICAgfSwKICAgIGNsZWFyTGlzdDogZnVuY3Rpb24gY2xlYXJMaXN0KHN0YXRlKSB7CiAgICAgIHN0YXRlLmxpc3QgPSBbXTsKICAgIH0sCiAgICBzZXRMaXN0OiBmdW5jdGlvbiBzZXRMaXN0KHN0YXRlLCBkYXRhKSB7CiAgICAgIHN0YXRlLnRpbWVzdGFtcCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOwogICAgICBzdGF0ZS5saXN0ID0gZGF0YS5saXN0OwogICAgfSwKICAgIHNldFJlZnJlc2g6IGZ1bmN0aW9uIHNldFJlZnJlc2goc3RhdGUsIHJlZnJlc2gpIHsKICAgICAgc3RhdGUucmVmcmVzaCA9IHJlZnJlc2g7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9nZXQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoX3JlZikgewogICAgICAgIHZhciBjb21taXQsCiAgICAgICAgICAgIHN0YXRlLAogICAgICAgICAgICBfcmVmMiwKICAgICAgICAgICAgX3JlZjIkcmVmcmVzaCwKICAgICAgICAgICAgcmVmcmVzaCwKICAgICAgICAgICAgbmVlZHNSZWZyZXNoLAogICAgICAgICAgICBuZWVkc0xvYWROZXh0UGFnZSwKICAgICAgICAgICAgYXBpLAogICAgICAgICAgICByZXNwb25zZSwKICAgICAgICAgICAgX2FyZ3MgPSBhcmd1bWVudHM7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0LCBzdGF0ZSA9IF9yZWYuc3RhdGU7CiAgICAgICAgICAgICAgICBfcmVmMiA9IF9hcmdzLmxlbmd0aCA+IDEgJiYgX2FyZ3NbMV0gIT09IHVuZGVmaW5lZCA/IF9hcmdzWzFdIDoge30sIF9yZWYyJHJlZnJlc2ggPSBfcmVmMi5yZWZyZXNoLCByZWZyZXNoID0gX3JlZjIkcmVmcmVzaCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfcmVmMiRyZWZyZXNoOwogICAgICAgICAgICAgICAgbmVlZHNSZWZyZXNoID0gcmVmcmVzaCB8fCBzdGF0ZS5yZWZyZXNoIHx8IHN0b3JlVXRpbHNJc1N0b3JlT3V0RGF0ZWQoc3RhdGUudGltZXN0YW1wLCBSRUZSRVNIX1RJTUUpOwogICAgICAgICAgICAgICAgbmVlZHNMb2FkTmV4dFBhZ2UgPSBuZWVkc1JlZnJlc2g7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBhcGlTZXJ2aWNlQ2F0ZWdvcmllcygnJyk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIGFwaSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICAhbmVlZHNSZWZyZXNoIHx8IGNvbW1pdCgnY2xlYXJMaXN0Jyk7CgogICAgICAgICAgICAgICAgaWYgKCFuZWVkc0xvYWROZXh0UGFnZSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjE7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0TG9hZGluZycsIHRydWUpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5jYXRlZ29yaWVzLmdldCh7fSk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBjb21taXQoJ3NldExvYWRpbmcnLCBmYWxzZSk7CgogICAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5zdWNjZXNzKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxOTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY29tbWl0KCdzZXRMaXN0JywgcmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBzdGF0ZS5saXN0KTsKCiAgICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgICAgIExvZ1NlcnZpY2UuZGVidWcoJ3Byb2JsZW0gbG9hZGluZyBjYXRlZ29yaWVzJyk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBmYWxzZSk7CgogICAgICAgICAgICAgIGNhc2UgMjE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZ2V0KF94KSB7CiAgICAgICAgcmV0dXJuIF9nZXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldDsKICAgIH0oKSwKICAgIGdldExpc3RGb3JGYXZvcml0ZUF0dHJhY3Rpb25zOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZ2V0TGlzdEZvckZhdm9yaXRlQXR0cmFjdGlvbnMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBhcGksIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpU2VydmljZUNhdGVnb3JpZXMoJycpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBhcGkgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBhcGkuY2F0ZWdvcmllcy5nZXRGb3JGYXZvcml0ZUF0dHJhY3Rpb25zKHt9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZS5zdWNjZXNzID8gcmVzcG9uc2UuZGF0YS5saXN0IDogW10pOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBnZXRMaXN0Rm9yRmF2b3JpdGVBdHRyYWN0aW9ucygpIHsKICAgICAgICByZXR1cm4gX2dldExpc3RGb3JGYXZvcml0ZUF0dHJhY3Rpb25zLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBnZXRMaXN0Rm9yRmF2b3JpdGVBdHRyYWN0aW9uczsKICAgIH0oKSwKICAgIG5lZWRzUmVmcmVzaDogZnVuY3Rpb24gbmVlZHNSZWZyZXNoKF9yZWYzKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgIGNvbW1pdCgnc2V0UmVmcmVzaCcsIHRydWUpOwogICAgfQogIH0sCiAgZ2V0UGVyc2lzdFN0YXRlOiBmdW5jdGlvbiBnZXRQZXJzaXN0U3RhdGUoc3RhdGUpIHsKICAgIHJldHVybiB7CiAgICAgIGxpc3Q6IHN0YXRlW1NUT1JFX05BTUVdLmxpc3QsCiAgICAgIHRpbWVzdGFtcDogc3RhdGVbU1RPUkVfTkFNRV0udGltZXN0YW1wLAogICAgICByZWZyZXNoOiBzdGF0ZVtTVE9SRV9OQU1FXS5yZWZyZXNoCiAgICB9OwogIH0KfTs="},{"version":3,"sources":["/Users/cristiandan/Desktop/proiect-licenta-front/src/core/store/modules/categories.js"],"names":["storeConstants","isStoreOutDated","storeUtilsIsStoreOutDated","apiServiceCategories","LogService","REFRESH_TIME","STORE_NAME","name","namespaced","state","list","timestamp","loading","refresh","mutations","setLoading","clearList","setList","data","Date","getTime","setRefresh","actions","get","commit","needsRefresh","needsLoadNextPage","api","categories","response","success","debug","getListForFavoriteAttractions","getForFavoriteAttractions","getPersistState"],"mappings":"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","sourcesContent":["import storeConstants from '@core/utils/constants/store';\nimport { isStoreOutDated as storeUtilsIsStoreOutDated } from '@core/utils/storeUtils';\nimport apiServiceCategories from '@core/api/apiServiceCategories';\nimport LogService from '@services/LogService';\n\nconst REFRESH_TIME = storeConstants.REFRESH_TIME;\n\nconst STORE_NAME = 'categories';\n\nexport default {\n    name: STORE_NAME,\n    namespaced: true,\n    state: {\n        list:                  [],\n        timestamp:       0,\n        loading:            false,\n        refresh:            false,\n    },\n    mutations: {\n        setLoading( state, loading ) {\n            state.loading = loading;\n        },\n        clearList( state ) {\n            state.list = [ ];\n        },\n        setList( state, data ) {\n            state.timestamp = new Date( ).getTime( );\n            state.list = data.list;\n        },\n        setRefresh( state, refresh ) {\n            state.refresh = refresh;\n        }\n    },\n\n    actions: {\n        get: async ( { commit, state }, { refresh = false } = { } ) => {\n            const needsRefresh = refresh || state.refresh || storeUtilsIsStoreOutDated ( state.timestamp, REFRESH_TIME );\n            const needsLoadNextPage = needsRefresh;\n            const api = await apiServiceCategories( '' );\n\n            !needsRefresh || ( commit( 'clearList' ) );\n            if ( needsLoadNextPage ) {\n                commit( 'setLoading', true );\n                const response = await api.categories.get( {} );\n                commit( 'setLoading', false );\n\n                if ( response.success ) {\n                    commit( 'setList', response.data );\n\n                    return state.list;\n                } else {\n                    LogService.debug( 'problem loading categories' );\n                    return false;\n                }\n            }\n        },\n        getListForFavoriteAttractions: async () => {\n            const api = await apiServiceCategories( '' );\n            const response = await api.categories.getForFavoriteAttractions( { } );\n\n            return response.success ? response.data.list : [ ];\n        },\n        needsRefresh( { commit } ) {\n            commit( 'setRefresh', true );\n        }\n    },\n    getPersistState: ( state ) => {\n        return {\n            list:state[ STORE_NAME ].list,\n            timestamp: state[ STORE_NAME ].timestamp,\n            refresh: state[ STORE_NAME].refresh\n        };\n    }\n};\n"]}]}