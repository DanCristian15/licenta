{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/core/utils/cityObjectUtils.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/utils/cityObjectUtils.js","mtime":1645805363998},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdC5qcyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9jcmlzdGlhbmRhbi9EZXNrdG9wL2xpZmVzdHlsZS11aS9ub2RlX21vZHVsZXMvQHZ1ZS9iYWJlbC1wcmVzZXQtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKZXhwb3J0IGZ1bmN0aW9uIGlzQ2l0eSh2YWwpIHsKICByZXR1cm4gdmFsICYmICh2YWwubmFtZSAmJiB2YWwuY291bnRyeUNvZGUgfHwgaGFzTG9jYXRpb24odmFsKSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGhhc0N1c3RvbUxvY2F0aW9uKHZhbCkgewogIHJldHVybiBpc0NpdHkodmFsKSAmJiAhdmFsLmV4aXN0c0luQXBpICYmIGhhc0xvY2F0aW9uKHZhbCk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGhhc0xvY2F0aW9uKHZhbCkgewogIHJldHVybiB2YWwubG9jYXRpb24gJiYgdmFsLmxvY2F0aW9uLmxhdGl0dWRlICYmIHZhbC5sb2NhdGlvbi5sb25naXR1ZGU7Cn0KZXhwb3J0IGZ1bmN0aW9uIGhhc0N1cnJlbnRMb2NhdGlvbih2YWwpIHsKICByZXR1cm4gdmFsLmxvY2F0aW9uICYmIHZhbC5sb2NhdGlvbi5jdXJyZW50Owp9CmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZUlkRm9yQ2l0eSh2YWwpIHsKICB2YXIgY2l0eU5hbWUgPSB2YWwubmFtZS5zcGxpdCgnICcpLmpvaW4oJ18nKTsKCiAgaWYgKHZhbC5zdGF0ZUNvZGUpIHsKICAgIHJldHVybiAiIi5jb25jYXQodmFsLmNvdW50cnlDb2RlLCAiXyIpLmNvbmNhdCh2YWwuc3RhdGVDb2RlLCAiXyIpLmNvbmNhdChjaXR5TmFtZSk7CiAgfQoKICByZXR1cm4gIiIuY29uY2F0KHZhbC5jb3VudHJ5Q29kZSwgIl8iKS5jb25jYXQoY2l0eU5hbWUpOwp9CmV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemVGb3JGaWx0ZXIodmFsKSB7CiAgdmFyIHJldCA9IHt9OwogIHZhbC5jb3VudHJ5Q29kZSA/IHJldCA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgcmV0KSwge30sIHsKICAgIGNvdW50cnlDb2RlOiB2YWwuY291bnRyeUNvZGUKICB9KSA6IHJldDsKICB2YWwubmFtZSA/IHJldCA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgcmV0KSwge30sIHsKICAgIG5hbWU6IHZhbC5uYW1lCiAgfSkgOiByZXQ7CiAgdmFsLnN0YXRlQ29kZSA/IHJldCA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgcmV0KSwge30sIHsKICAgIHN0YXRlQ29kZTogdmFsLnN0YXRlQ29kZQogIH0pIDogcmV0OwogIHJldHVybiByZXQ7Cn0="},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/core/utils/cityObjectUtils.js"],"names":["isCity","val","name","countryCode","hasLocation","hasCustomLocation","existsInApi","location","latitude","longitude","hasCurrentLocation","current","generateIdForCity","cityName","split","join","stateCode","normalizeForFilter","ret"],"mappings":";;;;;;AAAA,OAAO,SAASA,MAAT,CAAkBC,GAAlB,EAAwB;AAC3B,SAAOA,GAAG,KAAQA,GAAG,CAACC,IAAJ,IAAYD,GAAG,CAACE,WAAlB,IAAmCC,WAAW,CAAEH,GAAF,CAApD,CAAV;AACH;AAED,OAAO,SAASI,iBAAT,CAA6BJ,GAA7B,EAAmC;AACtC,SAAOD,MAAM,CAAEC,GAAF,CAAN,IAAiB,CAACA,GAAG,CAACK,WAAtB,IAAqCF,WAAW,CAAEH,GAAF,CAAvD;AACH;AAED,OAAO,SAASG,WAAT,CAAuBH,GAAvB,EAA6B;AAChC,SAAOA,GAAG,CAACM,QAAJ,IAAgBN,GAAG,CAACM,QAAJ,CAAaC,QAA7B,IAAyCP,GAAG,CAACM,QAAJ,CAAaE,SAA7D;AACH;AAED,OAAO,SAASC,kBAAT,CAA8BT,GAA9B,EAAoC;AACvC,SAAOA,GAAG,CAACM,QAAJ,IAAgBN,GAAG,CAACM,QAAJ,CAAaI,OAApC;AACH;AAED,OAAO,SAASC,iBAAT,CAA4BX,GAA5B,EAAkC;AACrC,MAAMY,QAAQ,GAAGZ,GAAG,CAACC,IAAJ,CAASY,KAAT,CAAgB,GAAhB,EAAsBC,IAAtB,CAA4B,GAA5B,CAAjB;;AAEA,MAAKd,GAAG,CAACe,SAAT,EAAqB;AACjB,qBAAUf,GAAG,CAACE,WAAd,cAA6BF,GAAG,CAACe,SAAjC,cAA8CH,QAA9C;AACH;;AAED,mBAAUZ,GAAG,CAACE,WAAd,cAA6BU,QAA7B;AACH;AAED,OAAO,SAASI,kBAAT,CAA8BhB,GAA9B,EAAoC;AACvC,MAAIiB,GAAG,GAAG,EAAV;AACAjB,EAAAA,GAAG,CAACE,WAAJ,GAAkBe,GAAG,mCAAQA,GAAR;AAAaf,IAAAA,WAAW,EAAEF,GAAG,CAACE;AAA9B,IAArB,GAAmEe,GAAnE;AACAjB,EAAAA,GAAG,CAACC,IAAJ,GAAWgB,GAAG,mCAAQA,GAAR;AAAahB,IAAAA,IAAI,EAAED,GAAG,CAACC;AAAvB,IAAd,GAA8CgB,GAA9C;AACAjB,EAAAA,GAAG,CAACe,SAAJ,GAAgBE,GAAG,mCAAQA,GAAR;AAAaF,IAAAA,SAAS,EAAEf,GAAG,CAACe;AAA5B,IAAnB,GAA6DE,GAA7D;AAEA,SAAOA,GAAP;AACH","sourcesContent":["export function isCity ( val ) {\n    return val && ( ( val.name && val.countryCode ) || hasLocation( val ) );\n}\n\nexport function hasCustomLocation ( val ) {\n    return isCity( val ) && !val.existsInApi && hasLocation( val );\n}\n\nexport function hasLocation ( val ) {\n    return val.location && val.location.latitude && val.location.longitude;\n}\n\nexport function hasCurrentLocation ( val ) {\n    return val.location && val.location.current;\n}\n\nexport function generateIdForCity( val ) {\n    const cityName = val.name.split( ' ' ).join( '_' );\n\n    if ( val.stateCode ) {\n        return `${val.countryCode}_${val.stateCode}_${cityName}`;\n    }\n\n    return `${val.countryCode}_${cityName}`;\n}\n\nexport function normalizeForFilter ( val ) {\n    let ret = { };\n    val.countryCode ? ret = { ...ret, countryCode: val.countryCode } : ret;\n    val.name ? ret = { ...ret, name: val.name } : ret;\n    val.stateCode ? ret = { ...ret, stateCode: val.stateCode } : ret;\n\n    return ret;\n}"]}]}