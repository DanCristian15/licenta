{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cristiandan/Desktop/lifestyle-ui/src/core/views/signUp/SignUp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/views/signUp/SignUp.vue","mtime":1648836125761},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/vue-loader/lib/index.js","mtime":1637061260528}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2NyaXN0aWFuZGFuL0Rlc2t0b3AvbGlmZXN0eWxlLXVpL25vZGVfbW9kdWxlcy9AdnVlL2JhYmVsLXByZXNldC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyByZXF1aXJlZCwgZW1haWwsIG1pbkxlbmd0aCwgc2FtZUFzIH0gZnJvbSAndnVlbGlkYXRlL2xpYi92YWxpZGF0b3JzJzsKaW1wb3J0IHsgbWFwQWN0aW9ucyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgQmFzZUJ1dHRvbiBmcm9tICdAL2NvcmUvc2hhcmVkL2NvbXBvbmVudHMvYnV0dG9ucy9CYXNlQnV0dG9uLnZ1ZSc7Cgp2YXIgdmFsaWRhdGlvbk51bWJlciA9IGZ1bmN0aW9uIHZhbGlkYXRpb25OdW1iZXIodmFsdWUpIHsKICByZXR1cm4gL1xkLy50ZXN0KHZhbHVlKTsKfTsKCnZhciBzdGFydHNXaXRoQ2FwaXRhbExldHRlciA9IGZ1bmN0aW9uIHN0YXJ0c1dpdGhDYXBpdGFsTGV0dGVyKHZhbHVlKSB7CiAgcmV0dXJuIHZhbHVlWzBdID09PSB2YWx1ZVswXS50b1VwcGVyQ2FzZSgpOwp9OwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTaWduVXAnLAogIGNvbXBvbmVudHM6IHsKICAgIEJhc2VCdXR0b246IEJhc2VCdXR0b24KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBuYW1lOiAnJywKICAgICAgZW1haWw6ICcnLAogICAgICBwYXNzd29yZDogJycsCiAgICAgIHVzZXJuYW1lOiAnJywKICAgICAgY29uZmlybVBhc3N3b3JkOiAnJywKICAgICAgY29uZmlybUVtYWlsOiAnJwogICAgfTsKICB9LAogIHZhbGlkYXRpb25zOiBmdW5jdGlvbiB2YWxpZGF0aW9ucygpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIHsKICAgICAgbmFtZTogewogICAgICAgIHJlcXVpcmVkOiByZXF1aXJlZAogICAgICB9LAogICAgICBlbWFpbDogewogICAgICAgIHJlcXVpcmVkOiByZXF1aXJlZCwKICAgICAgICBlbWFpbDogZW1haWwKICAgICAgfSwKICAgICAgcGFzc3dvcmQ6IHsKICAgICAgICB2YWxpZGF0aW9uTnVtYmVyOiB2YWxpZGF0aW9uTnVtYmVyLAogICAgICAgIHJlcXVpcmVkOiByZXF1aXJlZCwKICAgICAgICBtaW5MZW5ndGg6IG1pbkxlbmd0aCgxMCksCiAgICAgICAgc3RhcnRzV2l0aENhcGl0YWxMZXR0ZXI6IHN0YXJ0c1dpdGhDYXBpdGFsTGV0dGVyCiAgICAgIH0sCiAgICAgIHVzZXJuYW1lOiB7CiAgICAgICAgdmFsaWRhdGlvbk51bWJlcjogdmFsaWRhdGlvbk51bWJlciwKICAgICAgICByZXF1aXJlZDogcmVxdWlyZWQsCiAgICAgICAgbWluTGVuZ3RoOiBtaW5MZW5ndGgoMTApLAogICAgICAgIHN0YXJ0c1dpdGhDYXBpdGFsTGV0dGVyOiBzdGFydHNXaXRoQ2FwaXRhbExldHRlcgogICAgICB9LAogICAgICBjb25maXJtUGFzc3dvcmQ6IHsKICAgICAgICByZXF1aXJlZDogcmVxdWlyZWQsCiAgICAgICAgc2FtZUFzUGFzc3dvcmQ6IHNhbWVBcyhmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXR1cm4gX3RoaXMucGFzc3dvcmQ7CiAgICAgICAgfSkKICAgICAgfSwKICAgICAgY29uZmlybUVtYWlsOiB7CiAgICAgICAgZW1haWw6IGVtYWlsLAogICAgICAgIHJlcXVpcmVkOiByZXF1aXJlZCwKICAgICAgICBzYW1lQXNQYXNzd29yZDogc2FtZUFzKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJldHVybiBfdGhpcy5lbWFpbDsKICAgICAgICB9KQogICAgICB9CiAgICB9OwogIH0sCiAgbWV0aG9kczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBBY3Rpb25zKHsKICAgIG5vdGlmaWNhdGlvblN1Y2Nlc3M6ICdub3RpZmljYXRpb24vc3VjY2VzcycsCiAgICBhZGRVc2VyOiAndXNlci9zaWduVXAnCiAgfSkpLCB7fSwgewogICAgcmVxdWlyZWRFcnJvcjogZnVuY3Rpb24gcmVxdWlyZWRFcnJvcihfcmVmKSB7CiAgICAgIHZhciBmaWVsZCA9IF9yZWYuZmllbGQ7CiAgICAgIHZhciBlcnJvcnMgPSBbXTsKICAgICAgaWYgKCF0aGlzLiR2W2ZpZWxkXS4kZGlydHkpIHJldHVybiBlcnJvcnM7CiAgICAgICF0aGlzLiR2W2ZpZWxkXS5yZXF1aXJlZCAmJiBlcnJvcnMucHVzaCh0aGlzLiR0KCdfY29tbW9uOmZvcm1FcnJvcnMucmVxdWlyZWRGaWVsZCcsIHsKICAgICAgICBmaWVsZDogdGhpcy4kdCgiX2NvbW1vbjpmb3JtLmxhYmVscy4iLmNvbmNhdChmaWVsZCkpLAogICAgICAgIGludGVycG9sYXRpb246IHsKICAgICAgICAgIGVzY2FwZVZhbHVlOiBmYWxzZQogICAgICAgIH0KICAgICAgfSkpOwogICAgICByZXR1cm4gZXJyb3JzOwogICAgfSwKICAgIGVtYWlsRXJyb3I6IGZ1bmN0aW9uIGVtYWlsRXJyb3IoX3JlZjIpIHsKICAgICAgdmFyIGZpZWxkID0gX3JlZjIuZmllbGQ7CiAgICAgIHZhciBlcnJvcnMgPSBbXTsKICAgICAgaWYgKCF0aGlzLiR2W2ZpZWxkXS4kZGlydHkpIHJldHVybiBlcnJvcnM7CiAgICAgICF0aGlzLiR2W2ZpZWxkXS5lbWFpbCAmJiBlcnJvcnMucHVzaCh0aGlzLiR0KCdfY29tbW9uOmZvcm1FcnJvcnMuZW1haWwnLCB7CiAgICAgICAgZmllbGQ6IHRoaXMuJHQoIl9jb21tb246Zm9ybS5sYWJlbHMuIi5jb25jYXQoZmllbGQpKSwKICAgICAgICBpbnRlcnBvbGF0aW9uOiB7CiAgICAgICAgICBlc2NhcGVWYWx1ZTogZmFsc2UKICAgICAgICB9CiAgICAgIH0pKTsKICAgICAgcmV0dXJuIGVycm9yczsKICAgIH0sCiAgICBtaW5MZW5ndGhFcnJvcjogZnVuY3Rpb24gbWluTGVuZ3RoRXJyb3IoX3JlZjMpIHsKICAgICAgdmFyIGZpZWxkID0gX3JlZjMuZmllbGQ7CiAgICAgIHZhciBlcnJvcnMgPSBbXTsKICAgICAgaWYgKCF0aGlzLiR2W2ZpZWxkXS4kZGlydHkpIHJldHVybiBlcnJvcnM7CiAgICAgICF0aGlzLiR2W2ZpZWxkXS5taW5MZW5ndGggJiYgZXJyb3JzLnB1c2goIlRoZSAiLmNvbmNhdChbZmllbGRdLCAiIHNob3VsZCBoYXZlIG1vcmUgdGhhbiAxMCIpKTsKICAgICAgcmV0dXJuIGVycm9yczsKICAgIH0sCiAgICBlcnJvck51bWJlcjogZnVuY3Rpb24gZXJyb3JOdW1iZXIoX3JlZjQpIHsKICAgICAgdmFyIGZpZWxkID0gX3JlZjQuZmllbGQ7CiAgICAgIHZhciBlcnJvcnMgPSBbXTsKICAgICAgaWYgKCF0aGlzLiR2W2ZpZWxkXS4kZGlydHkpIHJldHVybiBlcnJvcnM7CiAgICAgICF0aGlzLiR2W2ZpZWxkXS52YWxpZGF0aW9uTnVtYmVyICYmIGVycm9ycy5wdXNoKCJUaGUgIi5jb25jYXQoW2ZpZWxkXSwgIiBtdXN0IGNvbnRhaW4gYSBudW1iZXIiKSk7CiAgICAgIHJldHVybiBlcnJvcnM7CiAgICB9LAogICAgZXJyb3JTdGFydHNXaXRoQ2FwaXRhbExldHRlcjogZnVuY3Rpb24gZXJyb3JTdGFydHNXaXRoQ2FwaXRhbExldHRlcihfcmVmNSkgewogICAgICB2YXIgZmllbGQgPSBfcmVmNS5maWVsZDsKICAgICAgdmFyIGVycm9ycyA9IFtdOwogICAgICBpZiAoIXRoaXMuJHZbZmllbGRdLiRkaXJ0eSkgcmV0dXJuIGVycm9yczsKICAgICAgIXRoaXMuJHZbZmllbGRdLnN0YXJ0c1dpdGhDYXBpdGFsTGV0dGVyICYmIGVycm9ycy5wdXNoKCJUaGUgIi5jb25jYXQoW2ZpZWxkXSwgIiBtdXN0IHN0YXJ0cyB3aXRoIGEgY2FwaXRhbCBsZXR0ZXIiKSk7CiAgICAgIHJldHVybiBlcnJvcnM7CiAgICB9LAogICAgZXJyb3JTYW1lQXNSZWY6IGZ1bmN0aW9uIGVycm9yU2FtZUFzUmVmKF9yZWY2KSB7CiAgICAgIHZhciBmaWVsZCA9IF9yZWY2LmZpZWxkOwogICAgICB2YXIgZXJyb3JzID0gW107CiAgICAgIGlmICghdGhpcy4kdltmaWVsZF0uJGRpcnR5KSByZXR1cm4gZXJyb3JzOwogICAgICAhdGhpcy4kdltmaWVsZF0uc2FtZUFzUGFzc3dvcmQgJiYgZXJyb3JzLnB1c2goIlRoZSAiLmNvbmNhdChbZmllbGRdLCAiIG11c3QgYmUgdGhlIHNhbWUgYXMgdGhlIGZpZWxkIGFib3ZlIikpOwogICAgICByZXR1cm4gZXJyb3JzOwogICAgfSwKICAgIHZhbGlkYXRlOiBmdW5jdGlvbiB2YWxpZGF0ZSgpIHsKICAgICAgdGhpcy4kdi4kdG91Y2goKTsKCiAgICAgIGlmICghdGhpcy4kdi4kaW52YWxpZCkgewogICAgICAgIHRoaXMuYWRkVXNlcigpOwogICAgICAgIHRoaXMubm90aWZpY2F0aW9uU3VjY2Vzcyh0aGlzLiR0KCdhbGVydHMuc3VjY2Vzc2Z1bGx5UmVnaXN0ZXJlZCcpKTsKICAgICAgfQogICAgfQogIH0pCn07"},{"version":3,"sources":["SignUp.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"d-flex flex-column justify-center align-center\">\n        <v-form class=\"d-flex flex-column justify-center align-center\">\n            <h2>Sign Up</h2>\n            <div>\n                <v-text-field\n                    v-model=\"name\"\n                    class=\"text-field\"\n                    color=\"purple darken-2\"\n                    required\n                    placeholder=\"Full name\"\n                    :error-messages=\"[\n                        ...requiredError({ field: 'name' }),\n                    ]\" />\n                <v-text-field\n                    v-model=\"password\"\n                    class=\"text-field\"\n                    type=\"password\"\n                    color=\"purple darken-2\"\n                    required\n                    placeholder=\"Password\"\n                    :error-messages=\"[\n                        ...requiredError({ field: 'password' }),\n                        ...minLengthError({field: 'password'}),\n                        ...errorNumber({field: 'password'}),\n                        ...errorStartsWithCapitalLetter({field: 'password'})\n                    ]\" />\n                <v-text-field\n                    v-model=\"confirmPassword\"\n                    class=\"text-field\"\n                    type=\"password\"\n                    color=\"purple darken-2\"\n                    required\n                    placeholder=\"Confirm password\"\n                    :error-messages=\"[\n                        ...requiredError({ field: 'confirmPassword' }),\n                        ...errorSameAsRef({field: 'confirmPassword'})\n                    ]\" />\n                <v-text-field\n                    v-model=\"username\"\n                    class=\"text-field\"\n                    color=\"purple darken-2\"\n                    required\n                    placeholder=\"Username\"\n                    :error-messages=\"[\n                        ...requiredError({ field: 'username' }),\n                        ...minLengthError({field: 'username'}),\n                        ...errorNumber({field: 'username'}),\n                        ...errorStartsWithCapitalLetter({field: 'username'})\n                    ]\" />\n                <v-text-field\n                    v-model=\"email\"\n                    :error-messages=\"[\n                        ...requiredError({ field: 'email' }),\n                        ...emailError({ field: 'email' })\n                    ]\"\n                    :placeholder=\"$t('_common:form.labels.email')\" />\n                <v-text-field\n                    v-model=\"confirmEmail\"\n                    :error-messages=\"[\n                        ...requiredError({ field: 'confirmEmail' }),\n                        ...emailError({ field: 'confirmEmail' }),\n                        ...errorSameAsRef({field: 'confirmEmail'})\n\n                    ]\"\n                    placeholder=\"Confirm email\" />\n            </div>\n            <BaseButton block :placeholder=\"$t('subscribeButton')\" @click=\"validate\" />\n        </v-form>\n    </div>\n</template>\n\n<script>\n    import { required, email, minLength, sameAs } from 'vuelidate/lib/validators';\n    import { mapActions } from 'vuex';\n    import BaseButton from '@/core/shared/components/buttons/BaseButton.vue';\n\n    const validationNumber = ( value ) => /\\d/.test( value );\n    const startsWithCapitalLetter = ( value ) => value[0]=== value[0].toUpperCase();\n\n    export default ( {\n        name: 'SignUp',\n        components: {\n            BaseButton\n        },\n        data() {\n            return {\n                name: '',\n                email: '',\n                password: '',\n                username: '',\n                confirmPassword: '',\n                confirmEmail: '',\n            };\n        },\n        validations( ) {\n            return {\n                name: {\n                    required,\n                },\n                email: {\n                    required,\n                    email\n                },\n                password: {\n                    validationNumber,\n                    required,\n                    minLength: minLength( 10 ),\n                    startsWithCapitalLetter\n                },\n                username: {\n                    validationNumber,\n                    required,\n                    minLength: minLength( 10 ),\n                    startsWithCapitalLetter\n                },\n                confirmPassword: {\n                    required,\n                    sameAsPassword: sameAs( () => this.password )\n                },\n                confirmEmail: {\n                    email,\n                    required,\n                    sameAsPassword: sameAs( () => this.email )\n                },\n            };\n        },\n        methods: {\n            ...mapActions( {\n                notificationSuccess: 'notification/success',\n                addUser: 'user/signUp'\n            } ),\n            requiredError( { field } ) {\n                let errors = [];\n                if ( !this.$v[field].$dirty ) return errors;\n                !this.$v[field].required   && errors.push ( this.$t( '_common:formErrors.requiredField', { field: this.$t( `_common:form.labels.${field}` ), interpolation : { escapeValue: false } } ) );\n                return errors;\n            },\n            emailError( { field } ) {\n                let errors = [];\n                if ( !this.$v[field].$dirty ) return errors;\n                !this.$v[field].email  && errors.push( this.$t( '_common:formErrors.email', { field: this.$t( `_common:form.labels.${field}` ), interpolation: { escapeValue: false } } ) );\n                return errors;\n            },\n            minLengthError( { field } ) {\n                let errors = [];\n                if ( !this.$v[field].$dirty ) return errors;\n                !this.$v[field].minLength  && errors.push( `The ${[ field ]} should have more than 10` );\n                return errors;\n            },\n            errorNumber( { field } ) {\n                let errors = [];\n                if ( !this.$v[field].$dirty ) return errors;\n                !this.$v[field].validationNumber  && errors.push( `The ${[ field ]} must contain a number` );\n                return errors;\n            },\n            errorStartsWithCapitalLetter ( { field } ) {\n                let errors = [];\n                if ( !this.$v[field].$dirty ) return errors;\n                !this.$v[field].startsWithCapitalLetter  && errors.push( `The ${[ field ]} must starts with a capital letter` );\n                return errors;\n            },\n            errorSameAsRef ( { field } ) {\n                let errors = [];\n                if ( !this.$v[field].$dirty ) return errors;\n                !this.$v[field].sameAsPassword  && errors.push( `The ${[ field ]} must be the same as the field above` );\n                return errors;\n            },\n            validate( ) {\n                this.$v.$touch( );\n\n                if ( !this.$v.$invalid ) {\n                    this.addUser();\n                    this.notificationSuccess( this.$t( 'alerts.successfullyRegistered' ) );\n                }\n            },\n        }\n    } );\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"@scssVariables\";\n\n    .text-field {\n        width: 300px !important;\n    }\n\n    .gst-login-modal__toolbar {\n        border-bottom: 1px solid theme-color( 'quinary' );\n    }\n\n    .gst-login-modal__title {\n        font-weight: font-weight( 'medium' );\n    }\n\n    .gst-login-btn.v-btn.v-btn--outlined {\n        font-weight: font-weight( 'medium' );\n        border-radius: border-radius( 'm' ) !important;\n        min-height: 44px;\n\n        &.v-btn--disabled {\n            color: theme-color( 'primary' ) !important;\n            border-color: theme-color( 'primary' );\n            opacity: 0.4;\n        }\n    }\n\n    .gst-login-btn.v-btn.v-btn--outlined:not([disabled]) {\n        border-color: #ADACAC;\n    }\n\n    .sign-up-button {\n        height: 30px;\n        width: 70px;\n        background-color: #ADACAC;\n        border-radius: border-radius( 'm' ) !important;\n    }\n</style>\n\n<style lang=\"scss\">\n    @import \"@scssVariables\";\n\n    .gst-login-modal__icon-close .gst-svg-icon {\n        fill: theme-color( 'tertiary' );\n    }\n\n    .gst-login-modal__header .v-toolbar__content {\n        justify-content: end;\n    }\n\n    .gst-login-modal {\n        .gst-login-modal__close.v-btn {\n            min-width: auto;\n        }\n    }\n</style>\n"],"sourceRoot":"src/core/views/signUp"}]}