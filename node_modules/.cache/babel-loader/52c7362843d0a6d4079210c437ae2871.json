{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/api/apiServiceTickets.js","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/api/apiServiceTickets.js","mtime":1645805363871},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9jcmlzdGlhbmRhbi9EZXNrdG9wL3Byb2llY3QtbGljZW50YS1mcm9udC9ub2RlX21vZHVsZXMvQHZ1ZS9iYWJlbC1wcmVzZXQtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2NyaXN0aWFuZGFuL0Rlc2t0b3AvcHJvaWVjdC1saWNlbnRhLWZyb250L25vZGVfbW9kdWxlcy9AdnVlL2JhYmVsLXByZXNldC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgYXBpQ29uc3RhbnRzIGZyb20gJ0Bjb3JlL3V0aWxzL2NvbnN0YW50cy9hcGknOwppbXBvcnQgZmV0Y2ggZnJvbSAnQGNvcmUvdXRpbHMvZmV0Y2gnOwppbXBvcnQgeyBnZXREZWZhdWx0R2V0UGFyYW1zIGFzIGFwaVV0aWxzR2V0RGVmYXVsdEdldFBhcmFtcywgbm9ybWFsaXplUXVlcnlQYXJhbXNXaXRoQ2l0eSBhcyBhcGlVdGlsc05vcm1hbGl6ZVF1ZXJ5UGFyYW1zV2l0aENpdHkgfSBmcm9tICdAY29yZS91dGlscy9hcGlVdGlscyc7CmltcG9ydCB7IGNyZWF0ZUFwaVNlcnZpY2UsIGZldGNoQVBJIH0gZnJvbSAnQGNvcmUvYXBpL191dGlscyc7CnZhciBkZWZhdWx0R2V0UGFyYW0gPSBhcGlVdGlsc0dldERlZmF1bHRHZXRQYXJhbXMoKTsKdmFyIGFwaSA9IHsKICBnZXRDYW5jZWxSZXF1ZXN0OiBmZXRjaC5nZXRDYW5jZWxSZXF1ZXN0LAogIHRpY2tldHM6IHsKICAgIGdldDogZnVuY3Rpb24gZ2V0KGlkKSB7CiAgICAgIHZhciBfcmVmID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBkZWZhdWx0R2V0UGFyYW0sCiAgICAgICAgICBfcmVmJHByaWNlUmFuZ2UgPSBfcmVmLnByaWNlUmFuZ2UsCiAgICAgICAgICBwcmljZVJhbmdlID0gX3JlZiRwcmljZVJhbmdlID09PSB2b2lkIDAgPyBbXSA6IF9yZWYkcHJpY2VSYW5nZSwKICAgICAgICAgIF9yZWYkc2VsZWN0aW9uID0gX3JlZi5zZWxlY3Rpb24sCiAgICAgICAgICBzZWxlY3Rpb24gPSBfcmVmJHNlbGVjdGlvbiA9PT0gdm9pZCAwID8gJycgOiBfcmVmJHNlbGVjdGlvbiwKICAgICAgICAgIF9yZWYkcXVhbnRpdHkgPSBfcmVmLnF1YW50aXR5LAogICAgICAgICAgcXVhbnRpdHkgPSBfcmVmJHF1YW50aXR5ID09PSB2b2lkIDAgPyAnJyA6IF9yZWYkcXVhbnRpdHksCiAgICAgICAgICBfcmVmJGFjY2Vzc2liaWxpdHkgPSBfcmVmLmFjY2Vzc2liaWxpdHksCiAgICAgICAgICBhY2Nlc3NpYmlsaXR5ID0gX3JlZiRhY2Nlc3NpYmlsaXR5ID09PSB2b2lkIDAgPyAnJyA6IF9yZWYkYWNjZXNzaWJpbGl0eSwKICAgICAgICAgIF9yZWYkc29ydCA9IF9yZWYuc29ydCwKICAgICAgICAgIHNvcnQgPSBfcmVmJHNvcnQgPT09IHZvaWQgMCA/ICcnIDogX3JlZiRzb3J0LAogICAgICAgICAgX3JlZiRsaW1pdCA9IF9yZWYubGltaXQsCiAgICAgICAgICBsaW1pdCA9IF9yZWYkbGltaXQgPT09IHZvaWQgMCA/IGRlZmF1bHRHZXRQYXJhbS5saW1pdCA6IF9yZWYkbGltaXQsCiAgICAgICAgICBfcmVmJG9mZnNldCA9IF9yZWYub2Zmc2V0LAogICAgICAgICAgb2Zmc2V0ID0gX3JlZiRvZmZzZXQgPT09IHZvaWQgMCA/IGRlZmF1bHRHZXRQYXJhbS5vZmZzZXQgOiBfcmVmJG9mZnNldDsKCiAgICAgIHZhciBfcmVmMiA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDoge30sCiAgICAgICAgICB1c2VyQW5hbHl0aWNzID0gX3JlZjIudXNlckFuYWx5dGljczsKCiAgICAgIHZhciBjb25maWcgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IHt9OwogICAgICB2YXIgaGVhZGVycyA9IHt9OwogICAgICBpZiAodXNlckFuYWx5dGljcykgaGVhZGVyc1thcGlDb25zdGFudHMuSEVBREVSUy5HU1RfQU5BTFlUSUNTXSA9IDE7CiAgICAgIHJldHVybiBmZXRjaEFQSS5nZXQoIiIuY29uY2F0KGFwaUNvbnN0YW50cy5CQVNFX1VSTCwgIi9hcGkvcHJvZHVjdC8iKS5jb25jYXQoaWQsICIvdGlja2V0cyIpLCBhcGlVdGlsc05vcm1hbGl6ZVF1ZXJ5UGFyYW1zV2l0aENpdHkoewogICAgICAgIHByaWNlczogcHJpY2VSYW5nZSAmJiBwcmljZVJhbmdlLmxlbmd0aCA/IHByaWNlUmFuZ2Uuam9pbignLCcpIDogbnVsbCwKICAgICAgICBzZWxlY3Rpb246IHNlbGVjdGlvbiwKICAgICAgICBxdWFudGl0eTogcXVhbnRpdHksCiAgICAgICAgYWNjZXNzaWJpbGl0eTogYWNjZXNzaWJpbGl0eSwKICAgICAgICBzb3J0OiBzb3J0LAogICAgICAgIG9mZnNldDogb2Zmc2V0LAogICAgICAgIGxpbWl0OiBsaW1pdAogICAgICB9KSwgaGVhZGVycywgX29iamVjdFNwcmVhZCh7fSwgY29uZmlnKSk7CiAgICB9LAogICAgYXZhaWxhYmlsaXR5OiBmdW5jdGlvbiBhdmFpbGFiaWxpdHkoaWQpIHsKICAgICAgdmFyIF9yZWYzID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fSwKICAgICAgICAgIGNhbmNlbFRva2VuID0gX3JlZjMuY2FuY2VsVG9rZW47CgogICAgICByZXR1cm4gZmV0Y2hBUEkuZ2V0KCIiLmNvbmNhdChhcGlDb25zdGFudHMuQkFTRV9VUkwsICIvYXBpL3Byb2R1Y3QvIikuY29uY2F0KGlkLCAiL2JvdW5kYXJpZXMiKSwge30sIHt9LCB7CiAgICAgICAgY2FuY2VsVG9rZW46IGNhbmNlbFRva2VuCiAgICAgIH0pOwogICAgfQogIH0KfTsKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKF94KSB7CiAgcmV0dXJuIF9yZWY0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIF9yZWY0KCkgewogIF9yZWY0ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGNvbmZpZykgewogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBjcmVhdGVBcGlTZXJ2aWNlKGNvbmZpZywgYXBpKSk7CgogICAgICAgICAgY2FzZSAxOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKICByZXR1cm4gX3JlZjQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQ=="},{"version":3,"sources":["/Users/cristiandan/Desktop/proiect-licenta-front/src/core/api/apiServiceTickets.js"],"names":["apiConstants","fetch","getDefaultGetParams","apiUtilsGetDefaultGetParams","normalizeQueryParamsWithCity","apiUtilsNormalizeQueryParamsWithCity","createApiService","fetchAPI","defaultGetParam","api","getCancelRequest","tickets","get","id","priceRange","selection","quantity","accessibility","sort","limit","offset","userAnalytics","config","headers","HEADERS","GST_ANALYTICS","BASE_URL","prices","length","join","availability","cancelToken"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SACIC,mBAAmB,IAAIC,2BAD3B,EAEIC,4BAA4B,IAAIC,oCAFpC,QAGO,sBAHP;AAIA,SAASC,gBAAT,EAA2BC,QAA3B,QAA2C,kBAA3C;AAEA,IAAMC,eAAe,GAAGL,2BAA2B,EAAnD;AAEA,IAAIM,GAAG,GAAG;AACNC,EAAAA,gBAAgB,EAAET,KAAK,CAACS,gBADlB;AAENC,EAAAA,OAAO,EAAE;AACLC,IAAAA,GAAG,EAAE,aACDC,EADC,EAaA;AAAA,qFAHGL,eAGH;AAAA,iCAVGM,UAUH;AAAA,UAVGA,UAUH,gCAVgB,EAUhB;AAAA,gCATGC,SASH;AAAA,UATGA,SASH,+BATe,EASf;AAAA,+BARGC,QAQH;AAAA,UARGA,QAQH,8BARc,EAQd;AAAA,oCAPGC,aAOH;AAAA,UAPGA,aAOH,mCAPmB,EAOnB;AAAA,2BANGC,IAMH;AAAA,UANGA,IAMH,0BANU,EAMV;AAAA,4BALGC,KAKH;AAAA,UALGA,KAKH,2BALWX,eAAe,CAACW,KAK3B;AAAA,6BAJGC,MAIH;AAAA,UAJGA,MAIH,4BAJYZ,eAAe,CAACY,MAI5B;;AAAA,sFAFmB,EAEnB;AAAA,UAFCC,aAED,SAFCA,aAED;;AAAA,UADDC,MACC,uEADQ,EACR;AACD,UAAMC,OAAO,GAAG,EAAhB;AAEA,UAAKF,aAAL,EAAqBE,OAAO,CAAEvB,YAAY,CAACwB,OAAb,CAAqBC,aAAvB,CAAP,GAAgD,CAAhD;AAErB,aAAOlB,QAAQ,CAACK,GAAT,WACAZ,YAAY,CAAC0B,QADb,0BACqCb,EADrC,eAEHR,oCAAoC,CAAE;AAClCsB,QAAAA,MAAM,EAAIb,UAAU,IAAIA,UAAU,CAACc,MAA3B,GAAsCd,UAAU,CAACe,IAAX,CAAiB,GAAjB,CAAtC,GAA+D,IADrC;AAElCd,QAAAA,SAAS,EAATA,SAFkC;AAGlCC,QAAAA,QAAQ,EAARA,QAHkC;AAIlCC,QAAAA,aAAa,EAAbA,aAJkC;AAKlCC,QAAAA,IAAI,EAAJA,IALkC;AAMlCE,QAAAA,MAAM,EAANA,MANkC;AAOlCD,QAAAA,KAAK,EAALA;AAPkC,OAAF,CAFjC,EAWHI,OAXG,oBAYED,MAZF,EAAP;AAcH,KAjCI;AAkCLQ,IAAAA,YAAY,EAAE,sBACVjB,EADU;AAAA,sFAEQ,EAFR;AAAA,UAERkB,WAFQ,SAERA,WAFQ;;AAAA,aAGTxB,QAAQ,CAACK,GAAT,WACEZ,YAAY,CAAC0B,QADf,0BACuCb,EADvC,kBAED,EAFC,EAGD,EAHC,EAID;AACIkB,QAAAA,WAAW,EAAXA;AADJ,OAJC,CAHS;AAAA;AAlCT;AAFH,CAAV;AAkDA;AAAA;AAAA;;;kEAAe,iBAAiBT,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,6CACJhB,gBAAgB,CAAEgB,MAAF,EAAUb,GAAV,CADZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import apiConstants from '@core/utils/constants/api';\nimport fetch from '@core/utils/fetch';\nimport {\n    getDefaultGetParams as apiUtilsGetDefaultGetParams,\n    normalizeQueryParamsWithCity as apiUtilsNormalizeQueryParamsWithCity,\n} from '@core/utils/apiUtils';\nimport { createApiService, fetchAPI } from '@core/api/_utils';\n\nconst defaultGetParam = apiUtilsGetDefaultGetParams( );\n\nlet api = {\n    getCancelRequest: fetch.getCancelRequest,\n    tickets: {\n        get: (\n            id,\n            {\n                priceRange = [],\n                selection = '',\n                quantity = '',\n                accessibility = '',\n                sort = '',\n                limit = defaultGetParam.limit,\n                offset = defaultGetParam.offset\n            } = defaultGetParam,\n            { userAnalytics } = { },\n            config = { }\n        ) => {\n            const headers = { };\n\n            if ( userAnalytics ) headers[ apiConstants.HEADERS.GST_ANALYTICS ] = 1;\n\n            return fetchAPI.get(\n                `${apiConstants.BASE_URL}/api/product/${id}/tickets`,\n                apiUtilsNormalizeQueryParamsWithCity( {\n                    prices: ( priceRange && priceRange.length ) ? priceRange.join( ',' ) : null,\n                    selection,\n                    quantity,\n                    accessibility,\n                    sort,\n                    offset,\n                    limit\n                } ),\n                headers,\n                { ...config }\n            );\n        },\n        availability: (\n            id,\n            { cancelToken } = { }\n        ) => fetchAPI.get(\n            `${apiConstants.BASE_URL}/api/product/${id}/boundaries`,\n            { },\n            { },\n            {\n                cancelToken\n            }\n        )\n    }\n};\n\nexport default async function ( config ) {\n    return createApiService( config, api );\n}"]}]}