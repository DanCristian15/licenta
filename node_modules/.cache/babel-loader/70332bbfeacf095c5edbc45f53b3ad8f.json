{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/shared/components/attraction/mixins/AttractionCardImageMixin.js","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/shared/components/attraction/mixins/AttractionCardImageMixin.js","mtime":1645805363939},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCBlbnRpdHlDb25zdGFudHMgZnJvbSAnQGNvcmUvdXRpbHMvY29uc3RhbnRzL2VudGl0eSc7CmltcG9ydCBjYXRlZ29yaWVzQ29uc3RhbnRzIGZyb20gJ0Bjb3JlL3V0aWxzL2NvbnN0YW50cy9jYXRlZ29yaWVzJzsKaW1wb3J0IHsgaGFzSW5jb3JyZWN0Q29udGVudFNpemUgYXMgaW1hZ2VVdGlsc0hhc0luY29ycmVjdENvbnRlbnRTaXplIH0gZnJvbSAnQGNvcmUvdXRpbHMvaW1hZ2VVdGlscyc7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgaXRlbTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZXJyb3JMb2FkaW5nSW1hZ2U6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGVudGl0eVR5cGU6IGZ1bmN0aW9uIGVudGl0eVR5cGUoKSB7CiAgICAgIHJldHVybiBlbnRpdHlDb25zdGFudHMuVFlQRVMuQVRUUkFDVElPTjsKICAgIH0sCiAgICBpbWFnZVNyYzogZnVuY3Rpb24gaW1hZ2VTcmMoKSB7CiAgICAgIHZhciBlcnJvckxvYWRpbmdJbWFnZSA9IHRoaXMuZXJyb3JMb2FkaW5nSW1hZ2UsCiAgICAgICAgICBmYWxsYmFja1NyYyA9IHRoaXMuZmFsbGJhY2tTcmM7CiAgICAgIHZhciBpbWFnZVVybCA9IHRoaXMuaXRlbS5pbWFnZVVybDsKCiAgICAgIGlmIChlcnJvckxvYWRpbmdJbWFnZSkgewogICAgICAgIHJldHVybiB0aGlzLmZhbGxiYWNrU3JjOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBpbWFnZVVybCB8fCBmYWxsYmFja1NyYzsKICAgICAgfQogICAgfSwKICAgIGZhbGxiYWNrU3JjOiBmdW5jdGlvbiBmYWxsYmFja1NyYygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBmb3VuZCA9IGNhdGVnb3JpZXNDb25zdGFudHMuTElTVC5maW5kKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0uSUQgPT09IF90aGlzLml0ZW0uY2xhc3NpZmljYXRpb25TZWdtZW50SWQ7CiAgICAgIH0pOwogICAgICByZXR1cm4gZm91bmQgPyBmb3VuZC5GQUxMQkFDSyA6IGNhdGVnb3JpZXNDb25zdGFudHMuREVGQVVMVF9GQUxMQkFDSzsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIG9uSW1hZ2VMb2FkRG86IGZ1bmN0aW9uIG9uSW1hZ2VMb2FkRG8oKSB7CiAgICAgIGlmICh0aGlzLml0ZW0uaW1hZ2VVcmwgJiYgdGhpcy5pdGVtLmltYWdlVXJsID09PSB0aGlzLmltYWdlU3JjKSB7CiAgICAgICAgdGhpcy5lcnJvckxvYWRpbmdJbWFnZSA9IGltYWdlVXRpbHNIYXNJbmNvcnJlY3RDb250ZW50U2l6ZSh0aGlzLiRyZWZzLmltYWdlLmltYWdlKTsKICAgICAgfQoKICAgICAgdGhpcy4kZW1pdCgnbG9hZC1pbWFnZScpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/cristiandan/Desktop/proiect-licenta-front/src/core/shared/components/attraction/mixins/AttractionCardImageMixin.js"],"names":["entityConstants","categoriesConstants","hasIncorrectContentSize","imageUtilsHasIncorrectContentSize","props","item","type","Object","required","data","errorLoadingImage","computed","entityType","TYPES","ATTRACTION","imageSrc","fallbackSrc","imageUrl","found","LIST","find","ID","classificationSegmentId","FALLBACK","DEFAULT_FALLBACK","methods","onImageLoadDo","$refs","image","$emit"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,8BAA5B;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AACA,SACIC,uBAAuB,IAAIC,iCAD/B,QAEO,wBAFP;AAIA,eAAe;AACXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAE;AACFC,MAAAA,IAAI,EAAEC,MADJ;AAEFC,MAAAA,QAAQ,EAAE;AAFR;AADH,GADI;AAOXC,EAAAA,IAPW,kBAOJ;AACH,WAAO;AACHC,MAAAA,iBAAiB,EAAE;AADhB,KAAP;AAGH,GAXU;AAYXC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UADM,wBACO;AACT,aAAOZ,eAAe,CAACa,KAAhB,CAAsBC,UAA7B;AACH,KAHK;AAINC,IAAAA,QAJM,sBAIK;AAAA,UACCL,iBADD,GACoC,IADpC,CACCA,iBADD;AAAA,UACoBM,WADpB,GACoC,IADpC,CACoBA,WADpB;AAAA,UAECC,QAFD,GAEc,KAAKZ,IAFnB,CAECY,QAFD;;AAIP,UAAKP,iBAAL,EAAyB;AACrB,eAAO,KAAKM,WAAZ;AACH,OAFD,MAEO;AACH,eAAOC,QAAQ,IAAID,WAAnB;AACH;AACJ,KAbK;AAcNA,IAAAA,WAdM,yBAcQ;AAAA;;AACV,UAAIE,KAAK,GAAGjB,mBAAmB,CAACkB,IAApB,CAAyBC,IAAzB,CAA+B,UAAAf,IAAI;AAAA,eAAIA,IAAI,CAACgB,EAAL,KAAY,KAAI,CAAChB,IAAL,CAAUiB,uBAA1B;AAAA,OAAnC,CAAZ;AACA,aAAOJ,KAAK,GAAGA,KAAK,CAACK,QAAT,GAAoBtB,mBAAmB,CAACuB,gBAApD;AACH;AAjBK,GAZC;AA+BXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,aADK,2BACY;AACb,UAAK,KAAKrB,IAAL,CAAUY,QAAV,IAAsB,KAAKZ,IAAL,CAAUY,QAAV,KAAuB,KAAKF,QAAvD,EAAkE;AAC9D,aAAKL,iBAAL,GAAyBP,iCAAiC,CAAE,KAAKwB,KAAL,CAAWC,KAAX,CAAiBA,KAAnB,CAA1D;AACH;;AACD,WAAKC,KAAL,CAAY,YAAZ;AACH;AANI;AA/BE,CAAf","sourcesContent":["import entityConstants from '@core/utils/constants/entity';\nimport categoriesConstants from '@core/utils/constants/categories';\nimport {\n    hasIncorrectContentSize as imageUtilsHasIncorrectContentSize\n} from '@core/utils/imageUtils';\n\nexport default { \n    props: {\n        item: {\n            type: Object,\n            required: true\n        },\n    },\n    data() {\n        return {\n            errorLoadingImage: false\n        };\n    },\n    computed: {\n        entityType() {\n            return entityConstants.TYPES.ATTRACTION;\n        },\n        imageSrc() {\n            const { errorLoadingImage, fallbackSrc } = this;\n            const { imageUrl } = this.item;\n\n            if ( errorLoadingImage ) {\n                return this.fallbackSrc;\n            } else {\n                return imageUrl || fallbackSrc;\n            }\n        },\n        fallbackSrc() {\n            let found = categoriesConstants.LIST.find( item => item.ID === this.item.classificationSegmentId );\n            return found ? found.FALLBACK : categoriesConstants.DEFAULT_FALLBACK ;\n        },\n    },\n    methods: {\n        onImageLoadDo( ) {\n            if ( this.item.imageUrl && this.item.imageUrl === this.imageSrc ) {\n                this.errorLoadingImage = imageUtilsHasIncorrectContentSize( this.$refs.image.image );\n            }\n            this.$emit( 'load-image' );\n        }\n        \n    }\n};"]}]}