{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/store/modules/searchState.js","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/store/modules/searchState.js","mtime":1645805363992},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/cristiandan/Desktop/proiect-licenta-front/src/core/store/modules/searchState.js"],"names":["cloneDeep","isEmpty","dateConstants","buildSearchQueryObject","searchUtilsBuildSearchQueryObject","normalizeDataInitialState","searchUtilsNormalizeDataInitialState","isCity","cityObjectUtilsIsCity","searchObjectUtilsIsEmpty","format","dateUtilsFormat","asyncParallel","fetch","STORE_NAME","searchCancelRequest","searchObj","airport","city","startDate","endDate","keyword","loyaltyAccount","loyaltyProgram","name","namespaced","state","current","initial","results","attractions","events","venues","getters","isEmptyCurrentSearchParams","currentSearchParams","ret","currentQueryObject","currentQueryObjectHasOnlyKeyword","currentQueryObjectOnlyKeyword","mutations","clearCurrent","setCurrentCity","setCurrentStartDate","Date","setCurrentEndDate","setCurrentKeyword","updateInitial","updateResults","actions","update","data","commit","dispatch","hasOwnProperty","root","search","cancel","getCancelRequest","params","requestConfig","cancelToken","token","_persistent","getDataToSave","getDataToLoad","initialData","FORMAT","DEFAULT"],"mappings":"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","sourcesContent":["/**\n * Note( ionutt )\n * Date Utils import store and that can lead to circular dependencies\n * ( search utils is also using that ). I made an ticket related to that GL-581\n */\nimport cloneDeep from 'lodash/cloneDeep';\nimport isEmpty from 'lodash/isEmpty';\nimport dateConstants from '@core/utils/constants/date';\nimport {\n    buildSearchQueryObject as searchUtilsBuildSearchQueryObject,\n    normalizeDataInitialState as searchUtilsNormalizeDataInitialState\n} from '@core/utils/searchUtils';\nimport { isCity as cityObjectUtilsIsCity } from '@core/utils/cityObjectUtils';\nimport { isEmpty as searchObjectUtilsIsEmpty } from '@core/utils/searchObjectUtils';\nimport { format as dateUtilsFormat } from '@core/utils/dateUtils';\nimport asyncParallel from '@core/utils/asyncParallel';\nimport fetch from '@core/utils/fetch';\n\nconst STORE_NAME = 'searchState';\nlet searchCancelRequest;\n\nconst searchObj = {\n    airport:            { },\n    city:               { },\n    startDate:          null,\n    endDate:            null,\n    keyword:            '',\n    loyaltyAccount:     { },\n    loyaltyProgram:     { }\n};\n\nexport default {\n    name: STORE_NAME,\n    namespaced: true,\n    state: {\n        current: { ...searchObj },\n        initial: { ...searchObj },\n        results: {\n            attractions: [],\n            events: [],\n            venues: []\n        }\n    },\n    getters: {\n        isEmptyCurrentSearchParams: state => ( ) => {\n            return searchObjectUtilsIsEmpty( state.current );\n        },\n        currentSearchParams: state => {\n            let ret = { },\n                { current } = state;\n\n            if ( cityObjectUtilsIsCity( current.city ) ) {\n                ret.city = current.city;\n            }\n            !( current.keyword )                   || ( ret.keyword = current.keyword );\n            !( current.startDate )                 || ( ret.startDate = current.startDate );\n            !( current.endDate )                   || ( ret.endDate = current.endDate );\n\n            return ret;\n        },\n        currentQueryObject: state => {\n            const { keyword, city, startDate, endDate } = state.current;\n\n            return searchUtilsBuildSearchQueryObject( {\n                keyword,\n                city,\n                startDate: startDate,\n                endDate: endDate\n            } );\n        },\n        currentQueryObjectHasOnlyKeyword: state => {\n            const { keyword, city, startDate, endDate } = state.current;\n\n            return keyword && isEmpty( city ) && !startDate && !endDate;\n        },\n        currentQueryObjectOnlyKeyword: state => {\n            const { keyword } = state.current;\n\n            return searchUtilsBuildSearchQueryObject( {\n                keyword\n            } );\n        }\n    },\n    mutations: {\n        clearCurrent ( state ) {\n            state.current = { ...searchObj };\n        },\n        setCurrentCity ( state, city ) {\n            state.current.city = city;\n        },\n        setCurrentStartDate ( state, startDate ) {\n            state.current.startDate = startDate ? new Date ( startDate ) : null;\n        },\n        setCurrentEndDate ( state, endDate ) {\n            state.current.endDate = endDate ? new Date( endDate ) : null;\n        },\n        setCurrentKeyword ( state, keyword ) {\n            state.current.keyword = keyword;\n        },\n        updateInitial ( state, initial ) {\n            state.initial = {\n                ...searchObj,\n                ...initial\n            };\n        },\n        updateResults ( state, results ) {\n            state.results.attractions = results.attractions ? [ ...results.attractions ] : [];\n            state.results.events = results.events ? [ ...results.events ] : [];\n            state.results.venues = results.venues ? [ ...results.venues ] : [];\n        }\n    },\n    actions: {\n        update( { commit, dispatch }, data ) {\n            if ( data.hasOwnProperty( 'city' ) ) {\n                if ( cityObjectUtilsIsCity ( data.city ) ) {\n                    commit( 'setCurrentCity', data.city );\n                    !data.city.name || dispatch( 'user/browsingHistory/addCity', data.city, { root: true } );\n                } else {\n                    commit( 'setCurrentCity', { } );\n                }\n            }\n\n            !( data.hasOwnProperty( 'keyword' ) )   || commit( 'setCurrentKeyword', data.keyword );\n\n            !( data.hasOwnProperty( 'startDate' ) ) || commit( 'setCurrentStartDate', data.startDate );\n            !( data.hasOwnProperty( 'endDate' ) )   || commit( 'setCurrentEndDate', data.endDate );\n        },\n        async updateInitial( { commit }, data ) {\n            if ( data ) {\n                commit ( 'updateInitial', data );\n            }\n\n            return data;\n        },\n        clearCurrent ( { commit } ) {\n            commit ( 'clearCurrent' );\n        },\n        async search( { commit, dispatch }, { search } ) {\n            let attractions, venues, events;\n\n            !searchCancelRequest || searchCancelRequest.cancel( );\n            searchCancelRequest = fetch.getCancelRequest( );\n            const params = { search: cloneDeep( search ), requestConfig: { cancelToken: searchCancelRequest.token } };\n\n            await asyncParallel( [\n                async ( ) => { attractions = await dispatch( 'attractions/searchList', params, {  root: true } ); },\n                async ( ) => { events = await dispatch( 'events/searchList', params, {  root: true } ); },\n                async ( ) => { venues = await dispatch( 'venues/searchList', params, {  root: true } ); },\n            ], 3 );\n            commit( 'updateResults', { attractions, venues, events } );\n        }\n    },\n    _persistent: {\n        getDataToSave: ( state ) => {\n            return {\n                initial: state[STORE_NAME].initial\n            };\n        },\n        getDataToLoad: ( data ) => {\n            const initialData = data.initial;\n\n            !initialData.startDate || ( initialData.startDate = dateUtilsFormat( new Date( initialData.startDate ), dateConstants.FORMAT.DEFAULT ) );\n            !initialData.endDate || ( initialData.endDate = dateUtilsFormat( new Date( initialData.endDate ), dateConstants.FORMAT.DEFAULT ) );\n\n            return {\n                initial: {\n                    ...searchObj,\n                    ...( searchUtilsNormalizeDataInitialState( initialData ) )\n                }\n            };\n        }\n    }\n};\n"]}]}