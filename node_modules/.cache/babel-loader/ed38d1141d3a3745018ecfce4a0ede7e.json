{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/store/modules/packageOffersHotels.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/store/modules/packageOffersHotels.js","mtime":1645805365975},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/store/modules/packageOffersHotels.js"],"names":["qs","Vue","apiServicePackageOffers","mutationTypes","LogService","HotelReservationModel","STORE_NAME","findRoomForSelectedHotelReservationRoom","list","hotelReservation","ret","forEach","item","id","room","rooms","find","rate","packageOffer","selectedRoom","name","namespaced","state","loading","loadingCounter","mutations","setHotelList","data","selectRoom","value","index","findIndex","set","START_LOADING","STOP_LOADING","getters","getLoading","findSameRoomForSelectedHotelReservationRoom","get","actions","getByEventId","commit","eventId","ids","guestCount","sectionName","api","packageOffers","hotelsByEventId","paramsSerializer","params","stringify","arrayFormat","indices","response","success","hotels","map","model","transform","debug","updateWithSelectedItemIfMatch"],"mappings":"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","sourcesContent":["import qs from 'qs';\nimport Vue from 'vue';\nimport apiServicePackageOffers from '@core/api/apiServicePackageOffers';\nimport mutationTypes from '@core/helpers/storeFactories/helpers/mutationTypes';\nimport LogService from '@services/LogService';\nimport HotelReservationModel from '@tenants/ticketmaster/app/models/HotelReservationModel';\n\nconst STORE_NAME = 'hotels';\n\nconst findRoomForSelectedHotelReservationRoom = ( list, hotelReservation ) => {\n    let ret = null;\n\n    list.forEach( item => {\n        if ( item.id === hotelReservation.id ) {\n            const room = item.rooms.find( room => {\n                return room.rate.packageOffer.id === hotelReservation.selectedRoom.rate.packageOffer.id;\n            } );\n\n            if ( room ) {\n                ret = room;\n            }\n        }\n    } );\n\n    return ret;\n};\n\nexport default {\n    name: STORE_NAME,\n    namespaced: true,\n    state: {\n        list: [],\n        loading: false,\n        loadingCounter: 0\n    },\n    mutations: {\n        setHotelList( state, data ) {\n            state.list = [ ...data ];\n        },\n        selectRoom( state, { id, value } ) {\n            const index = state.list.findIndex( item => item.id === id );\n\n            if ( index !== -1 ) {\n                Vue.set( state.list, index, {\n                    ...state.list[ index ],\n                    selectedRoom: value\n                } );\n            }\n        },\n        [ mutationTypes.START_LOADING ] ( state ) {\n            state.loadingCounter = state.loadingCounter + 1;\n            state.loading = !!state.loadingCounter;\n        },\n        [ mutationTypes.STOP_LOADING ] ( state ) {\n            state.loadingCounter = state.loadingCounter > 0 ? state.loadingCounter - 1 : 0;\n            state.loading = !!state.loadingCounter;\n        },\n    },\n    getters: {\n        getLoading: state => {\n            return state.loading;\n        },\n        findSameRoomForSelectedHotelReservationRoom: state => hotelReservation => {\n            return findRoomForSelectedHotelReservationRoom( state.list, hotelReservation );\n        },\n        get: state => id => state.list.find( item => item.id === id ),\n    },\n    actions: {\n        getByEventId: async ( { commit }, { eventId, ids, guestCount, sectionName } = { }, ) => {\n            commit( mutationTypes.START_LOADING );\n            commit( 'setHotelList', [ ] );\n\n            const api = await apiServicePackageOffers( '' );\n            const response = await api.packageOffers.hotelsByEventId( { eventId, ids, guestCount, sectionName }, {\n                paramsSerializer: params => qs.stringify( params, { arrayFormat: 'repeat', indices: false } )\n            } );\n\n            if ( response.success ) {\n                const hotels = response.data.list.map( item => {\n                    const model = new HotelReservationModel( ).transform( item );\n                    model.selectedRoom = model.rooms[ 0 ];\n\n                    return model;\n                } );\n                commit( 'setHotelList', hotels );\n                commit( mutationTypes.STOP_LOADING );\n                return hotels;\n\n            } else {\n                LogService.debug( 'problem loading hotels by event ' + eventId );\n                commit( mutationTypes.STOP_LOADING );\n                return response;\n            }\n        },\n        selectRoom( { commit }, { id, value } ) {\n            commit( 'selectRoom', { id, value } );\n        },\n        updateWithSelectedItemIfMatch( { commit, getters }, hotelReservation ) {\n            const room = getters.findSameRoomForSelectedHotelReservationRoom( hotelReservation );\n            if ( room ) {\n                const id = hotelReservation.id;\n\n                commit ( 'selectRoom', { id, value: room } );\n                return getters.get( id );\n            }\n\n            return false;\n        }\n    }\n};\n"]}]}