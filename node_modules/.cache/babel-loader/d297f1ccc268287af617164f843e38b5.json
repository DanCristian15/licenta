{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/core/filters/datePeriod.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/filters/datePeriod.js","mtime":1645805363889},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IGkxOG5leHQgZnJvbSAnaTE4bmV4dCc7CmltcG9ydCBkYXRlQ29uc3RhbnRzIGZyb20gJ0Bjb3JlL3V0aWxzL2NvbnN0YW50cy9kYXRlJzsKaW1wb3J0IHsgaXNTYW1lRGF5IGFzIGRhdGVVdGlsc0lzU2FtZURheSwgaXNTYW1lWWVhciBhcyBkYXRlVXRpbHNJc1NhbWVZZWFyLCBmb3JtYXQgYXMgZGF0ZVV0aWxzRm9ybWF0IH0gZnJvbSAnQGNvcmUvdXRpbHMvZGF0ZVV0aWxzJzsKaW1wb3J0IHsgZ2V0TGFuZyBhcyBkb2N1bWVudFV0aWxzR2V0TGFuZyB9IGZyb20gJ0Bjb3JlL3V0aWxzL2RvY3VtZW50VXRpbHMnOwpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkYXRlUGVyaW9kKHN0YXJ0RGF0ZSwgZW5kRGF0ZSkgewogIHZhciBfcmVmID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiB7fSwKICAgICAgX3JlZiRmb3JtYXQgPSBfcmVmLmZvcm1hdCwKICAgICAgZm9ybWF0ID0gX3JlZiRmb3JtYXQgPT09IHZvaWQgMCA/IHsKICAgIGZ1bGw6IGRhdGVDb25zdGFudHMuRk9STUFULkZVTEwsCiAgICBwZXJpb2Q6IGRhdGVDb25zdGFudHMuRk9STUFULlBFUklPRCwKICAgIHBlcmlvZEZ1bGw6IGRhdGVDb25zdGFudHMuRk9STUFULlBFUklPRF9GVUxMLAogICAgdGltZTogZGF0ZUNvbnN0YW50cy5GT1JNQVQuVElNRQogIH0gOiBfcmVmJGZvcm1hdCwKICAgICAgX3JlZiRsYW5ndWFnZSA9IF9yZWYubGFuZ3VhZ2UsCiAgICAgIGxhbmd1YWdlID0gX3JlZiRsYW5ndWFnZSA9PT0gdm9pZCAwID8gZG9jdW1lbnRVdGlsc0dldExhbmcoKSA6IF9yZWYkbGFuZ3VhZ2UsCiAgICAgIF9yZWYkaGFzU3RhcnRUaW1lID0gX3JlZi5oYXNTdGFydFRpbWUsCiAgICAgIGhhc1N0YXJ0VGltZSA9IF9yZWYkaGFzU3RhcnRUaW1lID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYkaGFzU3RhcnRUaW1lOwoKICB2YXIgaXNTYW1lRGF5ID0gZGF0ZVV0aWxzSXNTYW1lRGF5KHN0YXJ0RGF0ZSwgZW5kRGF0ZSk7CiAgdmFyIGlzU2FtZVllYXIgPSBkYXRlVXRpbHNJc1NhbWVZZWFyKHN0YXJ0RGF0ZSwgZW5kRGF0ZSk7CiAgdmFyIHRpbWVGb3JtYXRlZCA9IGRhdGVVdGlsc0Zvcm1hdChzdGFydERhdGUsIGZvcm1hdC50aW1lLCBsYW5ndWFnZSk7CiAgdmFyIGRhdGVGb3JtYXRlZCA9IGRhdGVVdGlsc0Zvcm1hdChzdGFydERhdGUsIGZvcm1hdC5mdWxsLCBsYW5ndWFnZSk7CgogIGlmIChlbmREYXRlKSB7CiAgICBpZiAoaXNTYW1lWWVhcikgewogICAgICBpZiAoIWlzU2FtZURheSkgewogICAgICAgIHZhciBzdGFydERhdGVGb3JtYXRlZCA9IGRhdGVVdGlsc0Zvcm1hdChzdGFydERhdGUsIGZvcm1hdC5wZXJpb2QsIGxhbmd1YWdlKTsKICAgICAgICB2YXIgZW5kRGF0ZUZvcm1hdGVkID0gZGF0ZVV0aWxzRm9ybWF0KGVuZERhdGUsIGZvcm1hdC5wZXJpb2RGdWxsLCBsYW5ndWFnZSk7CiAgICAgICAgZGF0ZUZvcm1hdGVkID0gIiIuY29uY2F0KHN0YXJ0RGF0ZUZvcm1hdGVkLCAiIC0gIikuY29uY2F0KGVuZERhdGVGb3JtYXRlZCk7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIHZhciBfc3RhcnREYXRlRm9ybWF0ZWQgPSBkYXRlVXRpbHNGb3JtYXQoc3RhcnREYXRlLCBmb3JtYXQucGVyaW9kRnVsbCwgbGFuZ3VhZ2UpOwoKICAgICAgdmFyIF9lbmREYXRlRm9ybWF0ZWQgPSBkYXRlVXRpbHNGb3JtYXQoZW5kRGF0ZSwgZm9ybWF0LnBlcmlvZEZ1bGwsIGxhbmd1YWdlKTsKCiAgICAgIGRhdGVGb3JtYXRlZCA9ICIiLmNvbmNhdChfc3RhcnREYXRlRm9ybWF0ZWQsICIgLSAiKS5jb25jYXQoX2VuZERhdGVGb3JtYXRlZCk7CiAgICB9CiAgfQoKICBpZiAoaGFzU3RhcnRUaW1lKSB7CiAgICByZXR1cm4gaTE4bmV4dC50KCdfY29tbW9uOnRlcm1zLmRhdGVBbmRUaW1lQXQnLCB7CiAgICAgIGRhdGU6IGRhdGVGb3JtYXRlZCwKICAgICAgdGltZTogdGltZUZvcm1hdGVkCiAgICB9KTsKICB9CgogIHJldHVybiBkYXRlRm9ybWF0ZWQ7Cn0="},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/core/filters/datePeriod.js"],"names":["i18next","dateConstants","isSameDay","dateUtilsIsSameDay","isSameYear","dateUtilsIsSameYear","format","dateUtilsFormat","getLang","documentUtilsGetLang","datePeriod","startDate","endDate","full","FORMAT","FULL","period","PERIOD","periodFull","PERIOD_FULL","time","TIME","language","hasStartTime","timeFormated","dateFormated","startDateFormated","endDateFormated","t","date"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SACIC,SAAS,IAAIC,kBADjB,EAEIC,UAAU,IAAIC,mBAFlB,EAGIC,MAAM,IAAIC,eAHd,QAIO,uBAJP;AAKA,SAASC,OAAO,IAAIC,oBAApB,QAAgD,2BAAhD;AAEA,eAAe,SAASC,UAAT,CACXC,SADW,EAEXC,OAFW,EAOA;AAAA,iFAAP,EAAO;AAAA,yBAHPN,MAGO;AAAA,MAHPA,MAGO,4BAHE;AAAEO,IAAAA,IAAI,EAAEZ,aAAa,CAACa,MAAd,CAAqBC,IAA7B;AAAmCC,IAAAA,MAAM,EAAEf,aAAa,CAACa,MAAd,CAAqBG,MAAhE;AAAwEC,IAAAA,UAAU,EAAEjB,aAAa,CAACa,MAAd,CAAqBK,WAAzG;AAAsHC,IAAAA,IAAI,EAAEnB,aAAa,CAACa,MAAd,CAAqBO;AAAjJ,GAGF;AAAA,2BAFPC,QAEO;AAAA,MAFPA,QAEO,8BAFIb,oBAAoB,EAExB;AAAA,+BADPc,YACO;AAAA,MADPA,YACO,kCADQ,KACR;;AACX,MAAMrB,SAAS,GAAGC,kBAAkB,CAAEQ,SAAF,EAAaC,OAAb,CAApC;AACA,MAAMR,UAAU,GAAGC,mBAAmB,CAAEM,SAAF,EAAaC,OAAb,CAAtC;AACA,MAAMY,YAAY,GAAGjB,eAAe,CAAEI,SAAF,EAAaL,MAAM,CAACc,IAApB,EAA0BE,QAA1B,CAApC;AACA,MAAIG,YAAY,GAAGlB,eAAe,CAAEI,SAAF,EAAaL,MAAM,CAACO,IAApB,EAA0BS,QAA1B,CAAlC;;AAEA,MAAKV,OAAL,EAAe;AACX,QAAKR,UAAL,EAAkB;AACd,UAAK,CAACF,SAAN,EAAkB;AACd,YAAMwB,iBAAiB,GAAGnB,eAAe,CAAEI,SAAF,EAAaL,MAAM,CAACU,MAApB,EAA4BM,QAA5B,CAAzC;AACA,YAAMK,eAAe,GAAGpB,eAAe,CAAEK,OAAF,EAAWN,MAAM,CAACY,UAAlB,EAA8BI,QAA9B,CAAvC;AACAG,QAAAA,YAAY,aAAMC,iBAAN,gBAA6BC,eAA7B,CAAZ;AACH;AACJ,KAND,MAMO;AACH,UAAMD,kBAAiB,GAAGnB,eAAe,CAAEI,SAAF,EAAaL,MAAM,CAACY,UAApB,EAAgCI,QAAhC,CAAzC;;AACA,UAAMK,gBAAe,GAAGpB,eAAe,CAAEK,OAAF,EAAWN,MAAM,CAACY,UAAlB,EAA8BI,QAA9B,CAAvC;;AACAG,MAAAA,YAAY,aAAMC,kBAAN,gBAA6BC,gBAA7B,CAAZ;AACH;AACJ;;AAED,MAAKJ,YAAL,EAAoB;AAChB,WAAOvB,OAAO,CAAC4B,CAAR,CAAW,6BAAX,EAA0C;AAC7CC,MAAAA,IAAI,EAAEJ,YADuC;AAE7CL,MAAAA,IAAI,EAAEI;AAFuC,KAA1C,CAAP;AAIH;;AAED,SAAOC,YAAP;AACH","sourcesContent":["import i18next from 'i18next';\nimport dateConstants from '@core/utils/constants/date';\nimport {\n    isSameDay as dateUtilsIsSameDay,\n    isSameYear as dateUtilsIsSameYear,\n    format as dateUtilsFormat\n} from '@core/utils/dateUtils';\nimport { getLang as documentUtilsGetLang } from '@core/utils/documentUtils';\n\nexport default function datePeriod(\n    startDate,\n    endDate,\n    {\n        format = { full: dateConstants.FORMAT.FULL, period: dateConstants.FORMAT.PERIOD, periodFull: dateConstants.FORMAT.PERIOD_FULL, time: dateConstants.FORMAT.TIME },\n        language = documentUtilsGetLang(),\n        hasStartTime = false\n    } = { }, ) {\n    const isSameDay = dateUtilsIsSameDay( startDate, endDate );\n    const isSameYear = dateUtilsIsSameYear( startDate, endDate );\n    const timeFormated = dateUtilsFormat( startDate, format.time, language );\n    let dateFormated = dateUtilsFormat( startDate, format.full, language );\n\n    if ( endDate ) {\n        if ( isSameYear ) {\n            if ( !isSameDay ) {\n                const startDateFormated = dateUtilsFormat( startDate, format.period, language );\n                const endDateFormated = dateUtilsFormat( endDate, format.periodFull, language );\n                dateFormated = `${startDateFormated} - ${endDateFormated}`;\n            }\n        } else {\n            const startDateFormated = dateUtilsFormat( startDate, format.periodFull, language );\n            const endDateFormated = dateUtilsFormat( endDate, format.periodFull, language );\n            dateFormated = `${startDateFormated} - ${endDateFormated}`;\n        }\n    }\n\n    if ( hasStartTime ) {\n        return i18next.t( '_common:terms.dateAndTimeAt', {\n            date: dateFormated,\n            time: timeFormated\n        } );\n    }\n\n    return dateFormated;\n}"]}]}