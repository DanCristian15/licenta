{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/modules/hotel/stores/addHotelReservationState/addHotelReservationState.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/modules/hotel/stores/addHotelReservationState/addHotelReservationState.js","mtime":1645805365962},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/modules/hotel/stores/addHotelReservationState/addHotelReservationState.js"],"names":["isEqual","Schema","searchHotelReservationConstants","parseString","dateUtilsParseString","mutationTypes","LogService","Guests","filtersStore","modalFiltersStore","hotelsStore","STORE_NAME","DEFAULT_STATE","context","startDateTime","endDateTime","quantity","location","latitude","longitude","name","namespaced","modules","filters","modalFilters","hotels","state","mutations","CLEAR","range","DEFAULT","UPDATE","value","actions","init","commit","dispatch","dispatchSubModuleAction","arg","root","oldContext","oldContextPeriodLocation","getTime","roomsCount","Math","max","floor","contextPeriodLocation","guests","resetFilters","resetModalFilters","_persistent","getDataToSave","storeState","getDataToLoad","data","schema","type","String","required","use","dateString","val","Number","size","min","adultsCount","childrenCount","childAges","Array","validate","length","Date","e","error"],"mappings":"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","sourcesContent":["import isEqual from 'lodash/isEqual';\nimport Schema from 'validate';\nimport searchHotelReservationConstants from '@core/utils/constants/searchHotelReservation';\nimport { parseString as dateUtilsParseString } from '@core/utils/dateUtils';\nimport mutationTypes from '@core/helpers/storeFactories/helpers/mutationTypes';\nimport LogService from '@services/LogService';\nimport Guests from '@/tenants/ticketmaster/app/models/GuestsModel';\nimport filtersStore from './addHotelReservationStateFilters';\nimport modalFiltersStore from './addHotelReservationStateModalFilters';\nimport hotelsStore from './addHotelReservationStateHotels';\n\nconst STORE_NAME = 'addHotelReservationState';\nconst DEFAULT_STATE = {\n    context: {\n        startDateTime: null,\n        endDateTime: null,\n        quantity: null,\n        location: {\n            latitude: null,\n            longitude: null\n        }\n    }\n};\n\nexport default {\n    name: STORE_NAME,\n    namespaced: true,\n    modules: {\n        filters: filtersStore,\n        modalFilters: modalFiltersStore,\n        hotels: hotelsStore\n    },\n    state: { ...DEFAULT_STATE },\n    mutations: {\n        [ mutationTypes.CLEAR ]( state ) {\n            state.context = {\n                startDateTime: null,\n                endDateTime: null,\n                quantity: null,\n                location: {\n                    latitude: null,\n                    longitude: null,\n                    range: searchHotelReservationConstants.DEFAULT.range\n                },\n            };\n        },\n        [ mutationTypes.UPDATE ]( state, value ) {\n            state.context = {\n                startDateTime: value.startDateTime,\n                endDateTime: value.endDateTime,\n                quantity: value.quantity,\n                location: {\n                    latitude: value.location.latitude,\n                    longitude: value.location.longitude,\n                },\n                range: value.range\n            };\n        }\n    },\n    actions: {\n        init( { state, commit, dispatch }, context = { } ) {\n            const dispatchSubModuleAction = async ( name, arg ) => {\n                await dispatch( `addHotelReservationState/${ name }`, arg, { root:true } );\n            };\n            const oldContext = state.context;\n            const oldContextPeriodLocation = {\n                startDateTime: oldContext.startDateTime ? oldContext.startDateTime.getTime( ) : null,\n                endDateTime: oldContext.endDateTime ? oldContext.endDateTime.getTime( ) : null,\n                location: oldContext.location,\n            };\n            const roomsCount = Math.max( Math.floor( context.quantity / 2 ), 1 );\n            const contextPeriodLocation = {\n                startDateTime: context.startDateTime ? context.startDateTime.getTime( ) : null,\n                endDateTime: context.endDateTime ? context.endDateTime.getTime( ) : null,\n                location: context.location\n            };\n\n            if ( !isEqual( oldContextPeriodLocation, contextPeriodLocation ) ) {\n                dispatchSubModuleAction( 'filters/clear', null );\n                dispatchSubModuleAction( 'filters/update', {\n                    startDateTime: context.startDateTime,\n                    endDateTime: context.endDateTime,\n                    roomsCount,\n                    guests: new Guests( context.quantity ),\n                    location: context.location,\n                    range: searchHotelReservationConstants.DEFAULT.range\n                } );\n                dispatchSubModuleAction( 'modalFilters/clear' );\n                dispatchSubModuleAction( 'modalFilters/update', {\n                    roomsCount,\n                    guests: new Guests( context.quantity )\n                } );\n                dispatchSubModuleAction( 'hotels/clear' );\n            } else if ( oldContext.quantity !== context.quantity ) {\n                dispatchSubModuleAction( 'filters/update', {\n                    guests: new Guests( context.quantity, 0, [ ] ),\n                    roomsCount,\n                } );\n                dispatchSubModuleAction( 'modalFilters/clear' );\n                dispatchSubModuleAction( 'modalFilters/update', {\n                    guests: new Guests( context.quantity, 0, [ ] ),\n                    roomsCount,\n                } );\n                dispatchSubModuleAction( 'hotels/clear' );\n            }\n\n            commit( mutationTypes.UPDATE, context );\n        },\n        resetFilters( { state, dispatch } ) {\n            const dispatchSubModuleAction = async ( name, arg ) => {\n                await dispatch( `addHotelReservationState/${ name }`, arg, { root:true } );\n            };\n\n            dispatchSubModuleAction( 'filters/clear', null );\n            dispatchSubModuleAction( 'filters/update', {\n                startDateTime: state.context.startDateTime,\n                endDateTime: state.context.endDateTime,\n                roomsCount: Math.max( Math.floor( state.context.quantity / 2 ), 1 ),\n                guests: new Guests( state.context.quantity ),\n                location: state.context.location,\n                range: searchHotelReservationConstants.DEFAULT.range\n            } );\n\n            dispatchSubModuleAction( 'modalFilters/clear' );\n            dispatchSubModuleAction( 'modalFilters/update', {\n                roomsCount: Math.max( Math.floor( state.context.quantity / 2 ), 1 ),\n                guests: new Guests( state.context.quantity )\n            } );\n        },\n        resetModalFilters( { state, dispatch } ) {\n            const dispatchSubModuleAction = async ( name, arg ) => {\n                await dispatch( `addHotelReservationState/${ name }`, arg, { root:true } );\n            };\n\n            dispatchSubModuleAction( 'modalFilters/clear' );\n            dispatchSubModuleAction( 'modalFilters/update', {\n                roomsCount: 1,\n                guests: new Guests( state.context.quantity )\n            } );\n        }\n    },\n    _persistent: {\n        getDataToSave: ( state ) => {\n            const storeState = state[ STORE_NAME ];\n\n            return {\n                context: storeState.context,\n                filters: filtersStore._persistent.getDataToSave( storeState ),\n                modalFilters: modalFiltersStore._persistent.getDataToSave( storeState )\n            };\n        },\n        getDataToLoad: ( data ) => {\n            try {\n                const schema = new Schema( {\n                    context: {\n                        startDateTime: {\n                            type: String,\n                            required: true,\n                            use: {\n                                dateString: ( val ) => !!dateUtilsParseString( val )\n                            }\n                        },\n                        endDateTime: {\n                            type: String,\n                            required: true,\n                            use: {\n                                dateString: ( val ) => !!dateUtilsParseString( val )\n                            }\n                        },\n                        quantity: {\n                            type: Number,\n                            size: { min: 1 }\n                        },\n                        location: {\n                            latitude: {\n                                type: String,\n                                required: true\n                            },\n                            longitude: {\n                                type: String,\n                                required: true\n                            }\n                        },\n                    },\n                    filters: {\n                        startDateTime: {\n                            type: String,\n                            required: true,\n                            use: {\n                                dateString: ( val ) => !!dateUtilsParseString( val )\n                            }\n                        },\n                        endDateTime: {\n                            type: String,\n                            required: true,\n                            use: {\n                                dateString: ( val ) => !!dateUtilsParseString( val )\n                            }\n                        },\n                        guests: {\n                            adultsCount: {\n                                type: Number,\n                                size: { min: 1 }\n                            },\n                            childrenCount: {\n                                type: Number,\n                            },\n                            childAges: {\n                                type: Array,\n                            }\n                        },\n                        roomsCount: {\n                            type: Number,\n                            required: true,\n                            size: { min: 1 }\n                        },\n                        location: {\n                            latitude: {\n                                type: String,\n                                required: true\n                            },\n                            longitude: {\n                                type: String,\n                                required: true\n                            }\n                        }\n                    },\n                    modalFilters: {\n                        guests: {\n                            adultsCount: {\n                                type: Number,\n                                size: { min: 1 }\n                            },\n                            childrenCount: {\n                                type: Number,\n                            },\n                            childAges: {\n                                type: Array,\n                            }\n                        },\n                        roomsCount: {\n                            type: Number,\n                            size: { min: 1 }\n                        }\n                    }\n                } );\n\n                if ( !data || schema.validate( data ).length ) {\n                    return null;\n                }\n\n                const { context, filters, modalFilters } = data;\n\n                return {\n                    context: {\n                        startDateTime: new Date( context.startDateTime ),\n                        endDateTime: new Date( context.endDateTime ),\n                        quantity: context.quantity,\n                        location: {\n                            latitude: context.location.latitude,\n                            longitude: context.location.longitude,\n                        }\n                    },\n                    filters: filtersStore._persistent.getDataToLoad( filters ),\n                    modalFilters: modalFiltersStore._persistent.getDataToLoad( modalFilters )\n                };\n            } catch ( e ) {\n                LogService.error( `Vuex state cannot be loaded - AddReservationState Store: ${ e }` );\n                return null;\n            }\n        }\n    }\n};"]}]}