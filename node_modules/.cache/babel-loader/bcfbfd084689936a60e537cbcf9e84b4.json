{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/modules/hotel/stores/addHotelReservationState/addHotelReservationStateFilters.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/modules/hotel/stores/addHotelReservationState/addHotelReservationStateFilters.js","mtime":1645805365963},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvY3Jpc3RpYW5kYW4vRGVza3RvcC9saWZlc3R5bGUtdWkvbm9kZV9tb2R1bGVzL0B2dWUvYmFiZWwtcHJlc2V0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgR3Vlc3RzTW9kZWwgZnJvbSAnQHRlbmFudC9hcHAvbW9kZWxzL0d1ZXN0c01vZGVsJzsKaW1wb3J0IHNlYXJjaEhvdGVsUmVzZXJ2YXRpb25Db25zdGFudHMgZnJvbSAnQGNvcmUvdXRpbHMvY29uc3RhbnRzL3NlYXJjaEhvdGVsUmVzZXJ2YXRpb24nOwppbXBvcnQgbXV0YXRpb25UeXBlcyBmcm9tICdAY29yZS9oZWxwZXJzL3N0b3JlRmFjdG9yaWVzL2hlbHBlcnMvbXV0YXRpb25UeXBlcyc7CnZhciBTVE9SRV9OQU1FID0gJ2ZpbHRlcnMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogU1RPUkVfTkFNRSwKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICBzdGFydERhdGVUaW1lOiBudWxsLAogICAgZW5kRGF0ZVRpbWU6IG51bGwsCiAgICBndWVzdHM6IG5ldyBHdWVzdHNNb2RlbCgpLAogICAgcm9vbXNDb3VudDogMSwKICAgIGxvY2F0aW9uOiB7CiAgICAgIGxhdGl0dWRlOiBudWxsLAogICAgICBsb25naXR1ZGU6IG51bGwKICAgIH0sCiAgICByYW5nZTogc2VhcmNoSG90ZWxSZXNlcnZhdGlvbkNvbnN0YW50cy5ERUZBVUxULnJhbmdlCiAgfSwKICBtdXRhdGlvbnM6IF9kZWZpbmVQcm9wZXJ0eSh7CiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShzdGF0ZSwgZmlsdGVycykgewogICAgICBpZiAoZmlsdGVycy5oYXNPd25Qcm9wZXJ0eSgnc3RhcnREYXRlVGltZScpKSB7CiAgICAgICAgc3RhdGUuc3RhcnREYXRlVGltZSA9IGZpbHRlcnMuc3RhcnREYXRlVGltZTsKICAgICAgfQoKICAgICAgaWYgKGZpbHRlcnMuaGFzT3duUHJvcGVydHkoJ2VuZERhdGVUaW1lJykpIHsKICAgICAgICBzdGF0ZS5lbmREYXRlVGltZSA9IGZpbHRlcnMuZW5kRGF0ZVRpbWU7CiAgICAgIH0KCiAgICAgIGlmIChmaWx0ZXJzLmhhc093blByb3BlcnR5KCdndWVzdHMnKSkgewogICAgICAgIHN0YXRlLmd1ZXN0cyA9IGZpbHRlcnMuZ3Vlc3RzOwogICAgICB9CgogICAgICBpZiAoZmlsdGVycy5oYXNPd25Qcm9wZXJ0eSgncm9vbXNDb3VudCcpKSB7CiAgICAgICAgc3RhdGUucm9vbXNDb3VudCA9IGZpbHRlcnMucm9vbXNDb3VudDsKICAgICAgfQoKICAgICAgaWYgKGZpbHRlcnMuaGFzT3duUHJvcGVydHkoJ2xvY2F0aW9uJykpIHsKICAgICAgICBzdGF0ZS5sb2NhdGlvbiA9IGZpbHRlcnMubG9jYXRpb247CiAgICAgIH0KCiAgICAgIGlmIChmaWx0ZXJzLmhhc093blByb3BlcnR5KCdyYW5nZScpKSB7CiAgICAgICAgc3RhdGUucmFuZ2UgPSBmaWx0ZXJzLnJhbmdlOwogICAgICB9CiAgICB9CiAgfSwgbXV0YXRpb25UeXBlcy5DTEVBUiwgZnVuY3Rpb24gKHN0YXRlKSB7CiAgICBzdGF0ZS5zdGFydERhdGVUaW1lID0gbnVsbDsKICAgIHN0YXRlLmVuZERhdGVUaW1lID0gbnVsbDsKICAgIHN0YXRlLmd1ZXN0cyA9IG5ldyBHdWVzdHNNb2RlbCgpOwogICAgc3RhdGUucm9vbXNDb3VudCA9IDE7CiAgICBzdGF0ZS5sb2NhdGlvbiA9IHsKICAgICAgbGF0aXR1ZGU6IDAsCiAgICAgIGxvbmdpdHVkZTogMAogICAgfTsKICAgIHN0YXRlLnJhbmdlID0gc2VhcmNoSG90ZWxSZXNlcnZhdGlvbkNvbnN0YW50cy5ERUZBVUxULnJhbmdlOwogIH0pLAogIGFjdGlvbnM6IHsKICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKF9yZWYsIGZpbHRlcnMpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICBjb21taXQoJ3VwZGF0ZScsIGZpbHRlcnMpOwogICAgfSwKICAgIGNsZWFyOiBmdW5jdGlvbiBjbGVhcihfcmVmMikgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICBjb21taXQobXV0YXRpb25UeXBlcy5DTEVBUik7CiAgICB9CiAgfSwKICBfcGVyc2lzdGVudDogewogICAgZ2V0RGF0YVRvU2F2ZTogZnVuY3Rpb24gZ2V0RGF0YVRvU2F2ZShzdGF0ZSkgewogICAgICB2YXIgc3RvcmVTdGF0ZSA9IHN0YXRlW1NUT1JFX05BTUVdOwogICAgICByZXR1cm4gewogICAgICAgIHN0YXJ0RGF0ZVRpbWU6IHN0b3JlU3RhdGUuc3RhcnREYXRlVGltZSwKICAgICAgICBlbmREYXRlVGltZTogc3RvcmVTdGF0ZS5lbmREYXRlVGltZSwKICAgICAgICBndWVzdHM6IHN0b3JlU3RhdGUuZ3Vlc3RzLAogICAgICAgIHJvb21zQ291bnQ6IHN0b3JlU3RhdGUucm9vbXNDb3VudCwKICAgICAgICBsb2NhdGlvbjogewogICAgICAgICAgbGF0aXR1ZGU6IHN0b3JlU3RhdGUubG9jYXRpb24ubGF0aXR1ZGUsCiAgICAgICAgICBsb25naXR1ZGU6IHN0b3JlU3RhdGUubG9jYXRpb24ubG9uZ2l0dWRlCiAgICAgICAgfQogICAgICB9OwogICAgfSwKICAgIGdldERhdGFUb0xvYWQ6IGZ1bmN0aW9uIGdldERhdGFUb0xvYWQoZGF0YSkgewogICAgICBkYXRhID0gZGF0YSB8fCB7fTsKICAgICAgcmV0dXJuIHsKICAgICAgICBzdGFydERhdGVUaW1lOiBuZXcgRGF0ZShkYXRhLnN0YXJ0RGF0ZVRpbWUpLAogICAgICAgIGVuZERhdGVUaW1lOiBuZXcgRGF0ZShkYXRhLmVuZERhdGVUaW1lKSwKICAgICAgICBndWVzdHM6IG5ldyBHdWVzdHNNb2RlbChkYXRhLmd1ZXN0cy5hZHVsdHNDb3VudCwgZGF0YS5ndWVzdHMuY2hpbGRyZW5Db3VudCwgZGF0YS5ndWVzdHMuY2hpbGRBZ2VzKSwKICAgICAgICByb29tc0NvdW50OiBkYXRhLnJvb21zQ291bnQsCiAgICAgICAgbG9jYXRpb246IHsKICAgICAgICAgIGxhdGl0dWRlOiBkYXRhLmxvY2F0aW9uLmxhdGl0dWRlLAogICAgICAgICAgbG9uZ2l0dWRlOiBkYXRhLmxvY2F0aW9uLmxvbmdpdHVkZQogICAgICAgIH0KICAgICAgfTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/modules/hotel/stores/addHotelReservationState/addHotelReservationStateFilters.js"],"names":["GuestsModel","searchHotelReservationConstants","mutationTypes","STORE_NAME","name","namespaced","state","startDateTime","endDateTime","guests","roomsCount","location","latitude","longitude","range","DEFAULT","mutations","update","filters","hasOwnProperty","CLEAR","actions","commit","clear","_persistent","getDataToSave","storeState","getDataToLoad","data","Date","adultsCount","childrenCount","childAges"],"mappings":"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","sourcesContent":["import GuestsModel from '@tenant/app/models/GuestsModel';\nimport searchHotelReservationConstants from '@core/utils/constants/searchHotelReservation';\nimport mutationTypes from '@core/helpers/storeFactories/helpers/mutationTypes';\n\nconst STORE_NAME = 'filters';\n\nexport default {\n    name: STORE_NAME,\n    namespaced: true,\n    state: {\n        startDateTime: null,\n        endDateTime: null,\n        guests: new GuestsModel(),\n        roomsCount: 1,\n        location: {\n            latitude: null,\n            longitude: null,\n        },\n        range: searchHotelReservationConstants.DEFAULT.range\n    },\n    mutations: {\n        update( state, filters ) {\n            if ( filters.hasOwnProperty( 'startDateTime' ) ) {\n                state.startDateTime = filters.startDateTime;\n            }\n            if ( filters.hasOwnProperty( 'endDateTime' ) ) {\n                state.endDateTime = filters.endDateTime;\n            }\n            if ( filters.hasOwnProperty( 'guests' ) ) {\n                state.guests = filters.guests;\n            }\n            if ( filters.hasOwnProperty( 'roomsCount' ) ) {\n                state.roomsCount = filters.roomsCount;\n            }\n            if ( filters.hasOwnProperty( 'location' ) ) {\n                state.location = filters.location;\n            }\n            if ( filters.hasOwnProperty( 'range' ) ) {\n                state.range = filters.range;\n            }\n\n        },\n        [ mutationTypes.CLEAR ]( state ) {\n            state.startDateTime = null;\n            state.endDateTime = null;\n            state.guests = new GuestsModel( );\n            state.roomsCount = 1;\n            state.location = {\n                latitude: 0,\n                longitude: 0,\n            };\n            state.range = searchHotelReservationConstants.DEFAULT.range;\n        }\n    },\n    actions: {\n        update( { commit }, filters ) {\n            commit( 'update', filters );\n        },\n        clear( { commit } ) {\n            commit( mutationTypes.CLEAR );\n        }\n    },\n    _persistent: {\n        getDataToSave: ( state ) => {\n            const storeState = state[ STORE_NAME ];\n\n            return {\n                startDateTime: storeState.startDateTime,\n                endDateTime: storeState.endDateTime,\n                guests: storeState.guests,\n                roomsCount: storeState.roomsCount,\n                location: {\n                    latitude: storeState.location.latitude,\n                    longitude: storeState.location.longitude,\n                },\n            };\n        },\n        getDataToLoad: ( data ) => {\n            data = data || { };\n\n            return {\n                startDateTime: new Date( data.startDateTime ),\n                endDateTime: new Date( data.endDateTime ),\n                guests: new GuestsModel( data.guests.adultsCount, data.guests.childrenCount, data.guests.childAges ),\n                roomsCount: data.roomsCount,\n                location: {\n                    latitude:  data.location.latitude,\n                    longitude: data.location.longitude,\n                }\n            };\n\n        }\n    }\n};\n\n"]}]}