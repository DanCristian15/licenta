{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/data/response/normalizeTicketList.js","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/data/response/normalizeTicketList.js","mtime":1645805363886},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0IHsgbm9ybWFsaXplVGlja2V0IH0gZnJvbSAnQGNvcmUvZGF0YS9yZXNwb25zZS9ub3JtYWxpemVUaWNrZXQnOwppbXBvcnQgeyBub3JtYWxpemVPZmZlciB9IGZyb20gJ0Bjb3JlL2RhdGEvcmVzcG9uc2Uvbm9ybWFsaXplT2ZmZXInOwppbXBvcnQgeyBub3JtYWxpemVUaWNrZXRUeXBlIH0gZnJvbSAnQGNvcmUvZGF0YS9yZXNwb25zZS9ub3JtYWxpemVUaWNrZXRUeXBlJzsKZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZVRpY2tldHNMaXN0KGRhdGEpIHsKICByZXR1cm4gewogICAgZXZlbnREZXRhaWxzOiB7CiAgICAgIHZlbnVlTWFwVXJsOiBkYXRhLmV2ZW50RGV0YWlscy52ZW51ZU1hcFVybCwKICAgICAgdmVudWVNYXBXaXRoTGFiZWxzVXJsOiBkYXRhLmV2ZW50RGV0YWlscy52ZW51ZU1hcFdpdGhMYWJlbHNVcmwKICAgIH0gfHwgbnVsbCwKICAgIHRpY2tldHM6IHsKICAgICAgaXRlbXM6IEFycmF5LmlzQXJyYXkoZGF0YS50aWNrZXRzLml0ZW1zKSA/IGRhdGEudGlja2V0cy5pdGVtcy5tYXAoZnVuY3Rpb24gKHRpY2tldCkgewogICAgICAgIHJldHVybiBub3JtYWxpemVUaWNrZXQodGlja2V0KTsKICAgICAgfSkgOiBbXSwKICAgICAgdG90YWxDb3VudDogZGF0YS50aWNrZXRzLnRvdGFsQ291bnQgfHwgMAogICAgfSwKICAgIG9mZmVyczogQXJyYXkuaXNBcnJheShkYXRhLm9mZmVycykgPyBkYXRhLm9mZmVycy5tYXAoZnVuY3Rpb24gKG9mZmVyKSB7CiAgICAgIHJldHVybiBub3JtYWxpemVPZmZlcihvZmZlcik7CiAgICB9KSA6IFtdLAogICAgdGlja2V0VHlwZXM6IEFycmF5LmlzQXJyYXkoZGF0YS50aWNrZXRUeXBlcykgPyBkYXRhLnRpY2tldFR5cGVzLm1hcChmdW5jdGlvbiAodGlja2V0VHlwZSkgewogICAgICByZXR1cm4gbm9ybWFsaXplVGlja2V0VHlwZSh0aWNrZXRUeXBlKTsKICAgIH0pIDogW10KICB9Owp9"},{"version":3,"sources":["/Users/cristiandan/Desktop/proiect-licenta-front/src/core/data/response/normalizeTicketList.js"],"names":["normalizeTicket","normalizeOffer","normalizeTicketType","normalizeTicketsList","data","eventDetails","venueMapUrl","venueMapWithLabelsUrl","tickets","items","Array","isArray","map","ticket","totalCount","offers","offer","ticketTypes","ticketType"],"mappings":";AAAA,SAASA,eAAT,QAAgC,qCAAhC;AACA,SAASC,cAAT,QAA+B,oCAA/B;AACA,SAASC,mBAAT,QAAoC,yCAApC;AAEA,OAAO,SAASC,oBAAT,CAA+BC,IAA/B,EAAsC;AACzC,SAAO;AACHC,IAAAA,YAAY,EAAE;AACVC,MAAAA,WAAW,EAAEF,IAAI,CAACC,YAAL,CAAkBC,WADrB;AAEVC,MAAAA,qBAAqB,EAAEH,IAAI,CAACC,YAAL,CAAkBE;AAF/B,SAGT,IAJF;AAKHC,IAAAA,OAAO,EAAE;AACLC,MAAAA,KAAK,EAAEC,KAAK,CAACC,OAAN,CAAeP,IAAI,CAACI,OAAL,CAAaC,KAA5B,IAAsCL,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAmBG,GAAnB,CAAwB,UAAAC,MAAM;AAAA,eAAIb,eAAe,CAAEa,MAAF,CAAnB;AAAA,OAA9B,CAAtC,GAAsG,EADxG;AAELC,MAAAA,UAAU,EAAEV,IAAI,CAACI,OAAL,CAAaM,UAAb,IAA2B;AAFlC,KALN;AASHC,IAAAA,MAAM,EAAEL,KAAK,CAACC,OAAN,CAAeP,IAAI,CAACW,MAApB,IAA+BX,IAAI,CAACW,MAAL,CAAYH,GAAZ,CAAiB,UAAAI,KAAK;AAAA,aAAIf,cAAc,CAAEe,KAAF,CAAlB;AAAA,KAAtB,CAA/B,GAAqF,EAT1F;AAUHC,IAAAA,WAAW,EAAEP,KAAK,CAACC,OAAN,CAAeP,IAAI,CAACa,WAApB,IAAoCb,IAAI,CAACa,WAAL,CAAiBL,GAAjB,CAAsB,UAAAM,UAAU;AAAA,aAAIhB,mBAAmB,CAAEgB,UAAF,CAAvB;AAAA,KAAhC,CAApC,GAA8G;AAVxH,GAAP;AAYH","sourcesContent":["import { normalizeTicket } from '@core/data/response/normalizeTicket';\nimport { normalizeOffer } from '@core/data/response/normalizeOffer';\nimport { normalizeTicketType } from '@core/data/response/normalizeTicketType';\n\nexport function normalizeTicketsList( data ) {\n    return {\n        eventDetails: {\n            venueMapUrl: data.eventDetails.venueMapUrl,\n            venueMapWithLabelsUrl: data.eventDetails.venueMapWithLabelsUrl,\n        } || null,\n        tickets: {\n            items: Array.isArray( data.tickets.items ) ? data.tickets.items.map( ticket => normalizeTicket( ticket ) ) : [],\n            totalCount: data.tickets.totalCount || 0\n        },\n        offers: Array.isArray( data.offers ) ? data.offers.map( offer => normalizeOffer( offer ) ) : [],\n        ticketTypes: Array.isArray( data.ticketTypes ) ? data.ticketTypes.map( ticketType => normalizeTicketType( ticketType ) ) : []\n    };\n}"]}]}