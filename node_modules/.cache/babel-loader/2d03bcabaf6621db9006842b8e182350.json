{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/modules/hotel/stores/addHotelReservationState/addHotelReservationStateHotels.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/modules/hotel/stores/addHotelReservationState/addHotelReservationStateHotels.js","mtime":1645805365963},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/modules/hotel/stores/addHotelReservationState/addHotelReservationStateHotels.js"],"names":["Vue","isEqual","HotelReservationModel","apiHotelService","searchHotelReservationConstants","mutationTypes","LogService","STORE_NAME","Guests","loadPageCancelRequest","name","namespaced","state","loading","loadingCounter","list","allItemsLoaded","timestamp","pageSize","DEFAULT","realOffset","filters","location","latitude","longitude","range","startDateTime","endDateTime","guests","roomsCount","mutations","START_LOADING","STOP_LOADING","APPEND_TO_LIST","data","Date","getTime","map","item","model","transform","selectedRoom","rooms","value","SET_ALL_ITEMS_LOADED","UPDATE_FILTERS","CLEAR_LIST","CLEAR","id","index","findIndex","set","actions","loadPage","commit","refresh","api","cancel","getCancelRequest","hotels","get","offset","length","limit","startDate","endDate","cancelToken","token","response","success","items","pop","debug","loadOne","dataProvider","one","selectRoom","clear"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport isEqual from 'lodash/isEqual';\nimport HotelReservationModel from '@tenant/app/models/HotelReservationModel';\nimport apiHotelService from '@tenant/app/api/apiHotelService';\nimport searchHotelReservationConstants from '@core/utils/constants/searchHotelReservation';\nimport mutationTypes from '@core/helpers/storeFactories/helpers/mutationTypes';\nimport LogService from '@services/LogService';\n\nconst STORE_NAME = 'hotels';\nimport Guests from '@/tenants/ticketmaster/app/models/GuestsModel';\n\nlet loadPageCancelRequest;\n\nexport default {\n    name: STORE_NAME,\n    namespaced: true,\n    state: {\n        loading:                    false,\n        loadingCounter              : 0,\n        list:                       [ ],\n        allItemsLoaded:             false,\n        timestamp:                  0,\n        pageSize:                   searchHotelReservationConstants.DEFAULT.pageSize,\n        realOffset:                     0,\n        filters: {\n            location: {\n                latitude:                   0,\n                longitude:                  0,\n            },\n            range:                      searchHotelReservationConstants.DEFAULT.range,\n            startDateTime:              null,\n            endDateTime:                null,\n            guests:                     new Guests( ),\n            roomsCount:                 1\n        }\n    },\n    mutations: {\n        [ mutationTypes.START_LOADING ] ( state ) {\n            state.loadingCounter = state.loadingCounter + 1;\n            state.loading = !!state.loadingCounter;\n        },\n        [ mutationTypes.STOP_LOADING ] ( state ) {\n            state.loadingCounter = state.loadingCounter > 0 ? state.loadingCounter - 1 : 0;\n            state.loading = !!state.loadingCounter;\n        },\n        [ mutationTypes.APPEND_TO_LIST ] ( state, { data } ) {\n            state.timestamp = new Date( ).getTime( );\n            state.list = [\n                ...state.list,\n                ...data.map( item => {\n                    const model = new HotelReservationModel( ).transform( item );\n                    model.selectedRoom = model.rooms[ 0 ];\n\n                    return model;\n                } )\n            ];\n        },\n        setRealOffset ( state, value ) {\n            state.realOffset = value;\n        },\n        [ mutationTypes.SET_ALL_ITEMS_LOADED ] ( state, value ) {\n            state.allItemsLoaded = value;\n        },\n        [ mutationTypes.UPDATE_FILTERS ] ( state, filters ) {\n            state.filters = { ...filters };\n        },\n        [ mutationTypes.CLEAR_LIST ] ( state ) {\n            state.timestamp = null;\n            state.list = [ ];\n            state.allItemsLoaded = false;\n        },\n        [ mutationTypes.CLEAR ]( state ) {\n            state.loading = false;\n            state.loadingCounter = 0;\n            state.list = [ ],\n            state.allItemsLoaded = false,\n            state.timestamp =          0,\n            state.pageSize =           searchHotelReservationConstants.DEFAULT.pageSize,\n            state.realOffset =          0,\n            state.filters = {\n                location: {\n                    latitude:           0,\n                    longitude:          0,\n                },\n                range:              searchHotelReservationConstants.DEFAULT.range,\n                startDateTime:      null,\n                endDateTime:        null,\n                guests:             new Guests( ),\n                roomsCount:         1\n            };\n        },\n        selectRoom( state, { id, value } ) {\n            const index = state.list.findIndex( item => item.id === id );\n\n            if ( index !== -1 ) {\n                Vue.set( state.list, index, {\n                    ...state.list[ index ],\n                    selectedRoom: value\n                } );\n            }\n        }\n    },\n    actions: {\n        loadPage: async ( { commit, state }, { refresh = false, filters = { } } ) => {\n            commit( mutationTypes.START_LOADING );\n            const api = await apiHotelService( '' );\n\n            if ( refresh || !isEqual( { ...filters }, { ...state.filters } ) ) {\n                !loadPageCancelRequest || loadPageCancelRequest.cancel( );\n                commit( mutationTypes.CLEAR_LIST );\n                commit( mutationTypes.UPDATE_FILTERS, filters );\n                commit( 'setRealOffset', 0 );\n            }\n            loadPageCancelRequest = api.getCancelRequest( );\n\n            const response = await api.hotels.get(\n                {\n                    offset:         state.realOffset || state.list.length,\n                    limit:          state.pageSize + 1\n                },\n                {\n                    startDate:      filters.startDateTime,\n                    endDate:        filters.endDateTime,\n                    longitude:      filters.location.longitude,\n                    latitude:       filters.location.latitude,\n                    guests:         filters.guests,\n                    roomsCount:     filters.roomsCount,\n                    range:          filters.range\n                },\n                {\n                    cancelToken: loadPageCancelRequest.token\n                }\n            );\n\n            if ( response.success ) {\n                const list = response.data.items;\n                if ( list.length < state.pageSize + 1 ) {\n                    commit( mutationTypes.SET_ALL_ITEMS_LOADED, true );\n                } else {\n                    list.pop( );\n                }\n                commit( mutationTypes.APPEND_TO_LIST, { data: list } );\n                commit( mutationTypes.STOP_LOADING );\n                commit( 'setRealOffset', response.data.offset );\n                return state.list;\n            } else {\n                LogService.debug( 'problem loading hotels' );\n                commit( mutationTypes.STOP_LOADING );\n                return response;\n            }\n        },\n        loadOne: async ( { commit }, { filters = { }, id, dataProvider } ) => {\n            commit( mutationTypes.START_LOADING );\n            const api = await apiHotelService( '' );\n            const response = await api.hotels.one(\n                id,\n                {\n                    startDate:      filters.startDateTime,\n                    endDate:        filters.endDateTime,\n                    guests:         filters.guests,\n                    roomsCount:     filters.roomsCount,\n                },\n                dataProvider\n            );\n            if ( response.success ) {\n                commit( mutationTypes.STOP_LOADING );\n                const model = new HotelReservationModel( ).transform( response.data );\n                model.selectedRoom = model.rooms[ 0 ];\n\n                return model;\n            } else {\n                LogService.debug( 'problem loading hotels' );\n                commit( mutationTypes.STOP_LOADING );\n                return null;\n            }\n        },\n        selectRoom( { commit }, { id, value } ) {\n            commit( 'selectRoom', { id, value } );\n        },\n        clear( { commit } ) {\n            commit( mutationTypes.CLEAR );\n        }\n    }\n};\n"]}]}