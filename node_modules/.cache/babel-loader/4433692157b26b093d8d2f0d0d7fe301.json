{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/api/apiMapLocation.js","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/api/apiMapLocation.js","mtime":1645805363868},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/cristiandan/Desktop/proiect-licenta-front/src/core/api/apiMapLocation.js"],"names":["Vue","i18next","apiMapLocationConstants","LogService","serviceProvider","loadScripts","loadBundle","Promise","resolve","loadScript","CONFIG","HERE","scriptBundleUrl","async","then","catch","respBundle","getService","api","window","H","service","Platform","apiKey","city","getByPosition","latitude","longitude","getGeocodingService","reverseGeocode","mode","prox","additionaldata","response","Response","View","length","Result","Location","Address","City","address","data","name","countryCode","AdditionalData","find","item","key","value","State","stateCode","success","message","t","error","debug"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport i18next from 'i18next';\nimport apiMapLocationConstants from '@core/utils/constants/apiMapLocation';\nimport LogService from '@services/LogService';\n\nconst serviceProvider = {\n    loadScripts: async ( ) => {\n        const loadBundle = ( ) => {\n            return new Promise( ( resolve ) => {\n                Vue.loadScript( apiMapLocationConstants.CONFIG.HERE.scriptBundleUrl, 'module', { async: false } )\n                    .then( ( ) => {\n                        resolve( true );\n                    } )\n                    .catch( ( ) => resolve( false ) );\n            } );\n        };\n\n        const respBundle = await loadBundle( );\n        if ( respBundle ) {\n            return true;\n        }\n\n        return false;\n    },\n    getService: async ( ) => {\n        if ( await serviceProvider.loadScripts() ) {\n            const api = window.H;\n\n            if ( api ) {\n                return new api.service.Platform( {\n                    'apikey': apiMapLocationConstants.CONFIG.HERE.apiKey\n                } );\n            }\n        }\n\n        return false;\n\n    }\n};\n\n\nexport default {\n    city: {\n        getByPosition: async ( latitude, longitude ) => {\n            let service = await serviceProvider.getService( );\n\n            if ( service ) {\n                return new Promise( ( resolve ) => {\n                    service.getGeocodingService( ).reverseGeocode(\n                        {\n                            mode: 'retrieveAddresses',\n                            'maxresults': 1,\n                            prox: `${latitude},${longitude}`,\n                            additionaldata:'Country2,true',\n\n                        }, ( response ) => {\n                            try {\n                                if ( response.Response.View.length\n                                    && response.Response.View[0].Result.length === 1\n                                    && response.Response.View[0].Result[0].Location.Address.City ) {\n                                    const address = response.Response.View[0].Result[0].Location.Address;\n                                    const data = {\n                                        name: address.City,\n                                        countryCode: address.AdditionalData.find( item => item.key === 'Country2' ).value\n                                    };\n\n                                    !address.State || ( data.stateCode = address.State );\n\n                                    resolve( {\n                                        success: true,\n                                        data\n                                    } );\n                                } else {\n                                    resolve( {\n                                        success: false,\n                                        message: i18next.t( '_common:messages.apiMapLocationError' )\n                                    } );\n                                }\n                            } catch ( error ) {\n                                // eslint-disable-next-line no-console\n                                LogService.debug( 'problems retriving city from apiLocation ' + error );\n                                resolve( {\n                                    success: false,\n                                    message: i18next.t( '_common:messages.apiMapLocationError' )\n                                } );\n                            }\n                        }, error => {\n                            // eslint-disable-next-line no-console\n                            LogService.debug( 'problems retriving city from apiLocation ' + error );\n                            resolve( {\n                                success: false,\n                                message: i18next.t( '_common:messages.apiMapLocationContactingError' )\n                            } );\n                        }\n                    );\n                } );\n\n            }\n\n            return {\n                success: false,\n                message: i18next.t( '_common:messages.apiMapLocationContactingError' )\n            };\n        }\n    }\n};\n"]}]}