{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/api/apiHotelService.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/api/apiHotelService.js","mtime":1645805365908},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2NyaXN0aWFuZGFuL0Rlc2t0b3AvbGlmZXN0eWxlLXVpL25vZGVfbW9kdWxlcy9AdnVlL2JhYmVsLXByZXNldC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvY3Jpc3RpYW5kYW4vRGVza3RvcC9saWZlc3R5bGUtdWkvbm9kZV9tb2R1bGVzL0B2dWUvYmFiZWwtcHJlc2V0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBHdWVzdHNNb2RlbCBmcm9tICdAdGVuYW50L2FwcC9tb2RlbHMvR3Vlc3RzTW9kZWwnOwppbXBvcnQgcXMgZnJvbSAncXMnOwppbXBvcnQgYXBpQ29uc3RhbnRzIGZyb20gJ0Bjb3JlL3V0aWxzL2NvbnN0YW50cy9hcGknOwppbXBvcnQgZmV0Y2ggZnJvbSAnQGNvcmUvdXRpbHMvZmV0Y2gnOwppbXBvcnQgeyBnZXREZWZhdWx0R2V0UGFyYW1zIGFzIGFwaVV0aWxzR2V0RGVmYXVsdEdldFBhcmFtcyB9IGZyb20gJ0Bjb3JlL3V0aWxzL2FwaVV0aWxzJzsKaW1wb3J0IHsgY3JlYXRlQXBpU2VydmljZSwgZmV0Y2hBUEkgfSBmcm9tICdAY29yZS9hcGkvX3V0aWxzJzsKaW1wb3J0IHsgbm9ybWFsaXplUXVlcnlQYXJhbXMgfSBmcm9tICcuL191dGlscy5qcyc7CnZhciBkZWZhdWx0R2V0UGFyYW0gPSBhcGlVdGlsc0dldERlZmF1bHRHZXRQYXJhbXMoKTsKCnZhciBwYXJhbXNTZXJpYWxpemVyRm4gPSBmdW5jdGlvbiBwYXJhbXNTZXJpYWxpemVyRm4ocGFyYW1zKSB7CiAgcmV0dXJuIHFzLnN0cmluZ2lmeShwYXJhbXMsIHsKICAgIGFycmF5Rm9ybWF0OiAncmVwZWF0JywKICAgIGluZGljZXM6IGZhbHNlCiAgfSk7Cn07Cgp2YXIgYXBpID0gewogIGdldENhbmNlbFJlcXVlc3Q6IGZldGNoLmdldENhbmNlbFJlcXVlc3QsCiAgaG90ZWxzOiB7CiAgICBnZXQ6IGZ1bmN0aW9uIGdldChfcmVmLCBfcmVmMikgewogICAgICB2YXIgX3JlZiRsaW1pdCA9IF9yZWYubGltaXQsCiAgICAgICAgICBsaW1pdCA9IF9yZWYkbGltaXQgPT09IHZvaWQgMCA/IGRlZmF1bHRHZXRQYXJhbS5saW1pdCA6IF9yZWYkbGltaXQsCiAgICAgICAgICBfcmVmJG9mZnNldCA9IF9yZWYub2Zmc2V0LAogICAgICAgICAgb2Zmc2V0ID0gX3JlZiRvZmZzZXQgPT09IHZvaWQgMCA/IGRlZmF1bHRHZXRQYXJhbS5vZmZzZXQgOiBfcmVmJG9mZnNldDsKICAgICAgdmFyIF9yZWYyJHN0YXJ0RGF0ZSA9IF9yZWYyLnN0YXJ0RGF0ZSwKICAgICAgICAgIHN0YXJ0RGF0ZSA9IF9yZWYyJHN0YXJ0RGF0ZSA9PT0gdm9pZCAwID8gJycgOiBfcmVmMiRzdGFydERhdGUsCiAgICAgICAgICBfcmVmMiRlbmREYXRlID0gX3JlZjIuZW5kRGF0ZSwKICAgICAgICAgIGVuZERhdGUgPSBfcmVmMiRlbmREYXRlID09PSB2b2lkIDAgPyAnJyA6IF9yZWYyJGVuZERhdGUsCiAgICAgICAgICBfcmVmMiRndWVzdHMgPSBfcmVmMi5ndWVzdHMsCiAgICAgICAgICBndWVzdHMgPSBfcmVmMiRndWVzdHMgPT09IHZvaWQgMCA/IG5ldyBHdWVzdHNNb2RlbCgpIDogX3JlZjIkZ3Vlc3RzLAogICAgICAgICAgcm9vbXNDb3VudCA9IF9yZWYyLnJvb21zQ291bnQsCiAgICAgICAgICBsYXRpdHVkZSA9IF9yZWYyLmxhdGl0dWRlLAogICAgICAgICAgbG9uZ2l0dWRlID0gX3JlZjIubG9uZ2l0dWRlLAogICAgICAgICAgcmFuZ2UgPSBfcmVmMi5yYW5nZTsKICAgICAgdmFyIGNvbmZpZyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDoge307CiAgICAgIHJldHVybiBmZXRjaEFQSS5nZXQoIiIuY29uY2F0KGFwaUNvbnN0YW50cy5CQVNFX1VSTCwgIi9hcGkvaG90ZWxzIiksIG5vcm1hbGl6ZVF1ZXJ5UGFyYW1zKHsKICAgICAgICBzdGFydERhdGU6IHN0YXJ0RGF0ZSwKICAgICAgICBlbmREYXRlOiBlbmREYXRlLAogICAgICAgIGd1ZXN0czogZ3Vlc3RzLAogICAgICAgIHJvb21zQ291bnQ6IHJvb21zQ291bnQsCiAgICAgICAgbGF0aXR1ZGU6IGxhdGl0dWRlLAogICAgICAgIGxvbmdpdHVkZTogbG9uZ2l0dWRlLAogICAgICAgIHJhbmdlOiByYW5nZSwKICAgICAgICBsaW1pdDogbGltaXQsCiAgICAgICAgb2Zmc2V0OiBvZmZzZXQKICAgICAgfSksIHt9LCBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGNvbmZpZyksIHt9LCB7CiAgICAgICAgcGFyYW1zU2VyaWFsaXplcjogcGFyYW1zU2VyaWFsaXplckZuCiAgICAgIH0pKTsKICAgIH0sCiAgICBvbmU6IGZ1bmN0aW9uIG9uZShpZCwgX3JlZjMsIGRhdGFQcm92aWRlcikgewogICAgICB2YXIgX3JlZjMkc3RhcnREYXRlID0gX3JlZjMuc3RhcnREYXRlLAogICAgICAgICAgc3RhcnREYXRlID0gX3JlZjMkc3RhcnREYXRlID09PSB2b2lkIDAgPyAnJyA6IF9yZWYzJHN0YXJ0RGF0ZSwKICAgICAgICAgIF9yZWYzJGVuZERhdGUgPSBfcmVmMy5lbmREYXRlLAogICAgICAgICAgZW5kRGF0ZSA9IF9yZWYzJGVuZERhdGUgPT09IHZvaWQgMCA/ICcnIDogX3JlZjMkZW5kRGF0ZSwKICAgICAgICAgIF9yZWYzJGd1ZXN0cyA9IF9yZWYzLmd1ZXN0cywKICAgICAgICAgIGd1ZXN0cyA9IF9yZWYzJGd1ZXN0cyA9PT0gdm9pZCAwID8gbmV3IEd1ZXN0c01vZGVsKCkgOiBfcmVmMyRndWVzdHMsCiAgICAgICAgICByb29tc0NvdW50ID0gX3JlZjMucm9vbXNDb3VudDsKICAgICAgcmV0dXJuIGZldGNoQVBJLmdldCgiIi5jb25jYXQoYXBpQ29uc3RhbnRzLkJBU0VfVVJMLCAiL2FwaS9ob3RlbHMvIikuY29uY2F0KGlkKSwgbm9ybWFsaXplUXVlcnlQYXJhbXMoewogICAgICAgIHN0YXJ0RGF0ZTogc3RhcnREYXRlLAogICAgICAgIGVuZERhdGU6IGVuZERhdGUsCiAgICAgICAgZ3Vlc3RzOiBndWVzdHMsCiAgICAgICAgcm9vbXNDb3VudDogcm9vbXNDb3VudCwKICAgICAgICBleHRlcm5hbFN5c3RlbTogZGF0YVByb3ZpZGVyCiAgICAgIH0pLCB7fSwgewogICAgICAgIHBhcmFtc1NlcmlhbGl6ZXI6IHBhcmFtc1NlcmlhbGl6ZXJGbgogICAgICB9KTsKICAgIH0KICB9Cn07CmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChfeCkgewogIHJldHVybiBfcmVmNC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfcmVmNCgpIHsKICBfcmVmNCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShjb25maWcpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgY3JlYXRlQXBpU2VydmljZShjb25maWcsIGFwaSkpOwoKICAgICAgICAgIGNhc2UgMToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CiAgcmV0dXJuIF9yZWY0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0="},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/api/apiHotelService.js"],"names":["GuestsModel","qs","apiConstants","fetch","getDefaultGetParams","apiUtilsGetDefaultGetParams","createApiService","fetchAPI","normalizeQueryParams","defaultGetParam","paramsSerializerFn","params","stringify","arrayFormat","indices","api","getCancelRequest","hotels","get","limit","offset","startDate","endDate","guests","roomsCount","latitude","longitude","range","config","BASE_URL","paramsSerializer","one","id","dataProvider","externalSystem"],"mappings":"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","sourcesContent":["import GuestsModel from '@tenant/app/models/GuestsModel';\nimport qs from 'qs';\nimport apiConstants from '@core/utils/constants/api';\nimport fetch from '@core/utils/fetch';\nimport {\n    getDefaultGetParams as apiUtilsGetDefaultGetParams,\n} from '@core/utils/apiUtils';\nimport { createApiService, fetchAPI } from '@core/api/_utils';\nimport { normalizeQueryParams } from './_utils.js';\n\nconst defaultGetParam = apiUtilsGetDefaultGetParams( );\n\nconst paramsSerializerFn = params => qs.stringify( params, { arrayFormat: 'repeat', indices: false } );\n\nlet api = {\n    getCancelRequest: fetch.getCancelRequest,\n    hotels: {\n        get: (\n            {\n                limit = defaultGetParam.limit,\n                offset = defaultGetParam.offset,\n            },\n            {\n                startDate = '',\n                endDate = '',\n                guests = new GuestsModel( ),\n                roomsCount,\n                latitude,\n                longitude,\n                range\n            },\n            config = { } ) => {\n            return fetchAPI.get(\n                `${apiConstants.BASE_URL}/api/hotels`,\n                normalizeQueryParams( {\n                    startDate,\n                    endDate,\n                    guests,\n                    roomsCount,\n                    latitude,\n                    longitude,\n                    range,\n                    limit,\n                    offset\n                } ),\n                {},\n                {\n                    ...config,\n                    paramsSerializer: paramsSerializerFn\n                }\n            );\n        },\n        one: ( id, {\n            startDate = '',\n            endDate = '',\n            guests = new GuestsModel( ),\n            roomsCount\n        }, dataProvider ) => {\n            return fetchAPI.get(\n                `${apiConstants.BASE_URL}/api/hotels/${id}`,\n                normalizeQueryParams( {\n                    startDate,\n                    endDate,\n                    guests,\n                    roomsCount,\n                    externalSystem: dataProvider\n                } ),\n                {},\n                {\n                    paramsSerializer: paramsSerializerFn\n                }\n            );\n        }\n    }\n};\n\nexport default async function ( config ) {\n    return createApiService( config, api );\n}\n"]}]}