{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/store/modules/appState.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/store/modules/appState.js","mtime":1645805365973},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFNjaGVtYSBmcm9tICd2YWxpZGF0ZSc7CmltcG9ydCB7IGlzUHJvZHVjdGlvbiBhcyBlbnZpcm9ubWVudFV0aWxzSXNQcm9kdWN0aW9uIH0gZnJvbSAnQGNvcmUvdXRpbHMvZW52aXJvbm1lbnRVdGlscyc7CmltcG9ydCBMb2dTZXJ2aWNlIGZyb20gJ0BzZXJ2aWNlcy9Mb2dTZXJ2aWNlJzsKdmFyIFNUT1JFX05BTUUgPSAnYXBwU3RhdGUnOwp2YXIgREVGQVVMVF9TVEFURSA9IHsKICBsYW5ndWFnZTogJ2VuJywKICBsb2FkaW5nOiBmYWxzZSwKICBhcGk6IHsKICAgIHBhcnRuZXI6IG51bGwsCiAgICBtb2NrRGF0YTogZmFsc2UKICB9LAogIGZvcmNlRHluYW1pY0Zsb3c6IGZhbHNlCn07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiBTVE9SRV9OQU1FLAogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IERFRkFVTFRfU1RBVEUsCiAgZ2V0dGVyczogewogICAgaXNGb3JjZWREeW5hbWljRmxvdzogZnVuY3Rpb24gaXNGb3JjZWREeW5hbWljRmxvdyhzdGF0ZSkgewogICAgICB2YXIgaXNQcm9kdWN0aW9uID0gZW52aXJvbm1lbnRVdGlsc0lzUHJvZHVjdGlvbigpOwogICAgICByZXR1cm4gc3RhdGUuZm9yY2VEeW5hbWljRmxvdyAmJiAhaXNQcm9kdWN0aW9uOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBzZXRMYW5ndWFnZTogZnVuY3Rpb24gc2V0TGFuZ3VhZ2Uoc3RhdGUsIGxhbmd1YWdlKSB7CiAgICAgIHN0YXRlLmxhbmd1YWdlID0gbGFuZ3VhZ2U7CiAgICB9LAogICAgc2V0QXBpUGFydG5lcjogZnVuY3Rpb24gc2V0QXBpUGFydG5lcihzdGF0ZSwgcGFydG5lcikgewogICAgICBzdGF0ZS5hcGkucGFydG5lciA9IHBhcnRuZXI7CiAgICB9LAogICAgc2V0QXBpTW9ja0RhdGE6IGZ1bmN0aW9uIHNldEFwaU1vY2tEYXRhKHN0YXRlLCB2YWx1ZSkgewogICAgICBzdGF0ZS5hcGkubW9ja0RhdGEgPSB2YWx1ZTsKICAgIH0sCiAgICBzZXRMb2FkaW5nOiBmdW5jdGlvbiBzZXRMb2FkaW5nKHN0YXRlLCBsb2FkaW5nKSB7CiAgICAgIHN0YXRlLmxvYWRpbmcgPSBsb2FkaW5nOwogICAgfSwKICAgIHNldEZvcmNlRHluYW1pY0Zsb3c6IGZ1bmN0aW9uIHNldEZvcmNlRHluYW1pY0Zsb3coc3RhdGUsIHZhbHVlKSB7CiAgICAgIHN0YXRlLmZvcmNlRHluYW1pY0Zsb3cgPSB2YWx1ZTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIHNldExhbmd1YWdlOiBmdW5jdGlvbiBzZXRMYW5ndWFnZShfcmVmLCBsYW5ndWFnZSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgIGNvbW1pdCgnc2V0TGFuZ3VhZ2UnLCBsYW5ndWFnZSk7CiAgICB9LAogICAgc2V0QXBpUGFydG5lcjogZnVuY3Rpb24gc2V0QXBpUGFydG5lcihfcmVmMiwgcGFydG5lcikgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICBjb21taXQoJ3NldEFwaVBhcnRuZXInLCBwYXJ0bmVyKTsKICAgIH0sCiAgICBzZXRBcGlNb2NrRGF0YTogZnVuY3Rpb24gc2V0QXBpTW9ja0RhdGEoX3JlZjMsIHZhbHVlKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgIGNvbW1pdCgnc2V0QXBpTW9ja0RhdGEnLCB2YWx1ZSk7CiAgICB9LAogICAgc2V0TG9hZGluZzogZnVuY3Rpb24gc2V0TG9hZGluZyhfcmVmNCkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgICB2YXIgbG9hZGluZyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogdHJ1ZTsKICAgICAgY29tbWl0KCdzZXRMb2FkaW5nJywgbG9hZGluZyk7CiAgICB9LAogICAgc2V0Rm9yY2VEeW5hbWljRmxvdzogZnVuY3Rpb24gc2V0Rm9yY2VEeW5hbWljRmxvdyhfcmVmNSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjUuY29tbWl0OwogICAgICB2YXIgdmFsdWUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHRydWU7CiAgICAgIGNvbW1pdCgnc2V0Rm9yY2VEeW5hbWljRmxvdycsIHZhbHVlKTsKICAgIH0KICB9LAogIF9wZXJzaXN0ZW50OiB7CiAgICBnZXREYXRhVG9TYXZlOiBmdW5jdGlvbiBnZXREYXRhVG9TYXZlKHN0YXRlKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgbGFuZ3VhZ2U6IHN0YXRlW1NUT1JFX05BTUVdLmxhbmd1YWdlLAogICAgICAgIGFwaTogewogICAgICAgICAgbW9ja0RhdGE6IHN0YXRlW1NUT1JFX05BTUVdLmFwaS5tb2NrRGF0YQogICAgICAgIH0sCiAgICAgICAgZm9yY2VEeW5hbWljRmxvdzogc3RhdGVbU1RPUkVfTkFNRV0uZm9yY2VEeW5hbWljRmxvdwogICAgICB9OwogICAgfSwKICAgIGdldERhdGFUb0xvYWQ6IGZ1bmN0aW9uIGdldERhdGFUb0xvYWQoZGF0YSkgewogICAgICB0cnkgewogICAgICAgIHZhciBzY2hlbWEgPSBuZXcgU2NoZW1hKHsKICAgICAgICAgIGxhbmd1YWdlOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUKICAgICAgICAgIH0sCiAgICAgICAgICBhcGk6IHsKICAgICAgICAgICAgbW9ja0RhdGE6IHsKICAgICAgICAgICAgICB0eXBlOiAnYm9vbGVhbicsCiAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGZvcmNlRHluYW1pY0Zsb3c6IHsKICAgICAgICAgICAgdHlwZTogJ2Jvb2xlYW4nLAogICAgICAgICAgICByZXF1aXJlZDogZmFsc2UKICAgICAgICAgIH0KICAgICAgICB9KTsKCiAgICAgICAgaWYgKCFkYXRhIHx8IHNjaGVtYS52YWxpZGF0ZShkYXRhKS5sZW5ndGgpIHsKICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBzY2hlbWEgZm9yIGFwcFN0YXRlIHN0b3JlJyArIEpTT04uc3RyaW5naWZ5KHNjaGVtYS52YWxpZGF0ZShkYXRhKSkpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGRhdGE7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBMb2dTZXJ2aWNlLmVycm9yKCJWdWV4IHN0YXRlIGNhbm5vdCBiZSBsb2FkZWQgLSBBcHBTdGF0ZTogIi5jb25jYXQoZS5tZXNzYWdlKSk7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/store/modules/appState.js"],"names":["Schema","isProduction","environmentUtilsIsProduction","LogService","STORE_NAME","DEFAULT_STATE","language","loading","api","partner","mockData","forceDynamicFlow","name","namespaced","state","getters","isForcedDynamicFlow","mutations","setLanguage","setApiPartner","setApiMockData","value","setLoading","setForceDynamicFlow","actions","commit","_persistent","getDataToSave","getDataToLoad","data","schema","type","String","required","validate","length","Error","JSON","stringify","e","error","message"],"mappings":"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","sourcesContent":["import Schema from 'validate';\nimport {\n    isProduction as environmentUtilsIsProduction\n} from '@core/utils/environmentUtils';\nimport LogService from '@services/LogService';\n\nconst STORE_NAME = 'appState';\n\nconst DEFAULT_STATE = {\n    language: 'en',\n    loading: false,\n    api: {\n        partner: null,\n        mockData: false\n    },\n    forceDynamicFlow: false\n};\n\nexport default {\n    name: STORE_NAME,\n    namespaced: true,\n    state: DEFAULT_STATE,\n    getters: {\n        isForcedDynamicFlow: ( state ) => {\n            const isProduction = environmentUtilsIsProduction();\n\n            return state.forceDynamicFlow && !isProduction;\n        }\n    },\n    mutations: {\n        setLanguage( state, language ) {\n            state.language = language;\n        },\n        setApiPartner( state, partner ) {\n            state.api.partner = partner;\n        },\n        setApiMockData( state, value ) {\n            state.api.mockData = value;\n        },\n        setLoading( state, loading ) {\n            state.loading = loading;\n        },\n        setForceDynamicFlow ( state, value ) {\n            state.forceDynamicFlow = value;\n        }\n    },\n    actions: {\n        setLanguage( { commit }, language ) {\n            commit( 'setLanguage', language );\n        },\n        setApiPartner( { commit }, partner ) {\n            commit( 'setApiPartner', partner );\n        },\n        setApiMockData( { commit }, value ) {\n            commit( 'setApiMockData', value );\n        },\n        setLoading( { commit }, loading = true ) {\n            commit ( 'setLoading', loading );\n        },\n        setForceDynamicFlow( { commit }, value = true ) {\n            commit ( 'setForceDynamicFlow', value );\n        },\n    },\n    _persistent: {\n        getDataToSave: ( state ) => {\n            return {\n                language: state[STORE_NAME].language,\n                api: {\n                    mockData: state[STORE_NAME].api.mockData\n                },\n                forceDynamicFlow: state[STORE_NAME].forceDynamicFlow\n            };\n        },\n        getDataToLoad: ( data ) => {\n            try {\n                const schema = new Schema( {\n                    language: {\n                        type: String,\n                        required: true,\n                    },\n                    api: {\n                        mockData: {\n                            type: 'boolean',\n                            required: true\n                        }\n                    },\n                    forceDynamicFlow: {\n                        type: 'boolean',\n                        required: false\n                    }\n                } );\n\n                if ( !data || schema.validate( data ).length ) {\n                    throw( new Error( 'Invalid schema for appState store' + JSON.stringify( schema.validate( data ) ) ) );\n                }\n\n                return data;\n            } catch ( e ) {\n                LogService.error( `Vuex state cannot be loaded - AppState: ${ e.message }` );\n                return null;\n            }\n        }\n    }\n};\n"]}]}