{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/core/services/LogService.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/services/LogService.js","mtime":1645805363913},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqLwoKLyoqCiAqIFRPRE8gKCBpb251dHQgKQogKiBJZiB5b3Ugd2FudCB0byBzdXBwcmVzcyBiYXNlIG9uIHRoZSBlbnZpcm9ubWVudCwgd2Ugc2hvdWxkIHNob3cKICogdGhlIGNvbnNvbGUgZnJvbSBQV0EgU1csIHNvIHRoZSBsYXN0IGFyZ3VtZW50cyBvZiB0aGlzIGZ1bmN0aW9uIHNob3VsZCBiZQogKiB0aHJlYWQgYXMgYW4gImZvcmNlIiBwYXJhbWV0ZXIuCiAqLwppbXBvcnQgYXBwQ29uc3RhbnRzIGZyb20gJ0Bjb3JlL3V0aWxzL2NvbnN0YW50cy9hcHAnOwpleHBvcnQgZGVmYXVsdCB7CiAgbG9nOiBmdW5jdGlvbiBsb2coKSB7CiAgICBhcHBDb25zdGFudHMuU1VQUFJFU1NfTE9HUyB8fCBjb25zb2xlLmxvZy5hcHBseShudWxsLCBhcmd1bWVudHMpOwogIH0sCiAgZGVidWc6IGZ1bmN0aW9uIGRlYnVnKCkgewogICAgYXBwQ29uc3RhbnRzLlNVUFBSRVNTX0xPR1MgfHwgY29uc29sZS5kZWJ1Zy5hcHBseShudWxsLCBhcmd1bWVudHMpOwogIH0sCiAgd2FybjogZnVuY3Rpb24gd2FybigpIHsKICAgIGFwcENvbnN0YW50cy5TVVBQUkVTU19MT0dTIHx8IGNvbnNvbGUud2Fybi5hcHBseShudWxsLCBhcmd1bWVudHMpOwogIH0sCiAgZXJyb3I6IGZ1bmN0aW9uIGVycm9yKCkgewogICAgYXBwQ29uc3RhbnRzLlNVUFBSRVNTX0xPR1MgfHwgY29uc29sZS5lcnJvci5hcHBseShudWxsLCBhcmd1bWVudHMpOwogIH0sCiAgY3JpdGljYWw6IGZ1bmN0aW9uIGNyaXRpY2FsKCkgewogICAgYXBwQ29uc3RhbnRzLlNVUFBSRVNTX0xPR1MgfHwgY29uc29sZS5jcml0aWNhbC5hcHBseShudWxsLCBhcmd1bWVudHMpOwogIH0KfTs="},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/core/services/LogService.js"],"names":["appConstants","log","SUPPRESS_LOGS","console","apply","arguments","debug","warn","error","critical"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,YAAP,MAAyB,2BAAzB;AAEA,eAAe;AACXC,EAAAA,GADW,iBACL;AACFD,IAAAA,YAAY,CAACE,aAAb,IAA8BC,OAAO,CAACF,GAAR,CAAYG,KAAZ,CAAmB,IAAnB,EAAyBC,SAAzB,CAA9B;AACH,GAHU;AAIXC,EAAAA,KAJW,mBAIF;AACLN,IAAAA,YAAY,CAACE,aAAb,IAA8BC,OAAO,CAACG,KAAR,CAAcF,KAAd,CAAqB,IAArB,EAA2BC,SAA3B,CAA9B;AACH,GANU;AAOXE,EAAAA,IAPW,kBAOH;AACJP,IAAAA,YAAY,CAACE,aAAb,IAA8BC,OAAO,CAACI,IAAR,CAAaH,KAAb,CAAoB,IAApB,EAA0BC,SAA1B,CAA9B;AACH,GATU;AAUXG,EAAAA,KAVW,mBAUF;AACLR,IAAAA,YAAY,CAACE,aAAb,IAA8BC,OAAO,CAACK,KAAR,CAAcJ,KAAd,CAAqB,IAArB,EAA2BC,SAA3B,CAA9B;AACH,GAZU;AAaXI,EAAAA,QAbW,sBAaC;AACRT,IAAAA,YAAY,CAACE,aAAb,IAA8BC,OAAO,CAACM,QAAR,CAAiBL,KAAjB,CAAwB,IAAxB,EAA8BC,SAA9B,CAA9B;AACH;AAfU,CAAf","sourcesContent":["/* eslint-disable no-console */\n\n/**\n * TODO ( ionutt )\n * If you want to suppress base on the environment, we should show\n * the console from PWA SW, so the last arguments of this function should be\n * thread as an \"force\" parameter.\n */\n\nimport appConstants from '@core/utils/constants/app';\n\nexport default {\n    log() {\n        appConstants.SUPPRESS_LOGS || console.log.apply( null, arguments );\n    },\n    debug( ) {\n        appConstants.SUPPRESS_LOGS || console.debug.apply( null, arguments );\n    },\n    warn( ) {\n        appConstants.SUPPRESS_LOGS || console.warn.apply( null, arguments );\n    },\n    error( ) {\n        appConstants.SUPPRESS_LOGS || console.error.apply( null, arguments );\n    },\n    critical( ) {\n        appConstants.SUPPRESS_LOGS || console.critical.apply( null, arguments );\n    }\n};\n"]}]}