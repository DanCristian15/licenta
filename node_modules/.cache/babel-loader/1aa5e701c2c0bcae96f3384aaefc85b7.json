{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/store/modules/packageOffers.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/store/modules/packageOffers.js","mtime":1645805365974},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/store/modules/packageOffers.js"],"names":["Schema","apiServicePackageOffers","mutationTypes","LogService","normalizeBundleSections","normalizeBundleDetails","ApiCancelService","normalizePackageDetails","packagesOffersFilters","packageOffersHotels","STORE_NAME","DEFAULT_STATE","details","packageDetails","list","loading","loadingCounter","name","namespaced","state","mutations","setList","data","setDetails","setPackageDetails","START_LOADING","STOP_LOADING","getters","hasByEventId","id","Number","length","getDetailsByEventId","description","getAvailable","available","getLoading","actions","init","dispatch","eventId","root","oneByEventId","commit","api","cancelToken","getToken","packageOffers","detailsByEventId","response","success","debug","dataNormalized","eventDetails","oneByExternalId","externalId","detailsByExternalId","getSectionsByEventId","guestCount","sectionsByEventId","normalizedSections","sections","modules","filters","hotels","_persistent","getDataToSave","getDataToLoad","schema","required","validate","Error","e","error"],"mappings":"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","sourcesContent":["import Schema from 'validate';\nimport apiServicePackageOffers from '@core/api/apiServicePackageOffers';\nimport mutationTypes from '@core/helpers/storeFactories/helpers/mutationTypes';\nimport LogService from '@services/LogService';\nimport { normalizeBundleSections } from '@core/data/response/normalizeBundleSections';\nimport { normalizeBundleDetails } from '@core/data/response/normalizeBundleDetails';\nimport ApiCancelService from '@services/ApiCancelService';\nimport { normalizePackageDetails } from '@core/data/response/normalizePackageDetails';\nimport packagesOffersFilters from './packagesOffersFilters';\nimport packageOffersHotels from './packageOffersHotels';\n\nconst STORE_NAME = 'packageOffers';\nconst DEFAULT_STATE = {\n    details: {},\n    packageDetails: {},\n    list: [],\n    loading: false,\n    loadingCounter: 0\n};\n\nexport default {\n    name: STORE_NAME,\n    namespaced: true,\n    state: { ...DEFAULT_STATE },\n    mutations: {\n        setList( state, data ) {\n            state.list = [ ...data ];\n        },\n        setDetails( state, details ) {\n            state.details = details;\n        },\n        setPackageDetails( state, packageDetails ) {\n            state.packageDetails = packageDetails;\n        },\n        [ mutationTypes.START_LOADING ] ( state ) {\n            state.loadingCounter = state.loadingCounter + 1;\n            state.loading = !!state.loadingCounter;\n        },\n        [ mutationTypes.STOP_LOADING ] ( state ) {\n            state.loadingCounter = state.loadingCounter > 0 ? state.loadingCounter - 1 : 0;\n            state.loading = !!state.loadingCounter;\n        },\n    },\n    getters: {\n        hasByEventId: state => ( id ) => {\n            return state.details.id === Number( id ) && !!state.list.length;\n        },\n        getDetailsByEventId: state => (  ) => {\n            return state.packageDetails.description;\n        },\n        getAvailable: state => ( id ) => {\n            return Number( state.details.id ) === Number( id ) && state.packageDetails.available;\n        },\n        getLoading: state => {\n            return state.loading;\n        }\n    },\n    actions: {\n        init: async ( { state, dispatch }, { eventId } ) => {\n            if ( eventId !== state.details.id ) {\n                dispatch( 'packageOffers/filters/clear', null, { root: true } );\n            }\n        },\n        oneByEventId: async ( { commit }, eventId  ) => {\n            commit( mutationTypes.START_LOADING );\n            const api = await apiServicePackageOffers( '' );\n            const cancelToken = ApiCancelService.getToken( 'packageOffers.oneByEventId' );\n            const response = await api.packageOffers.detailsByEventId(\n                eventId,\n                {\n                    cancelToken\n                }\n            );\n\n            if ( !response.success ) {\n                LogService.debug( 'problem getting package details by event' + eventId );\n                commit( 'setPackageDetails', {\n                    available: false\n                } );\n\n                commit( mutationTypes.STOP_LOADING );\n                return response;\n            }\n\n            const dataNormalized = normalizeBundleDetails( response.data );\n            const { eventDetails, packageDetails } = dataNormalized;\n\n\n            commit( 'setDetails', { id: eventId, ...eventDetails } );\n            commit( 'setPackageDetails', packageDetails );\n            commit( mutationTypes.STOP_LOADING );\n            return { success: true, data: dataNormalized };\n        },\n        oneByExternalId: async ( { commit }, externalId ) => {\n            commit( mutationTypes.START_LOADING );\n            const api = await apiServicePackageOffers( '' );\n            const cancelToken = ApiCancelService.getToken( 'packageOffers.oneByExternalId' );\n            const response = await api.packageOffers.detailsByExternalId(\n                externalId,\n                {\n                    cancelToken\n                }\n            );\n\n            if ( response.success ) {\n                commit( mutationTypes.STOP_LOADING );\n                return { success: true, data: normalizePackageDetails( response.data ) };\n            } else {\n                LogService.debug( 'problem getting package details by external id' + externalId );\n                return response;\n            }\n        },\n        getSectionsByEventId: async ( { commit }, { eventId, guestCount } = { } ) => {\n            commit( mutationTypes.START_LOADING );\n\n            const api = await apiServicePackageOffers( '' );\n            const cancelToken = ApiCancelService.getToken( 'packageOffers.getSectionsByEventId' );\n            const response = await api.packageOffers.sectionsByEventId(\n                { eventId, guestCount },\n                {\n                    cancelToken\n                }\n            );\n\n            if ( response.success ) {\n                const normalizedSections = normalizeBundleSections( response.data );\n                commit( 'setList', normalizedSections );\n\n                commit( mutationTypes.STOP_LOADING );\n                return { success: true, data: {\n                    sections: normalizedSections\n                } };\n            } else {\n                LogService.debug( 'problem loading sections by event ' + eventId );\n                commit( mutationTypes.STOP_LOADING );\n                return response;\n            }\n        },\n    },\n    modules: {\n        filters: packagesOffersFilters,\n        hotels: packageOffersHotels,\n    },\n    _persistent: {\n        getDataToSave: ( state ) => {\n            return {\n                filters: packagesOffersFilters._persistent.getDataToSave( state[STORE_NAME] ),\n                details: state[STORE_NAME].details,\n            };\n        },\n        getDataToLoad: ( data ) => {\n            try {\n                const schema = new Schema( {\n                    details: {\n                        required: true,\n                    }\n                } );\n                if ( !data || schema.validate( { ...data } ).length ) {\n                    throw( new Error( 'Invalid schema for package offers store' ) );\n                }\n                return {\n                    data: data.details,\n                    filters: packagesOffersFilters._persistent.getDataToLoad( data.filters )\n                };\n            } catch ( e ) {\n                LogService.error( `Vuex session state cannot be loaded: PackageOffers: ${ e }` );\n                return null;\n            }\n        }\n    },\n};\n"]}]}