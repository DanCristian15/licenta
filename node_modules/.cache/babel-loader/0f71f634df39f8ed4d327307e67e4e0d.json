{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/user/loggedUser.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/user/loggedUser.js","mtime":1649269648993},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CnZhciBTVE9SRV9OQU1FID0gJ2xvZ2dlZFVzZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogU1RPUkVfTkFNRSwKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICBpc0xvZ2dlZDogJycsCiAgICBsb2dnZWRVc2VyOiB7CiAgICAgIG5hbWU6ICcnLAogICAgICBlbWFpbDogJycsCiAgICAgIHBhc3N3b3JkOiAnJywKICAgICAgdXNlcm5hbWU6ICcnCiAgICB9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBnZXRMb2dnZWRVc2VyOiBmdW5jdGlvbiBnZXRMb2dnZWRVc2VyKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5sb2dnZWRVc2VyOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBzZXRMb2dnZWRVc2VyOiBmdW5jdGlvbiBzZXRMb2dnZWRVc2VyKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLmxvZ2dlZFVzZXIubmFtZSA9IHBheWxvYWQubmFtZTsKICAgICAgc3RhdGUubG9nZ2VkVXNlci5lbWFpbCA9IHBheWxvYWQuZW1haWw7CiAgICAgIHN0YXRlLmxvZ2dlZFVzZXIucGFzc3dvcmQgPSBwYXlsb2FkLnBhc3N3b3JkOwogICAgICBzdGF0ZS5sb2dnZWRVc2VyLnVzZXJuYW1lID0gcGF5bG9hZC51c2VybmFtZTsKICAgIH0sCiAgICBzZXRJc0xvZ2dlZFRvVHJ1ZTogZnVuY3Rpb24gc2V0SXNMb2dnZWRUb1RydWUoc3RhdGUpIHsKICAgICAgc3RhdGUuaXNMb2dnZWQgPSB0cnVlOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgY29tbWl0U2V0TG9nZ2VkVXNlcjogZnVuY3Rpb24gY29tbWl0U2V0TG9nZ2VkVXNlcihfcmVmLCBwYXlsb2FkKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgY29tbWl0KCdzZXRMb2dnZWRVc2VyJywgcGF5bG9hZCk7CiAgICB9LAogICAgY29tbWl0U2V0SXNMb2dnZWRUb1RydWU6IGZ1bmN0aW9uIGNvbW1pdFNldElzTG9nZ2VkVG9UcnVlKF9yZWYyKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgIGNvbW1pdCgnc2V0SXNMb2dnZWRUb1RydWUnKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/user/loggedUser.js"],"names":["STORE_NAME","name","namespaced","state","isLogged","loggedUser","email","password","username","getters","getLoggedUser","mutations","setLoggedUser","payload","setIsLoggedToTrue","actions","commitSetLoggedUser","commit","commitSetIsLoggedToTrue"],"mappings":";AACA,IAAMA,UAAU,GAAG,YAAnB;AAEA,eAAgB;AACZC,EAAAA,IAAI,EAAED,UADM;AAEZE,EAAAA,UAAU,EAAE,IAFA;AAGZC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE,EADP;AAEHC,IAAAA,UAAU,EAAE;AACRJ,MAAAA,IAAI,EAAE,EADE;AAERK,MAAAA,KAAK,EAAE,EAFC;AAGRC,MAAAA,QAAQ,EAAE,EAHF;AAIRC,MAAAA,QAAQ,EAAE;AAJF;AAFT,GAHK;AAYZC,EAAAA,OAAO,EAAE;AACLC,IAAAA,aADK,yBACUP,KADV,EACkB;AACnB,aAAOA,KAAK,CAACE,UAAb;AACH;AAHI,GAZG;AAiBZM,EAAAA,SAAS,EAAE;AACPC,IAAAA,aAAa,EAAE,uBAAET,KAAF,EAASU,OAAT,EAAsB;AACjCV,MAAAA,KAAK,CAACE,UAAN,CAAiBJ,IAAjB,GAAwBY,OAAO,CAACZ,IAAhC;AACAE,MAAAA,KAAK,CAACE,UAAN,CAAiBC,KAAjB,GAAyBO,OAAO,CAACP,KAAjC;AACAH,MAAAA,KAAK,CAACE,UAAN,CAAiBE,QAAjB,GAA4BM,OAAO,CAACN,QAApC;AACAJ,MAAAA,KAAK,CAACE,UAAN,CAAiBG,QAAjB,GAA4BK,OAAO,CAACL,QAApC;AACH,KANM;AAOPM,IAAAA,iBAAiB,EAAE,2BAAEX,KAAF,EAAa;AAC5BA,MAAAA,KAAK,CAACC,QAAN,GAAiB,IAAjB;AACH;AATM,GAjBC;AA4BZW,EAAAA,OAAO,EAAE;AACLC,IAAAA,mBADK,qCAC4BH,OAD5B,EACsC;AAAA,UAApBI,MAAoB,QAApBA,MAAoB;AACvCA,MAAAA,MAAM,CAAE,eAAF,EAAmBJ,OAAnB,CAAN;AACH,KAHI;AAILK,IAAAA,uBAJK,0CAIiC;AAAA,UAAXD,MAAW,SAAXA,MAAW;AAClCA,MAAAA,MAAM,CAAE,mBAAF,CAAN;AACH;AANI;AA5BG,CAAhB","sourcesContent":["\nconst STORE_NAME = 'loggedUser';\n\nexport default  {\n    name: STORE_NAME,\n    namespaced: true,\n    state: {\n        isLogged: '',\n        loggedUser: {\n            name: '',\n            email: '',\n            password: '',\n            username: ''\n        }\n    },\n    getters: {\n        getLoggedUser( state ) {\n            return state.loggedUser;\n        }\n    },\n    mutations: {\n        setLoggedUser: ( state, payload ) => {\n            state.loggedUser.name = payload.name;\n            state.loggedUser.email = payload.email;\n            state.loggedUser.password = payload.password;\n            state.loggedUser.username = payload.username;\n        },\n        setIsLoggedToTrue: ( state ) => {\n            state.isLogged = true;\n        }\n    },\n    actions: {\n        commitSetLoggedUser( { commit }, payload ) {\n            commit( 'setLoggedUser', payload );\n        },\n        commitSetIsLoggedToTrue( { commit } ) {\n            commit( 'setIsLoggedToTrue' );\n        }\n    }\n};"]}]}