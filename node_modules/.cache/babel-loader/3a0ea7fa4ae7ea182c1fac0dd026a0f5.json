{"remainingRequest":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/proiect-licenta-front/src/core/shared/components/notifications/mixins/EventHealthCheckWarningCardMixin.js","dependencies":[{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/src/core/shared/components/notifications/mixins/EventHealthCheckWarningCardMixin.js","mtime":1645805363969},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/proiect-licenta-front/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnN0YXJ0cy13aXRoLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBoZWFsdGhDaGVjazogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgdGl0bGU6IGZ1bmN0aW9uIHRpdGxlKCkgewogICAgICByZXR1cm4gdGhpcy5oZWFsdGhDaGVjay5zdW1tYXJ5OwogICAgfSwKICAgIG1lc3NhZ2U6IGZ1bmN0aW9uIG1lc3NhZ2UoKSB7CiAgICAgIHJldHVybiB0aGlzLmhlYWx0aENoZWNrLmRlc2NyaXB0aW9uOwogICAgfSwKICAgIGxlYXJuTW9yZVVybDogZnVuY3Rpb24gbGVhcm5Nb3JlVXJsKCkgewogICAgICB2YXIgbGVhcm5Nb3JlVXJsID0gdGhpcy5oZWFsdGhDaGVjay5sZWFybk1vcmVVcmw7CiAgICAgIHZhciBoYXNWYWxpZFVybFByb3RvY29sID0gWydodHRwOi8vJywgJ2h0dHBzOi8vJ10uc29tZShmdW5jdGlvbiAocHJvdG9jb2wpIHsKICAgICAgICByZXR1cm4gbGVhcm5Nb3JlVXJsLnN0YXJ0c1dpdGgocHJvdG9jb2wpOwogICAgICB9KTsKICAgICAgcmV0dXJuIGhhc1ZhbGlkVXJsUHJvdG9jb2wgPyBsZWFybk1vcmVVcmwgOiAiaHR0cDovLyIuY29uY2F0KGxlYXJuTW9yZVVybCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/cristiandan/Desktop/proiect-licenta-front/src/core/shared/components/notifications/mixins/EventHealthCheckWarningCardMixin.js"],"names":["props","healthCheck","type","Object","required","computed","title","summary","message","description","learnMoreUrl","hasValidUrlProtocol","some","protocol","startsWith"],"mappings":";;;AAAA,eAAe;AACXA,EAAAA,KAAK,EAAE;AACHC,IAAAA,WAAW,EAAE;AACTC,MAAAA,IAAI,EAAEC,MADG;AAETC,MAAAA,QAAQ,EAAE;AAFD;AADV,GADI;AAOXC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KADM,mBACG;AACL,aAAO,KAAKL,WAAL,CAAiBM,OAAxB;AACH,KAHK;AAINC,IAAAA,OAJM,qBAIK;AACP,aAAO,KAAKP,WAAL,CAAiBQ,WAAxB;AACH,KANK;AAONC,IAAAA,YAPM,0BAOS;AAAA,UACHA,YADG,GACc,KAAKT,WADnB,CACHS,YADG;AAEX,UAAMC,mBAAmB,GAAG,CAAE,SAAF,EAAa,UAAb,EAA0BC,IAA1B,CAAgC,UAAAC,QAAQ;AAAA,eAAIH,YAAY,CAACI,UAAb,CAAyBD,QAAzB,CAAJ;AAAA,OAAxC,CAA5B;AACA,aAAOF,mBAAmB,GAAGD,YAAH,oBAA4BA,YAA5B,CAA1B;AACH;AAXK;AAPC,CAAf","sourcesContent":["export default {\n    props: {\n        healthCheck: {\n            type: Object,\n            required: true\n        }\n    },\n    computed: {\n        title () {\n            return this.healthCheck.summary;\n        },\n        message () {\n            return this.healthCheck.description;\n        },\n        learnMoreUrl() {\n            const { learnMoreUrl } = this.healthCheck;\n            const hasValidUrlProtocol = [ 'http://', 'https://' ].some( protocol => learnMoreUrl.startsWith( protocol ) );\n            return hasValidUrlProtocol ? learnMoreUrl : `http://${learnMoreUrl}`;\n        }\n    }\n};"]}]}