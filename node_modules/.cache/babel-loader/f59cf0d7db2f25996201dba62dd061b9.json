{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/core/filters/period.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/filters/period.js","mtime":1645805363891},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGRhdGVDb25zdGFudHMgZnJvbSAnQGNvcmUvdXRpbHMvY29uc3RhbnRzL2RhdGUnOwppbXBvcnQgeyBmb3JtYXQgYXMgZGF0ZVV0aWxzRm9ybWF0LCBwYXJzZVN0cmluZyBhcyBkYXRlVXRpbHNQYXJzZVN0cmluZyB9IGZyb20gJ0Bjb3JlL3V0aWxzL2RhdGVVdGlscyc7CmltcG9ydCB7IGdldExhbmcgYXMgZG9jdW1lbnRVdGlsc0dldExhbmcgfSBmcm9tICdAY29yZS91dGlscy9kb2N1bWVudFV0aWxzJzsKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGVyaW9kKF9yZWYpIHsKICB2YXIgc3RhcnREYXRlID0gX3JlZi5zdGFydERhdGUsCiAgICAgIGVuZERhdGUgPSBfcmVmLmVuZERhdGU7CiAgdmFyIGZvcm1hdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZGF0ZUNvbnN0YW50cy5GT1JNQVQuVUlfREFURTsKICB2YXIgbGFuZ3VhZ2UgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IGRvY3VtZW50VXRpbHNHZXRMYW5nKCk7CiAgdmFyIHJldCA9ICcnOwogIHJldCArPSBzdGFydERhdGUgPyBkYXRlVXRpbHNGb3JtYXQoZGF0ZVV0aWxzUGFyc2VTdHJpbmcoc3RhcnREYXRlKSwgZm9ybWF0LCBsYW5ndWFnZSkgOiAnJzsKICByZXQgKz0gZW5kRGF0ZSA/ICIgLSAiLmNvbmNhdChkYXRlVXRpbHNGb3JtYXQoZGF0ZVV0aWxzUGFyc2VTdHJpbmcoZW5kRGF0ZSksIGZvcm1hdCwgbGFuZ3VhZ2UpKSA6ICcnOwogIHJldHVybiByZXQ7Cn0="},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/core/filters/period.js"],"names":["dateConstants","format","dateUtilsFormat","parseString","dateUtilsParseString","getLang","documentUtilsGetLang","period","startDate","endDate","FORMAT","UI_DATE","language","ret"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,4BAA1B;AACA,SACIC,MAAM,IAAIC,eADd,EAEIC,WAAW,IAAIC,oBAFnB,QAGO,uBAHP;AAIA,SAASC,OAAO,IAAIC,oBAApB,QAAgD,2BAAhD;AAEA,eAAe,SAASC,MAAT,OAAqH;AAAA,MAAlGC,SAAkG,QAAlGA,SAAkG;AAAA,MAAvFC,OAAuF,QAAvFA,OAAuF;AAAA,MAA5ER,MAA4E,uEAAnED,aAAa,CAACU,MAAd,CAAqBC,OAA8C;AAAA,MAArCC,QAAqC,uEAA1BN,oBAAoB,EAAM;AAChI,MAAIO,GAAG,GAAG,EAAV;AAEAA,EAAAA,GAAG,IAAIL,SAAS,GAAGN,eAAe,CAAEE,oBAAoB,CAAEI,SAAF,CAAtB,EAAqCP,MAArC,EAA6CW,QAA7C,CAAlB,GAA4E,EAA5F;AACAC,EAAAA,GAAG,IAAIJ,OAAO,gBAAUP,eAAe,CAAEE,oBAAoB,CAAEK,OAAF,CAAtB,EAAmCR,MAAnC,EAA2CW,QAA3C,CAAzB,IAAkF,EAAhG;AAEA,SAAOC,GAAP;AACH","sourcesContent":["import dateConstants from '@core/utils/constants/date';\nimport {\n    format as dateUtilsFormat,\n    parseString as dateUtilsParseString\n} from '@core/utils/dateUtils';\nimport { getLang as documentUtilsGetLang } from '@core/utils/documentUtils';\n\nexport default function period( { startDate, endDate }, format = dateConstants.FORMAT.UI_DATE, language = documentUtilsGetLang( ) ) {\n    let ret = '';\n\n    ret += startDate ? dateUtilsFormat( dateUtilsParseString( startDate ), format, language ) : '';\n    ret += endDate  ? ` - ${dateUtilsFormat( dateUtilsParseString( endDate ), format, language )}`: '';\n\n    return ret;\n}\n"]}]}