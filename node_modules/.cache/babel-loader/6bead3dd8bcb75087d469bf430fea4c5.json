{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/attractions/attractions.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/attractions/attractions.js","mtime":1645805363989},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/core/store/modules/attractions/attractions.js"],"names":["apiConstants","entityConstants","apiServiceAttractions","LogService","utils","STORE_NAME","ITEMS_PER_PAGE","name","namespaced","state","list","detail","totalCount","timestamp","loading","listFirstLoad","refresh","allItemsLoaded","filterLocationRange","filter","city","startDate","endDate","mutations","setLoading","setTotalCount","setListFirstLoad","clearList","appendPageToList","pageData","Date","getTime","setRefresh","setDetail","setFilterLocationRange","value","setFilter","getters","isAllItemsLoaded","length","actions","get","commit","loadNextPage","search","userAnalytics","firstLoad","needsRefresh","needsLoadNextPage","api","getItemsWithCityLocationFallback","attractions","offset","limit","response","success","data","debug","context","requestConfig","searchList","dispatch","searchByEvent","eventId","getByEvent","one","id","status","STATUS","NOT_FOUND","entityType","TYPES","ATTRACTION","entityId","root","updateFilter"],"mappings":"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","sourcesContent":["import apiConstants from '@core/utils/constants/api';\nimport entityConstants from '@core/utils/constants/entity';\nimport apiServiceAttractions from '@core/api/apiServiceAttractions';\nimport LogService from '@services/LogService';\nimport utils from '../_utils';\n\nconst STORE_NAME = 'attractions';\nconst ITEMS_PER_PAGE = 5;\n\nexport default {\n    name: STORE_NAME,\n    namespaced: true,\n    state: {\n        list:               [],\n        detail:             {},\n        totalCount:         0,\n        timestamp:          0,\n        loading:            false,\n        listFirstLoad:      true,\n        refresh:            false,\n        allItemsLoaded:     false,\n        filterLocationRange: 0,\n        filter: {\n            city: {},\n            startDate: null,\n            endDate: null,\n        }\n    },\n    mutations: {\n        setLoading( state, loading ) {\n            state.loading = loading;\n        },\n        setTotalCount ( state, totalCount ) {\n            state.totalCount = totalCount;\n        },\n        setListFirstLoad( state, listFirstLoad ) {\n            state.listFirstLoad = listFirstLoad;\n        },\n        clearList( state ) {\n            state.list = [ ];\n        },\n        appendPageToList( state, pageData ) {\n            state.timestamp = new Date( ).getTime( );\n            state.list = [\n                ...state.list,\n                ...pageData\n            ];\n        },\n        setRefresh( state, refresh ) {\n            state.refresh = refresh;\n        },\n        setDetail( state, detail ) {\n            state.detail = detail;\n        },\n        setFilterLocationRange( state, value ) {\n            state.filterLocationRange = value;\n        },\n        setFilter( state, filter ) {\n            state.filter = {\n                ...state.filter,\n                ...filter\n            };\n        }\n    },\n\n    getters: {\n        isAllItemsLoaded: state => {\n            return state.list.length >= state.totalCount;\n        }\n    },\n\n    actions: {\n        get: async ( { commit, state }, { refresh = false, loadNextPage = false, search, userAnalytics = false, firstLoad = true } = { } ) => {\n            const needsRefresh = refresh || state.refresh;\n            const needsLoadNextPage = needsRefresh || loadNextPage;\n            const api = await apiServiceAttractions( '' );\n\n            if ( needsRefresh ) {\n                commit( 'clearList' );\n                commit( 'setTotalCount', 0 );\n                if ( firstLoad ) {\n                    commit( 'setListFirstLoad', false );\n                }\n            }\n\n            if ( needsLoadNextPage ) {\n                commit( 'setLoading', true );\n                const response = await utils.getItemsWithCityLocationFallback(\n                    api.attractions.get,\n                    { state, commit },\n                    {\n                        offset: state.list.length,\n                        limit:  ITEMS_PER_PAGE,\n                        ...search,\n                    },\n                    { userAnalytics }\n                );\n\n\n                if ( response.success ) {\n                    const { list, totalCount } = response.data;\n                    !totalCount || commit( 'setTotalCount', totalCount );\n                    commit( 'appendPageToList', list );\n                    commit( 'setListFirstLoad', false );\n                    commit( 'setLoading', false );\n\n                    return state.list;\n                } else {\n                    LogService.debug( 'problem loading attractions ' );\n                    commit( 'setListFirstLoad', false );\n                    commit( 'setLoading', false );\n                    return false;\n                }\n            }\n        },\n        search: async ( context, { search, requestConfig } ) => {\n            const api = await apiServiceAttractions( '' );\n            return await api.attractions.get( search, { }, requestConfig );\n        },\n        searchList: async( { dispatch }, { search, requestConfig } ) => {\n            const response = await dispatch( 'search', { search, requestConfig } );\n            if ( response.success ) {\n                return response.data.list;\n            }\n            return false;\n        },\n        searchByEvent: async ( context, { eventId, search } ) => {\n            const api = await apiServiceAttractions( '' );\n            return await api.attractions.getByEvent( eventId, search );\n        },\n        one: async ( { commit, state, dispatch }, id ) => {\n            const api = await apiServiceAttractions( '' );\n            const response = await api.attractions.one( id );\n\n            if ( response.success ) {\n                commit( 'setDetail', response.data );\n                return state.detail;\n            } else {\n                if ( response.status === apiConstants.STATUS.NOT_FOUND ) {\n                    dispatch( 'user/browsingHistory/deleteEntity', { entityType: entityConstants.TYPES.ATTRACTION, entityId: id }, { root: true } );\n                }\n                LogService.debug( 'problems loading event ' + id );\n                return false;\n            }\n        },\n        updateFilter( { commit }, filter ) {\n            commit( 'setFilter', filter );\n        },\n        needsRefresh( { commit } ) {\n            commit( 'setRefresh', true );\n        }\n    }\n};\n"]}]}