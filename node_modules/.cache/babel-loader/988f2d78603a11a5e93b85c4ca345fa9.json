{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/store/modules/user/userProfile.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/store/modules/user/userProfile.js","mtime":1645805365976},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/tenants/ticketmaster/app/store/modules/user/userProfile.js"],"names":["Schema","apiServiceUser","mutationTypes","LogService","STORE_NAME","DEFAULT_STATE","detail","email","loading","error","sessionId","name","namespaced","state","getters","getDetail","balance","isAuth","hasError","mutations","setDetail","data","setError","isError","setEmail","setLoading","setSessionId","CLEAR","actions","get","commit","api","user","getUserProfile","response","success","debug","getSession","_persistent","getDataToSave","getDataToLoad","schema","type","String","required","validate","length","Error","JSON","stringify"],"mappings":"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","sourcesContent":["import Schema from 'validate';\nimport apiServiceUser from '@core/api/apiServiceUser';\nimport mutationTypes from '@core/helpers/storeFactories/helpers/mutationTypes';\nimport LogService from '@services/LogService';\n\nconst STORE_NAME = 'profile';\nconst DEFAULT_STATE = {\n    detail: null,\n    email: null,\n    loading: false,\n    error: false,\n    sessionId: null\n};\n\nexport default {\n    name: STORE_NAME,\n    namespaced: true,\n    state: { ...DEFAULT_STATE },\n    getters: {\n        loading: state => state.loading,\n        getDetail: state => state.detail,\n        balance: state => state.detail ? state.detail.balance : 0,\n        email: state => state.email,\n        isAuth: state => !!state.email,\n        hasError: state => state.error\n    },\n    mutations: {\n        setDetail( state, data ) {\n            state.detail = data;\n        },\n        setError( state, isError ) {\n            state.error = isError;\n        },\n        setEmail( state, email ) {\n            state.email = email;\n        },\n        setLoading( state, loading ) {\n            state.loading = loading;\n        },\n        setSessionId( state, sessionId ) {\n            state.sessionId = sessionId;\n        },\n        [mutationTypes.CLEAR]( state ) {\n            state.setError = false;\n            state.email = null;\n            state.detail = null;\n            state.sessionId = null;\n        }\n    },\n    actions: {\n        get: async ( { commit, state }, email ) => {\n            if ( email === null ) return;\n            commit( 'setLoading', true );\n            const api = await apiServiceUser( '' );\n            const response = await api.user.getUserProfile( { email: email } );\n            commit( 'setError', false );\n\n            if ( response.success ) {\n                commit( 'setDetail', response.data );\n                commit( 'setEmail', email );\n                commit( 'setLoading', false );\n                return state.detail;\n            } else {\n                // Error handling is just a simulation\n                // this will be most probably made by the integration of points.com login\n                commit( 'setError', true );\n                commit( 'setLoading', false );\n                LogService.debug( 'problems loading email ' + email );\n                return false;\n            }\n        },\n        /**\n         * Hack until we have an session with points.com\n         */\n        getSession: async ( { commit }, email ) => {\n            const api = await apiServiceUser( '' );\n            const response = await api.user.getSession( { email } );\n            if ( response.success ) {\n                commit( 'setSessionId', response.data );\n                return response.data;\n            } else {\n                LogService.debug( 'problems loading session for ' + email );\n                commit( 'clear' );\n                return null;\n            }\n        },\n        setError( { commit }, isError ) {\n            commit( 'setError', isError );\n        },\n        setLoading( { commit }, loading = true ) {\n            commit ( 'setLoading', loading );\n        },\n        /**\n         * TODOs\n         * Temporary action to store email address\n         *\n         * @param {*} param0\n         * @param {*} email\n         */\n        setEmail( { commit }, email ) {\n            commit( 'setEmail', email );\n        }\n    },\n    _persistent: {\n        getDataToSave: ( state ) => {\n            return {\n                email: state[STORE_NAME].email,\n                sessionId: state[STORE_NAME].sessionId,\n            };\n        },\n        getDataToLoad: ( data ) => {\n            const schema = new Schema( {\n                email: {\n                    type: String,\n                    required: true,\n                },\n            } );\n            if ( !data || schema.validate( data ).length ) {\n                throw( new Error( 'Invalid schema for userProfile store', JSON.stringify( schema.validate ) ) );\n            }\n            return {\n                email: data.email,\n                sessionId: data.sessionId,\n            };\n        }\n    }\n};\n"]}]}