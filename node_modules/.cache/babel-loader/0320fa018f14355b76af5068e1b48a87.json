{"remainingRequest":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js!/Users/cristiandan/Desktop/lifestyle-ui/src/core/data/response/normalize/responsiveImage.js","dependencies":[{"path":"/Users/cristiandan/Desktop/lifestyle-ui/src/core/data/response/normalize/responsiveImage.js","mtime":1645805363881},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637061222564},{"path":"/Users/cristiandan/Desktop/lifestyle-ui/node_modules/babel-loader/lib/index.js","mtime":1637061222406}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5vcm1hbGl6ZShpbWFnZSkgewogIHJldHVybiB7CiAgICB0eXBlOiBpbWFnZS5jYXRlZ29yeSwKICAgIG9yaWdpbmFsOiAoaW1hZ2UuaXRlbXMgfHwgW10pLmZpbmQoZnVuY3Rpb24gKGVsZW0pIHsKICAgICAgcmV0dXJuICFlbGVtLndpZHRoOwogICAgfSksCiAgICBzaXplczogKGltYWdlLml0ZW1zIHx8IFtdKS5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgcmV0dXJuIGl0ZW0ud2lkdGg7CiAgICB9KS5tYXAobm9ybWFsaXplSXRlbVNpemUpLnNvcnQoZnVuY3Rpb24gKGZpcnN0LCBzZWNvbmQpIHsKICAgICAgcmV0dXJuIGZpcnN0LndpZHRoIC0gc2Vjb25kLndpZHRoOwogICAgfSkKICB9Owp9Cgp2YXIgbm9ybWFsaXplSXRlbVNpemUgPSBmdW5jdGlvbiBub3JtYWxpemVJdGVtU2l6ZShfcmVmKSB7CiAgdmFyIHVybCA9IF9yZWYudXJsLAogICAgICB3aWR0aCA9IF9yZWYud2lkdGgsCiAgICAgIGhlaWdodCA9IF9yZWYuaGVpZ2h0OwogIHJldHVybiB7CiAgICB1cmw6IHVybCwKICAgIHdpZHRoOiB3aWR0aCwKICAgIGhlaWdodDogaGVpZ2h0CiAgfTsKfTs="},{"version":3,"sources":["/Users/cristiandan/Desktop/lifestyle-ui/src/core/data/response/normalize/responsiveImage.js"],"names":["normalize","image","type","category","original","items","find","elem","width","sizes","filter","item","map","normalizeItemSize","sort","first","second","url","height"],"mappings":";;;AAAA,eAAe,SAASA,SAAT,CAAoBC,KAApB,EAA4B;AACvC,SAAO;AACHC,IAAAA,IAAI,EAAED,KAAK,CAACE,QADT;AAEHC,IAAAA,QAAQ,EAAE,CAAEH,KAAK,CAACI,KAAN,IAAe,EAAjB,EAAsBC,IAAtB,CAA4B,UAAAC,IAAI;AAAA,aAAI,CAACA,IAAI,CAACC,KAAV;AAAA,KAAhC,CAFP;AAGHC,IAAAA,KAAK,EAAE,CAAER,KAAK,CAACI,KAAN,IAAe,EAAjB,EACFK,MADE,CACM,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACH,KAAT;AAAA,KADV,EAEFI,GAFE,CAEGC,iBAFH,EAGFC,IAHE,CAGI,UAAEC,KAAF,EAASC,MAAT;AAAA,aAAqBD,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACR,KAA1C;AAAA,KAHJ;AAHJ,GAAP;AAQH;;AAGD,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,OAA8B;AAAA,MAA1BI,GAA0B,QAA1BA,GAA0B;AAAA,MAArBT,KAAqB,QAArBA,KAAqB;AAAA,MAAdU,MAAc,QAAdA,MAAc;AACpD,SAAO;AACHD,IAAAA,GAAG,EAAHA,GADG;AAEHT,IAAAA,KAAK,EAALA,KAFG;AAGHU,IAAAA,MAAM,EAANA;AAHG,GAAP;AAKH,CAND","sourcesContent":["export default function normalize( image ) {\n    return {\n        type: image.category,\n        original: ( image.items || [] ).find( elem => !elem.width ),\n        sizes: ( image.items || [] )\n            .filter( item => item.width )\n            .map( normalizeItemSize )\n            .sort( ( first, second ) => first.width - second.width ),\n    };\n}\n\n\nconst normalizeItemSize = ( { url, width, height } ) => {\n    return {\n        url,\n        width,\n        height,\n    };\n};"]}]}