@import "./z-index";

$content-max-width: 959px;

$border-radius: (
    'none': 0,
    'xxs': 2px,
    'xs': 4px,
    's': 6px,
    'm': 10px,
    'l': 19px,
    'xl': 30px,
    'circle': 50%
);

$spaces: (
    0: 0,
    1: 4px,
    2: 8px,
    3: 12px,
    4: 16px,
    5: 20px,
    6: 24px,
    7: 28px,
    8: 32px,
    9: 36px,
    10: 40px,
    11: 44px,
    12: 48px,
    13: 52px,
    14: 56px,
    15: 60px,
    16: 64px,
    17: 68px,
    n1: -4px,
    n2: -8px,
    n3: -12px,
    n4: -16px,
    n5: -20px,
    n6: -24px,
    n7: -28px,
    n8: -32px,
    n9: -36px,
    n10: -40px,
    n11: -44px,
    n12: -48px,
    n13: -52px,
    n14: -56px,
    n15: -60px,
    n16: -64px,
    n17: -68px,
    auto: auto,
);

@function theme-spacing( $args... ) {
    $argsLength: length( $args );

    @if ( $argsLength > 0 ) {
        $sizes: ();

        @each $arg in $args {
            $sizes: append( $sizes, map-get-strict( $spaces, $arg ) );
        }

        @return $sizes;
    }

    @else {
        @error "ERROR: Expects at least one argument, but none given.";
    }
}

@mixin border-radius( $level ) {
    border-radius: map-get-strict( $border-radius, $level ) !important;
}

@function border-radius( $args... ) {
    $argsLength: length( $args );

    @if ( $argsLength > 0 ) {
        $levels: ();

        @each $arg in $args {
            $levels: append( $levels, map-get-strict( $border-radius, $arg ) );
        }

        @return $levels;
    }

    @else {
        @error "ERROR: Expects at least one argument, but none given.";
    }
}